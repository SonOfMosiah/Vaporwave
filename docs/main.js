/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={424:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var a=n(81),i=n.n(a),s=n(645),r=n.n(s)()(i());r.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),r.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const o=r},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var o=0;o<this.length;o++){var d=this[o][0];null!=d&&(r[d]=!0)}for(var p=0;p<e.length;p++){var u=[].concat(e[p]);a&&r[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),t.push(u))}},t}},81:e=>{"use strict";e.exports=function(e){return e[1]}},838:(e,t,n)=>{var a=n(424);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(346).Z)("20211576",a,!1,{})},346:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var s=t[i],r=s[0],o={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.d(t,{Z:()=>m});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},r=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,d=0,p=!1,u=function(){},l=null,y="data-vue-ssr-id",c="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,i){p=n,l=i||{};var r=a(e,t);return T(r),function(t){for(var n=[],i=0;i<r.length;i++){var o=r[i];(d=s[o.id]).refs--,n.push(d)}for(t?T(r=a(e,t)):r=[],i=0;i<n.length;i++){var d;if(0===(d=n[i]).refs){for(var p=0;p<d.parts.length;p++)d.parts[p]();delete s[d.id]}}}}function T(e){for(var t=0;t<e.length;t++){var n=e[t],a=s[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(h(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(i=0;i<n.parts.length;i++)r.push(h(n.parts[i]));s[n.id]={id:n.id,refs:1,parts:r}}}}function f(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function h(e){var t,n,a=document.querySelector("style["+y+'~="'+e.id+'"]');if(a){if(p)return u;a.parentNode.removeChild(a)}if(c){var i=d++;a=o||(o=f()),t=_.bind(null,a,i,!1),n=_.bind(null,a,i,!0)}else a=f(),t=w.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var b,v=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function _(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(t,i);else{var s=document.createTextNode(i),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(s,r[t]):e.appendChild(s)}}function w(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute(y,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={id:a,exports:{}};return e[a](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=Object.freeze({}),t=Array.isArray;function a(e){return null==e}function i(e){return null!=e}function s(e){return!0===e}function r(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function o(e){return"function"==typeof e}function d(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function u(e){return"[object Object]"===p.call(e)}function l(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function y(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function c(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===p?JSON.stringify(e,null,2):String(e)}function m(e){var t=parseFloat(e);return isNaN(t)?e:t}function T(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var f=T("slot,component",!0),h=T("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var v=Object.prototype.hasOwnProperty;function _(e,t){return v.call(e,t)}function w(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var g=/-(\w)/g,k=w((function(e){return e.replace(g,(function(e,t){return t?t.toUpperCase():""}))})),M=w((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),x=/\B([A-Z])/g,S=w((function(e){return e.replace(x,"-$1").toLowerCase()})),A=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function P(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function I(e,t){for(var n in t)e[n]=t[n];return e}function O(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function E(e,t,n){}var R=function(e,t,n){return!1},F=function(e){return e};function C(e,t){if(e===t)return!0;var n=d(e),a=d(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),s=Array.isArray(t);if(i&&s)return e.length===t.length&&e.every((function(e,n){return C(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||s)return!1;var r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((function(n){return C(e[n],t[n])}))}catch(e){return!1}}function D(e,t){for(var n=0;n<e.length;n++)if(C(e[n],t))return n;return-1}function V(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function L(e,t){return e===t?0===e&&1/e!=1/t:e==e||t==t}var B="data-server-rendered",U=["component","directive","filter"],z=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:R,isReservedAttr:R,isUnknownElement:R,getTagNamespace:E,parsePlatformTagName:F,mustUseProp:R,async:!0,_lifecycleHooks:z},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function $(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function H(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(q.source,".$_\\d]")),j="__proto__"in{},G="undefined"!=typeof window,K=G&&window.navigator.userAgent.toLowerCase(),Y=K&&/msie|trident/.test(K),X=K&&K.indexOf("msie 9.0")>0,J=K&&K.indexOf("edge/")>0;K&&K.indexOf("android");var Z=K&&/iphone|ipad|ipod|ios/.test(K);K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K);var Q,ee=K&&K.match(/firefox\/(\d+)/),te={}.watch,ne=!1;if(G)try{var ae={};Object.defineProperty(ae,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,ae)}catch(e){}var ie=function(){return void 0===Q&&(Q=!G&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),Q},se=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return"function"==typeof e&&/native code/.test(e.toString())}var oe,de="undefined"!=typeof Symbol&&re(Symbol)&&"undefined"!=typeof Reflect&&re(Reflect.ownKeys);oe="undefined"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=null;function ue(e){void 0===e&&(e=null),e||pe&&pe._scope.off(),pe=e,e&&e._scope.on()}var le=function(){function e(e,t,n,a,i,s,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),ye=function(e){void 0===e&&(e="");var t=new le;return t.text=e,t.isComment=!0,t};function ce(e){return new le(void 0,void 0,void 0,String(e))}function me(e){var t=new le(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var Te=0,fe=function(){function e(){this.id=Te++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){b(this.subs,e)},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){for(var t=this.subs.slice(),n=0,a=t.length;n<a;n++)t[n].update()},e}();fe.target=null;var he=[];function be(e){he.push(e),fe.target=e}function ve(){he.pop(),fe.target=he[he.length-1]}var _e=Array.prototype,we=Object.create(_e);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=_e[e];H(we,e,(function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var i,s=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&r.observeArray(i),r.dep.notify(),s}))}));var ge=Object.getOwnPropertyNames(we),ke={},Me=!0;function xe(e){Me=e}var Se={notify:E,depend:E,addSub:E,removeSub:E},Ae=function(){function e(e,n,a){if(void 0===n&&(n=!1),void 0===a&&(a=!1),this.value=e,this.shallow=n,this.mock=a,this.dep=a?Se:new fe,this.vmCount=0,H(e,"__ob__",this),t(e)){if(!a)if(j)e.__proto__=we;else for(var i=0,s=ge.length;i<s;i++)H(e,o=ge[i],we[o]);n||this.observeArray(e)}else{var r=Object.keys(e);for(i=0;i<r.length;i++){var o;Ie(e,o=r[i],ke,void 0,n,a)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Pe(e[t],!1,this.mock)},e}();function Pe(e,n,a){var i;if(!(!d(e)||De(e)||e instanceof le))return _(e,"__ob__")&&e.__ob__ instanceof Ae?i=e.__ob__:!Me||!a&&ie()||!t(e)&&!u(e)||!Object.isExtensible(e)||e.__v_skip||(i=new Ae(e,n,a)),i}function Ie(e,n,a,i,s,r){var o=new fe,d=Object.getOwnPropertyDescriptor(e,n);if(!d||!1!==d.configurable){var p=d&&d.get,u=d&&d.set;p&&!u||a!==ke&&2!==arguments.length||(a=e[n]);var l=!s&&Pe(a,!1,r);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=p?p.call(e):a;return fe.target&&(o.depend(),l&&(l.dep.depend(),t(n)&&Re(n))),De(n)&&!s?n.value:n},set:function(t){var n=p?p.call(e):a;if(L(n,t)){if(u)u.call(e,t);else{if(p)return;if(!s&&De(n)&&!De(t))return void(n.value=t);a=t}l=!s&&Pe(t,!1,r),o.notify()}}}),o}}function Oe(e,n,a){if(!Ce(e)){var i=e.__ob__;return t(e)&&l(n)?(e.length=Math.max(e.length,n),e.splice(n,1,a),i&&!i.shallow&&i.mock&&Pe(a,!1,!0),a):n in e&&!(n in Object.prototype)?(e[n]=a,a):e._isVue||i&&i.vmCount?a:i?(Ie(i.value,n,a,void 0,i.shallow,i.mock),i.dep.notify(),a):(e[n]=a,a)}}function Ee(e,n){if(t(e)&&l(n))e.splice(n,1);else{var a=e.__ob__;e._isVue||a&&a.vmCount||Ce(e)||_(e,n)&&(delete e[n],a&&a.dep.notify())}}function Re(e){for(var n=void 0,a=0,i=e.length;a<i;a++)(n=e[a])&&n.__ob__&&n.__ob__.dep.depend(),t(n)&&Re(n)}function Fe(e){return function(e,t){Ce(e)||Pe(e,t,ie())}(e,!0),H(e,"__v_isShallow",!0),e}function Ce(e){return!(!e||!e.__v_isReadonly)}function De(e){return!(!e||!0!==e.__v_isRef)}function Ve(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(De(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=t[n];De(a)&&!De(e)?a.value=e:t[n]=e}})}var Le=w((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function Be(e,n){function a(){var e=a.fns;if(!t(e))return jt(e,null,arguments,n,"v-on handler");for(var i=e.slice(),s=0;s<i.length;s++)jt(i[s],null,arguments,n,"v-on handler")}return a.fns=e,a}function Ue(e,t,n,i,r,o){var d,p,u,l;for(d in e)p=e[d],u=t[d],l=Le(d),a(p)||(a(u)?(a(p.fns)&&(p=e[d]=Be(p,o)),s(l.once)&&(p=e[d]=r(l.name,p,l.capture)),n(l.name,p,l.capture,l.passive,l.params)):p!==u&&(u.fns=p,e[d]=u));for(d in t)a(e[d])&&i((l=Le(d)).name,t[d],l.capture)}function ze(e,t,n){var r;e instanceof le&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function d(){n.apply(this,arguments),b(r.fns,d)}a(o)?r=Be([d]):i(o.fns)&&s(o.merged)?(r=o).fns.push(d):r=Be([o,d]),r.merged=!0,e[t]=r}function Ne(e,t,n,a,s){if(i(t)){if(_(t,n))return e[n]=t[n],s||delete t[n],!0;if(_(t,a))return e[n]=t[a],s||delete t[a],!0}return!1}function qe(e){return r(e)?[ce(e)]:t(e)?He(e):void 0}function $e(e){return i(e)&&i(e.text)&&!1===e.isComment}function He(e,n){var o,d,p,u,l=[];for(o=0;o<e.length;o++)a(d=e[o])||"boolean"==typeof d||(u=l[p=l.length-1],t(d)?d.length>0&&($e((d=He(d,"".concat(n||"","_").concat(o)))[0])&&$e(u)&&(l[p]=ce(u.text+d[0].text),d.shift()),l.push.apply(l,d)):r(d)?$e(u)?l[p]=ce(u.text+d):""!==d&&l.push(ce(d)):$e(d)&&$e(u)?l[p]=ce(u.text+d.text):(s(e._isVList)&&i(d.tag)&&a(d.key)&&i(n)&&(d.key="__vlist".concat(n,"_").concat(o,"__")),l.push(d)));return l}function We(e,n,a,p,u,l){return(t(a)||r(a))&&(u=p,p=a,a=void 0),s(l)&&(u=2),function(e,n,a,s,r){if(i(a)&&i(a.__ob__))return ye();if(i(a)&&i(a.is)&&(n=a.is),!n)return ye();var p,u;if(t(s)&&o(s[0])&&((a=a||{}).scopedSlots={default:s[0]},s.length=0),2===r?s=qe(s):1===r&&(s=function(e){for(var n=0;n<e.length;n++)if(t(e[n]))return Array.prototype.concat.apply([],e);return e}(s)),"string"==typeof n){var l=void 0;u=e.$vnode&&e.$vnode.ns||N.getTagNamespace(n),p=N.isReservedTag(n)?new le(N.parsePlatformTagName(n),a,s,void 0,void 0,e):a&&a.pre||!i(l=Un(e.$options,"components",n))?new le(n,a,s,void 0,void 0,e):In(l,a,e,s,n)}else p=In(n,a,e,s);return t(p)?p:i(p)?(i(u)&&je(p,u),i(a)&&function(e){d(e.style)&&dn(e.style),d(e.class)&&dn(e.class)}(a),p):ye()}(e,n,a,p,u)}function je(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),i(e.children))for(var r=0,o=e.children.length;r<o;r++){var d=e.children[r];i(d.tag)&&(a(d.ns)||s(n)&&"svg"!==d.tag)&&je(d,t,n)}}function Ge(e,n){var a,s,r,o,p=null;if(t(e)||"string"==typeof e)for(p=new Array(e.length),a=0,s=e.length;a<s;a++)p[a]=n(e[a],a);else if("number"==typeof e)for(p=new Array(e),a=0;a<e;a++)p[a]=n(a+1,a);else if(d(e))if(de&&e[Symbol.iterator]){p=[];for(var u=e[Symbol.iterator](),l=u.next();!l.done;)p.push(n(l.value,p.length)),l=u.next()}else for(r=Object.keys(e),p=new Array(r.length),a=0,s=r.length;a<s;a++)o=r[a],p[a]=n(e[o],o,a);return i(p)||(p=[]),p._isVList=!0,p}function Ke(e,t,n,a){var i,s=this.$scopedSlots[e];s?(n=n||{},a&&(n=I(I({},a),n)),i=s(n)||(o(t)?t():t)):i=this.$slots[e]||(o(t)?t():t);var r=n&&n.slot;return r?this.$createElement("template",{slot:r},i):i}function Ye(e){return Un(this.$options,"filters",e)||F}function Xe(e,n){return t(e)?-1===e.indexOf(n):e!==n}function Je(e,t,n,a,i){var s=N.keyCodes[t]||n;return i&&a&&!N.keyCodes[t]?Xe(i,a):s?Xe(s,e):a?S(a)!==t:void 0===e}function Ze(e,n,a,i,s){if(a&&d(a)){t(a)&&(a=O(a));var r=void 0,o=function(t){if("class"===t||"style"===t||h(t))r=e;else{var o=e.attrs&&e.attrs.type;r=i||N.mustUseProp(n,o,t)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var d=k(t),p=S(t);d in r||p in r||(r[t]=a[t],s&&((e.on||(e.on={}))["update:".concat(t)]=function(e){a[t]=e}))};for(var p in a)o(p)}return e}function Qe(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||tt(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function et(e,t,n){return tt(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function tt(e,n,a){if(t(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&nt(e[i],"".concat(n,"_").concat(i),a);else nt(e,n,a)}function nt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function at(e,t){if(t&&u(t)){var n=e.on=e.on?I({},e.on):{};for(var a in t){var i=n[a],s=t[a];n[a]=i?[].concat(i,s):s}}return e}function it(e,n,a,i){n=n||{$stable:!a};for(var s=0;s<e.length;s++){var r=e[s];t(r)?it(r,n,a):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return i&&(n.$key=i),n}function st(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function rt(e,t){return"string"==typeof e?t+e:e}function ot(e){e._o=et,e._n=m,e._s=c,e._l=Ge,e._t=Ke,e._q=C,e._i=D,e._m=Qe,e._f=Ye,e._k=Je,e._b=Ze,e._v=ce,e._e=ye,e._u=it,e._g=at,e._d=st,e._p=rt}function dt(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var s=e[a],r=s.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,s.context!==t&&s.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(s);else{var o=r.slot,d=n[o]||(n[o]=[]);"template"===s.tag?d.push.apply(d,s.children||[]):d.push(s)}}for(var p in n)n[p].every(pt)&&delete n[p];return n}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ut(e){return e.isComment&&e.asyncFactory}function lt(t,n,a,i){var s,r=Object.keys(a).length>0,o=n?!!n.$stable:!r,d=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(o&&i&&i!==e&&d===i.$key&&!r&&!i.$hasNormal)return i;for(var p in s={},n)n[p]&&"$"!==p[0]&&(s[p]=yt(t,a,p,n[p]))}else s={};for(var u in a)u in s||(s[u]=ct(a,u));return n&&Object.isExtensible(n)&&(n._normalized=s),H(s,"$stable",o),H(s,"$key",d),H(s,"$hasNormal",r),s}function yt(e,n,a,i){var s=function(){var n=pe;ue(e);var a=arguments.length?i.apply(null,arguments):i({}),s=(a=a&&"object"==typeof a&&!t(a)?[a]:qe(a))&&a[0];return ue(n),a&&(!s||1===a.length&&s.isComment&&!ut(s))?void 0:a};return i.proxy&&Object.defineProperty(n,a,{get:s,enumerable:!0,configurable:!0}),s}function ct(e,t){return function(){return e[t]}}function mt(e,t,n,a,i){var s=!1;for(var r in t)r in e?t[r]!==n[r]&&(s=!0):(s=!0,Tt(e,r,a,i));for(var r in e)r in t||(s=!0,delete e[r]);return s}function Tt(e,t,n,a){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[a][t]}})}function ft(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var ht,bt=null;function vt(e,t){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),d(e)?t.extend(e):e}function _t(e){if(t(e))for(var n=0;n<e.length;n++){var a=e[n];if(i(a)&&(i(a.componentOptions)||ut(a)))return a}}function wt(e,t){ht.$on(e,t)}function gt(e,t){ht.$off(e,t)}function kt(e,t){var n=ht;return function a(){var i=t.apply(null,arguments);null!==i&&n.$off(e,a)}}function Mt(e,t,n){ht=e,Ue(t,n||{},wt,gt,kt,e),ht=void 0}var xt=null;function St(e){var t=xt;return xt=e,function(){xt=t}}function At(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Pt(e,t){if(t){if(e._directInactive=!1,At(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Pt(e.$children[n]);Ot(e,"activated")}}function It(e,t){if(!(t&&(e._directInactive=!0,At(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)It(e.$children[n]);Ot(e,"deactivated")}}function Ot(e,t,n,a){void 0===a&&(a=!0),be();var i=pe;a&&ue(e);var s=e.$options[t],r="".concat(t," hook");if(s)for(var o=0,d=s.length;o<d;o++)jt(s[o],e,n||null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),a&&ue(i),ve()}var Et=[],Rt=[],Ft={},Ct=!1,Dt=!1,Vt=0,Lt=0,Bt=Date.now;if(G&&!Y){var Ut=window.performance;Ut&&"function"==typeof Ut.now&&Bt()>document.createEvent("Event").timeStamp&&(Bt=function(){return Ut.now()})}var zt=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function Nt(){var e,t;for(Lt=Bt(),Dt=!0,Et.sort(zt),Vt=0;Vt<Et.length;Vt++)(e=Et[Vt]).before&&e.before(),t=e.id,Ft[t]=null,e.run();var n=Rt.slice(),a=Et.slice();Vt=Et.length=Rt.length=0,Ft={},Ct=Dt=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Pt(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a&&a._watcher===n&&a._isMounted&&!a._isDestroyed&&Ot(a,"updated")}}(a),se&&N.devtools&&se.emit("flush")}var qt,$t="watcher";"".concat($t," callback"),"".concat($t," getter"),"".concat($t," cleanup");var Ht=function(){function e(e){void 0===e&&(e=!1),this.active=!0,this.effects=[],this.cleanups=[],!e&&qt&&(this.parent=qt,this.index=(qt.scopes||(qt.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=qt;try{return qt=this,e()}finally{qt=t}}},e.prototype.on=function(){qt=this},e.prototype.off=function(){qt=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.active=!1}},e}();function Wt(e,t,n){be();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{if(!1===i[s].call(a,e,t,n))return}catch(e){Gt(e,a,"errorCaptured hook")}}Gt(e,t,n)}finally{ve()}}function jt(e,t,n,a,i){var s;try{(s=n?e.apply(t,n):e.call(t))&&!s._isVue&&y(s)&&!s._handled&&(s.catch((function(e){return Wt(e,a,i+" (Promise/async)")})),s._handled=!0)}catch(e){Wt(e,a,i)}return s}function Gt(e,t,n){if(N.errorHandler)try{return N.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Kt(t)}Kt(e)}function Kt(e,t,n){if(!G||"undefined"==typeof console)throw e;console.error(e)}var Yt,Xt=!1,Jt=[],Zt=!1;function Qt(){Zt=!1;var e=Jt.slice(0);Jt.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&re(Promise)){var en=Promise.resolve();Yt=function(){en.then(Qt),Z&&setTimeout(E)},Xt=!0}else if(Y||"undefined"==typeof MutationObserver||!re(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Yt="undefined"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(Qt)}:function(){setTimeout(Qt,0)};else{var tn=1,nn=new MutationObserver(Qt),an=document.createTextNode(String(tn));nn.observe(an,{characterData:!0}),Yt=function(){tn=(tn+1)%2,an.data=String(tn)},Xt=!0}function sn(e,t){var n;if(Jt.push((function(){if(e)try{e.call(t)}catch(e){Wt(e,t,"nextTick")}else n&&n(t)})),Zt||(Zt=!0,Yt()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function rn(e){return function(t,n){if(void 0===n&&(n=pe),n)return function(e,t,n){var a=e.$options;a[t]=Dn(a[t],n)}(n,e,t)}}rn("beforeMount"),rn("mounted"),rn("beforeUpdate"),rn("updated"),rn("beforeDestroy"),rn("destroyed"),rn("errorCaptured"),rn("activated"),rn("deactivated"),rn("serverPrefetch"),rn("renderTracked"),rn("renderTriggered");var on=new oe;function dn(e){return pn(e,on),on.clear(),e}function pn(e,n){var a,i,s=t(e);if(!(!s&&!d(e)||Object.isFrozen(e)||e instanceof le)){if(e.__ob__){var r=e.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(s)for(a=e.length;a--;)pn(e[a],n);else if(De(e))pn(e.value,n);else for(a=(i=Object.keys(e)).length;a--;)pn(e[i[a]],n)}}var un=0,ln=function(){function e(e,t,n,a,i){var s;void 0===(s=qt||(e?e._scope:void 0))&&(s=qt),s&&s.active&&s.effects.push(this),(this.vm=e)&&i&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++un,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new oe,this.newDepIds=new oe,this.expression="",o(t)?this.getter=t:(this.getter=function(e){if(!W.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=E)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;be(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Wt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&dn(e),ve(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==Ft[t]&&(e!==fe.target||!e.noRecurse)){if(Ft[t]=!0,Dt){for(var n=Et.length-1;n>Vt&&Et[n].id>e.id;)n--;Et.splice(n+1,0,e)}else Et.push(e);Ct||(Ct=!0,sn(Nt))}}(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||d(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');jt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&b(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}(),yn={enumerable:!0,configurable:!0,get:E,set:E};function cn(e,t,n){yn.get=function(){return this[t][n]},yn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,yn)}function mn(n){var a=n.$options;if(a.props&&function(e,t){var n=e.$options.propsData||{},a=e._props=Fe({}),i=e.$options._propKeys=[];e.$parent&&xe(!1);var s=function(s){i.push(s);var r=zn(s,t,n,e);Ie(a,s,r),s in e||cn(e,"_props",s)};for(var r in t)s(r);xe(!0)}(n,a.props),function(t){var n=t.$options,a=n.setup;if(a){var i=t._setupContext=function(t){return{get attrs(){if(!t._attrsProxy){var n=t._attrsProxy={};H(n,"_v_attr_proxy",!0),mt(n,t.$attrs,e,t,"$attrs")}return t._attrsProxy},get listeners(){return t._listenersProxy||mt(t._listenersProxy={},t.$listeners,e,t,"$listeners"),t._listenersProxy},get slots(){return function(e){return e._slotsProxy||ft(e._slotsProxy={},e.$scopedSlots),e._slotsProxy}(t)},emit:A(t.$emit,t),expose:function(e){e&&Object.keys(e).forEach((function(n){return Ve(t,e,n)}))}}}(t);ue(t),be();var s=jt(a,null,[t._props||Fe({}),i],t,"setup");if(ve(),ue(),o(s))n.render=s;else if(d(s))if(t._setupState=s,s.__sfc){var r=t._setupProxy={};for(var p in s)"__sfc"!==p&&Ve(r,s,p)}else for(var p in s)$(p)||Ve(t,s,p)}}(n),a.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?E:A(t[n],e)}(n,a.methods),a.data)!function(e){var t=e.$options.data;u(t=e._data=o(t)?function(e,t){be();try{return e.call(t,t)}catch(e){return Wt(e,t,"data()"),{}}finally{ve()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);i--;){var s=n[i];a&&_(a,s)||$(s)||cn(e,"_data",s)}var r=Pe(t);r&&r.vmCount++}(n);else{var i=Pe(n._data={});i&&i.vmCount++}a.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ie();for(var i in t){var s=t[i],r=o(s)?s:s.get;a||(n[i]=new ln(e,r||E,E,Tn)),i in e||fn(e,i,s)}}(n,a.computed),a.watch&&a.watch!==te&&function(e,n){for(var a in n){var i=n[a];if(t(i))for(var s=0;s<i.length;s++)vn(e,a,i[s]);else vn(e,a,i)}}(n,a.watch)}var Tn={lazy:!0};function fn(e,t,n){var a=!ie();o(n)?(yn.get=a?hn(t):bn(n),yn.set=E):(yn.get=n.get?a&&!1!==n.cache?hn(t):bn(n.get):E,yn.set=n.set||E),Object.defineProperty(e,t,yn)}function hn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function bn(e){return function(){return e.call(this,this)}}function vn(e,t,n,a){return u(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}function _n(e,t){if(e){for(var n=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var s=a[i];if("__ob__"!==s){var r=e[s].from;if(r in t._provided)n[s]=t._provided[r];else if("default"in e[s]){var d=e[s].default;n[s]=o(d)?d.call(t):d}}}return n}}var wn=0;function gn(e){var t=e.options;if(e.super){var n=gn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&I(e.extendOptions,a),(t=e.options=Bn(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function kn(n,a,i,r,o){var d,p=this,u=o.options;_(r,"_uid")?(d=Object.create(r))._original=r:(d=r,r=r._original);var l=s(u._compiled),y=!l;this.data=n,this.props=a,this.children=i,this.parent=r,this.listeners=n.on||e,this.injections=_n(u.inject,r),this.slots=function(){return p.$slots||lt(r,n.scopedSlots,p.$slots=dt(i,r)),p.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return lt(r,n.scopedSlots,this.slots())}}),l&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=lt(r,n.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,n,a,i){var s=We(d,e,n,a,i,y);return s&&!t(s)&&(s.fnScopeId=u._scopeId,s.fnContext=r),s}:this._c=function(e,t,n,a){return We(d,e,t,n,a,y)}}function Mn(e,t,n,a,i){var s=me(e);return s.fnContext=n,s.fnOptions=a,t.slot&&((s.data||(s.data={})).slot=t.slot),s}function xn(e,t){for(var n in t)e[k(n)]=t[n]}function Sn(e){return e.name||e.__name||e._componentTag}ot(kn.prototype);var An={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;An.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;return i(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(n)}(e,xt)).$mount(t?e.elm:void 0,t)},prepatch:function(t,n){var a=n.componentOptions;!function(t,n,a,i,s){var r=i.data.scopedSlots,o=t.$scopedSlots,d=!!(r&&!r.$stable||o!==e&&!o.$stable||r&&t.$scopedSlots.$key!==r.$key||!r&&t.$scopedSlots.$key),p=!!(s||t.$options._renderChildren||d),u=t.$vnode;t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=s;var l=i.data.attrs||e;t._attrsProxy&&mt(t._attrsProxy,l,u.data&&u.data.attrs||e,t,"$attrs")&&(p=!0),t.$attrs=l,a=a||e;var y=t.$options._parentListeners;if(t._listenersProxy&&mt(t._listenersProxy,a,y||e,t,"$listeners"),t.$listeners=t.$options._parentListeners=a,Mt(t,a,y),n&&t.$options.props){xe(!1);for(var c=t._props,m=t.$options._propKeys||[],T=0;T<m.length;T++){var f=m[T],h=t.$options.props;c[f]=zn(f,h,n,t)}xe(!0),t.$options.propsData=n}p&&(t.$slots=dt(s,i.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,a.propsData,a.listeners,n,a.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,Ot(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,Rt.push(t)):Pt(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?It(t,!0):t.$destroy())}},Pn=Object.keys(An);function In(n,r,o,p,u){if(!a(n)){var l=o.$options._base;if(d(n)&&(n=l.extend(n)),"function"==typeof n){var c;if(a(n.cid)&&(n=function(e,t){if(s(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=bt;if(n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var r=e.owners=[n],o=!0,p=null,u=null;n.$on("hook:destroyed",(function(){return b(r,n)}));var l=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==p&&(clearTimeout(p),p=null),null!==u&&(clearTimeout(u),u=null))},c=V((function(n){e.resolved=vt(n,t),o?r.length=0:l(!0)})),m=V((function(t){i(e.errorComp)&&(e.error=!0,l(!0))})),T=e(c,m);return d(T)&&(y(T)?a(e.resolved)&&T.then(c,m):y(T.component)&&(T.component.then(c,m),i(T.error)&&(e.errorComp=vt(T.error,t)),i(T.loading)&&(e.loadingComp=vt(T.loading,t),0===T.delay?e.loading=!0:p=setTimeout((function(){p=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,l(!1))}),T.delay||200)),i(T.timeout)&&(u=setTimeout((function(){u=null,a(e.resolved)&&m(null)}),T.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(c=n,l),void 0===n))return function(e,t,n,a,i){var s=ye();return s.asyncFactory=e,s.asyncMeta={data:t,context:n,children:a,tag:i},s}(c,r,o,p,u);r=r||{},gn(n),i(r.model)&&function(e,n){var a=e.model&&e.model.prop||"value",s=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[a]=n.model.value;var r=n.on||(n.on={}),o=r[s],d=n.model.callback;i(o)?(t(o)?-1===o.indexOf(d):o!==d)&&(r[s]=[d].concat(o)):r[s]=d}(n.options,r);var m=function(e,t,n){var s=t.options.props;if(!a(s)){var r={},o=e.attrs,d=e.props;if(i(o)||i(d))for(var p in s){var u=S(p);Ne(r,d,p,u,!0)||Ne(r,o,p,u,!1)}return r}}(r,n);if(s(n.options.functional))return function(n,a,s,r,o){var d=n.options,p={},u=d.props;if(i(u))for(var l in u)p[l]=zn(l,u,a||e);else i(s.attrs)&&xn(p,s.attrs),i(s.props)&&xn(p,s.props);var y=new kn(s,p,o,r,n),c=d.render.call(null,y._c,y);if(c instanceof le)return Mn(c,s,y.parent,d);if(t(c)){for(var m=qe(c)||[],T=new Array(m.length),f=0;f<m.length;f++)T[f]=Mn(m[f],s,y.parent,d);return T}}(n,m,r,o,p);var T=r.on;if(r.on=r.nativeOn,s(n.options.abstract)){var f=r.slot;r={},f&&(r.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Pn.length;n++){var a=Pn[n],i=t[a],s=An[a];i===s||i&&i._merged||(t[a]=i?On(s,i):s)}}(r);var h=Sn(n.options)||u;return new le("vue-component-".concat(n.cid).concat(h?"-".concat(h):""),r,void 0,void 0,void 0,o,{Ctor:n,propsData:m,listeners:T,tag:u,children:p},c)}}}function On(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}var En=E,Rn=N.optionMergeStrategies;function Fn(e,t){if(!t)return e;for(var n,a,i,s=de?Reflect.ownKeys(t):Object.keys(t),r=0;r<s.length;r++)"__ob__"!==(n=s[r])&&(a=e[n],i=t[n],_(e,n)?a!==i&&u(a)&&u(i)&&Fn(a,i):Oe(e,n,i));return e}function Cn(e,t,n){return n?function(){var a=o(t)?t.call(n,n):t,i=o(e)?e.call(n,n):e;return a?Fn(a,i):i}:t?e?function(){return Fn(o(t)?t.call(this,this):t,o(e)?e.call(this,this):e)}:t:e}function Dn(e,n){var a=n?e?e.concat(n):t(n)?n:[n]:e;return a?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(a):a}function Vn(e,t,n,a){var i=Object.create(e||null);return t?I(i,t):i}Rn.data=function(e,t,n){return n?Cn(e,t,n):t&&"function"!=typeof t?e:Cn(e,t)},z.forEach((function(e){Rn[e]=Dn})),U.forEach((function(e){Rn[e+"s"]=Vn})),Rn.watch=function(e,n,a,i){if(e===te&&(e=void 0),n===te&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var s={};for(var r in I(s,e),n){var o=s[r],d=n[r];o&&!t(o)&&(o=[o]),s[r]=o?o.concat(d):t(d)?d:[d]}return s},Rn.props=Rn.methods=Rn.inject=Rn.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return I(i,e),t&&I(i,t),i},Rn.provide=Cn;var Ln=function(e,t){return void 0===t?e:t};function Bn(e,n,a){if(o(n)&&(n=n.options),function(e,n){var a=e.props;if(a){var i,s,r={};if(t(a))for(i=a.length;i--;)"string"==typeof(s=a[i])&&(r[k(s)]={type:null});else if(u(a))for(var o in a)s=a[o],r[k(o)]=u(s)?s:{type:s};e.props=r}}(n),function(e,n){var a=e.inject;if(a){var i=e.inject={};if(t(a))for(var s=0;s<a.length;s++)i[a[s]]={from:a[s]};else if(u(a))for(var r in a){var o=a[r];i[r]=u(o)?I({from:r},o):{from:o}}}}(n),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];o(a)&&(t[n]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=Bn(e,n.extends,a)),n.mixins))for(var i=0,s=n.mixins.length;i<s;i++)e=Bn(e,n.mixins[i],a);var r,d={};for(r in e)p(r);for(r in n)_(e,r)||p(r);function p(t){var i=Rn[t]||Ln;d[t]=i(e[t],n[t],a,t)}return d}function Un(e,t,n,a){if("string"==typeof n){var i=e[t];if(_(i,n))return i[n];var s=k(n);if(_(i,s))return i[s];var r=M(s);return _(i,r)?i[r]:i[n]||i[s]||i[r]}}function zn(e,t,n,a){var i=t[e],s=!_(n,e),r=n[e],d=Hn(Boolean,i.type);if(d>-1)if(s&&!_(i,"default"))r=!1;else if(""===r||r===S(e)){var p=Hn(String,i.type);(p<0||d<p)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(_(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:o(a)&&"Function"!==qn(t.type)?a.call(e):a}}(a,i,e);var u=Me;xe(!0),Pe(r),xe(u)}return r}var Nn=/^\s*function (\w+)/;function qn(e){var t=e&&e.toString().match(Nn);return t?t[1]:""}function $n(e,t){return qn(e)===qn(t)}function Hn(e,n){if(!t(n))return $n(n,e)?0:-1;for(var a=0,i=n.length;a<i;a++)if($n(n[a],e))return a;return-1}function Wn(e){this._init(e)}function jn(e){return e&&(Sn(e.Ctor.options)||e.tag)}function Gn(e,n){return t(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:(a=e,!("[object RegExp]"!==p.call(a))&&e.test(n));var a}function Kn(e,t){var n=e.cache,a=e.keys,i=e._vnode;for(var s in n){var r=n[s];if(r){var o=r.name;o&&!t(o)&&Yn(n,s,a,i)}}}function Yn(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,b(n,t)}!function(t){t.prototype._init=function(t){var n=this;n._uid=wn++,n._isVue=!0,n.__v_skip=!0,n._scope=new Ht(!0),t&&t._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(n,t):n.$options=Bn(gn(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Mt(e,t)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,a=t.$vnode=n._parentVnode,i=a&&a.context;t.$slots=dt(n._renderChildren,i),t.$scopedSlots=a?lt(t.$parent,a.data.scopedSlots,t.$slots):e,t._c=function(e,n,a,i){return We(t,e,n,a,i,!1)},t.$createElement=function(e,n,a,i){return We(t,e,n,a,i,!0)};var s=a&&a.data;Ie(t,"$attrs",s&&s.attrs||e,null,!0),Ie(t,"$listeners",n._parentListeners||e,null,!0)}(n),Ot(n,"beforeCreate",void 0,!1),function(e){var t=_n(e.$options.inject,e);t&&(xe(!1),Object.keys(t).forEach((function(n){Ie(e,n,t[n])})),xe(!0))}(n),mn(n),function(e){var t=e.$options.provide;if(t){var n=o(t)?t.call(e):t;if(!d(n))return;for(var a=function(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}(e),i=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<i.length;s++){var r=i[s];Object.defineProperty(a,r,Object.getOwnPropertyDescriptor(n,r))}}}(n),Ot(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Wn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=Oe,e.prototype.$delete=Ee,e.prototype.$watch=function(e,t,n){var a=this;if(u(t))return vn(a,e,t,n);(n=n||{}).user=!0;var i=new ln(a,e,t,n);if(n.immediate){var s='callback for immediate watcher "'.concat(i.expression,'"');be(),jt(t,a,[i.value],a,s),ve()}return function(){i.teardown()}}}(Wn),function(e){var n=/^hook:/;e.prototype.$on=function(e,a){var i=this;if(t(e))for(var s=0,r=e.length;s<r;s++)i.$on(e[s],a);else(i._events[e]||(i._events[e]=[])).push(a),n.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,n){var a=this;if(!arguments.length)return a._events=Object.create(null),a;if(t(e)){for(var i=0,s=e.length;i<s;i++)a.$off(e[i],n);return a}var r,o=a._events[e];if(!o)return a;if(!n)return a._events[e]=null,a;for(var d=o.length;d--;)if((r=o[d])===n||r.fn===n){o.splice(d,1);break}return a},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?P(n):n;for(var a=P(arguments,1),i='event handler for "'.concat(e,'"'),s=0,r=n.length;s<r;s++)jt(n[s],t,a,t,i)}return t}}(Wn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,s=St(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),s(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Ot(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Ot(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wn),function(e){ot(e.prototype),e.prototype.$nextTick=function(e){return sn(e,this)},e.prototype._render=function(){var e,n=this,a=n.$options,i=a.render,s=a._parentVnode;s&&n._isMounted&&(n.$scopedSlots=lt(n.$parent,s.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&ft(n._slotsProxy,n.$scopedSlots)),n.$vnode=s;try{ue(n),bt=n,e=i.call(n._renderProxy,n.$createElement)}catch(t){Wt(t,n,"render"),e=n._vnode}finally{bt=null,ue()}return t(e)&&1===e.length&&(e=e[0]),e instanceof le||(e=ye()),e.parent=s,e}}(Wn);var Xn=[String,RegExp,Array],Jn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Xn,exclude:Xn,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,i=e.keyToCache;if(a){var s=a.tag,r=a.componentInstance,o=a.componentOptions;t[i]={name:jn(o),tag:s,componentInstance:r},n.push(i),this.max&&n.length>parseInt(this.max)&&Yn(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Yn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Kn(e,(function(e){return Gn(t,e)}))})),this.$watch("exclude",(function(t){Kn(e,(function(e){return!Gn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=_t(e),n=t&&t.componentOptions;if(n){var a=jn(n),i=this.include,s=this.exclude;if(i&&(!a||!Gn(i,a))||s&&a&&Gn(s,a))return t;var r=this.cache,o=this.keys,d=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;r[d]?(t.componentInstance=r[d].componentInstance,b(o,d),o.push(d)):(this.vnodeToCache=t,this.keyToCache=d),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return N}};Object.defineProperty(e,"config",t),e.util={warn:En,extend:I,mergeOptions:Bn,defineReactive:Ie},e.set=Oe,e.delete=Ee,e.nextTick=sn,e.observable=function(e){return Pe(e),e},e.options=Object.create(null),U.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,Jn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=P(arguments,1);return n.unshift(this),o(e.install)?e.install.apply(e,n):o(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Bn(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var s=Sn(e)||Sn(n.options),r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=Bn(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)cn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)fn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,U.forEach((function(e){r[e]=n[e]})),s&&(r.options.components[s]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=I({},r.options),i[a]=r,r}}(e),function(e){U.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&o(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Wn),Object.defineProperty(Wn.prototype,"$isServer",{get:ie}),Object.defineProperty(Wn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wn,"FunctionalRenderContext",{value:kn}),Wn.version="2.7.8";var Zn=T("style,class"),Qn=T("input,textarea,option,select,progress"),ea=function(e,t,n){return"value"===n&&Qn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},ta=T("contenteditable,draggable,spellcheck"),na=T("events,caret,typing,plaintext-only"),aa=T("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ia="http://www.w3.org/1999/xlink",sa=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},ra=function(e){return sa(e)?e.slice(6,e.length):""},oa=function(e){return null==e||!1===e};function da(e,t){return{staticClass:pa(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function pa(e,t){return e?t?e+" "+t:e:t||""}function ua(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,s=e.length;a<s;a++)i(t=ua(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):d(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var la={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ya=T("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ca=T("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ma=function(e){return ya(e)||ca(e)};function Ta(e){return ca(e)?"svg":"math"===e?"math":void 0}var fa=Object.create(null),ha=T("text,number,password,search,email,tel,url");function ba(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var va=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(la[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),_a={create:function(e,t){wa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(wa(e,!0),wa(t))},destroy:function(e){wa(e,!0)}};function wa(e,n){var a=e.data.ref;if(i(a)){var s=e.context,r=e.componentInstance||e.elm,d=n?null:r,p=n?void 0:r;if(o(a))jt(a,s,[d],s,"template ref function");else{var u=e.data.refInFor,l="string"==typeof a||"number"==typeof a,y=De(a),c=s.$refs;if(l||y)if(u){var m=l?c[a]:a.value;n?t(m)&&b(m,r):t(m)?m.includes(r)||m.push(r):l?(c[a]=[r],ga(s,a,c[a])):a.value=[r]}else if(l){if(n&&c[a]!==r)return;c[a]=p,ga(s,a,d)}else if(y){if(n&&a.value!==r)return;a.value=d}}}}function ga(e,t,n){var a=e._setupState;a&&_(a,t)&&(De(a[t])?a[t].value=n:a[t]=n)}var ka=new le("",{},[]),Ma=["create","activate","update","remove","destroy"];function xa(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=i(n=e.data)&&i(n=n.attrs)&&n.type,s=i(n=t.data)&&i(n=n.attrs)&&n.type;return a===s||ha(a)&&ha(s)}(e,t)||s(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function Sa(e,t,n){var a,s,r={};for(a=t;a<=n;++a)i(s=e[a].key)&&(r[s]=a);return r}var Aa={create:Pa,update:Pa,destroy:function(e){Pa(e,ka)}};function Pa(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,s=e===ka,r=t===ka,o=Oa(e.data.directives,e.context),d=Oa(t.data.directives,t.context),p=[],u=[];for(n in d)a=o[n],i=d[n],a?(i.oldValue=a.value,i.oldArg=a.arg,Ra(i,"update",t,e),i.def&&i.def.componentUpdated&&u.push(i)):(Ra(i,"bind",t,e),i.def&&i.def.inserted&&p.push(i));if(p.length){var l=function(){for(var n=0;n<p.length;n++)Ra(p[n],"inserted",t,e)};s?ze(t,"insert",l):l()}if(u.length&&ze(t,"postpatch",(function(){for(var n=0;n<u.length;n++)Ra(u[n],"componentUpdated",t,e)})),!s)for(n in o)d[n]||Ra(o[n],"unbind",e,e,r)}(e,t)}var Ia=Object.create(null);function Oa(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=Ia),i[Ea(a)]=a,t._setupState&&t._setupState.__sfc&&(a.def=a.def||Un(t,"_setupState","v-"+a.name)),a.def=a.def||Un(t.$options,"directives",a.name);return i}function Ea(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Ra(e,t,n,a,i){var s=e.def&&e.def[t];if(s)try{s(n.elm,e,n,a,i)}catch(a){Wt(a,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var Fa=[_a,Aa];function Ca(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var r,o,d=t.elm,p=e.data.attrs||{},u=t.data.attrs||{};for(r in(i(u.__ob__)||s(u._v_attr_proxy))&&(u=t.data.attrs=I({},u)),u)o=u[r],p[r]!==o&&Da(d,r,o,t.data.pre);for(r in(Y||J)&&u.value!==p.value&&Da(d,"value",u.value),p)a(u[r])&&(sa(r)?d.removeAttributeNS(ia,ra(r)):ta(r)||d.removeAttribute(r))}}function Da(e,t,n,a){a||e.tagName.indexOf("-")>-1?Va(e,t,n):aa(t)?oa(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):ta(t)?e.setAttribute(t,function(e,t){return oa(t)||"false"===t?"false":"contenteditable"===e&&na(t)?t:"true"}(t,n)):sa(t)?oa(n)?e.removeAttributeNS(ia,ra(t)):e.setAttributeNS(ia,t,n):Va(e,t,n)}function Va(e,t,n){if(oa(n))e.removeAttribute(t);else{if(Y&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var La={create:Ca,update:Ca};function Ba(e,t){var n=t.elm,s=t.data,r=e.data;if(!(a(s.staticClass)&&a(s.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var o=function(e){for(var t=e.data,n=e,a=e;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=da(a.data,t));for(;i(n=n.parent);)n&&n.data&&(t=da(t,n.data));return s=t.staticClass,r=t.class,i(s)||i(r)?pa(s,ua(r)):"";var s,r}(t),d=n._transitionClasses;i(d)&&(o=pa(o,ua(d))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var Ua,za,Na,qa,$a,Ha,Wa={create:Ba,update:Ba},ja=/[\w).+\-_$\]]/;function Ga(e){var t,n,a,i,s,r=!1,o=!1,d=!1,p=!1,u=0,l=0,y=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(d)96===t&&92!==n&&(d=!1);else if(p)47===t&&92!==n&&(p=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||u||l||y){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:d=!0;break;case 40:y++;break;case 41:y--;break;case 91:l++;break;case 93:l--;break;case 123:u++;break;case 125:u--}if(47===t){for(var m=a-1,T=void 0;m>=0&&" "===(T=e.charAt(m));m--);T&&ja.test(T)||(p=!0)}}else void 0===i?(c=a+1,i=e.slice(0,a).trim()):f();function f(){(s||(s=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==c&&f(),s)for(a=0;a<s.length;a++)i=Ka(i,s[a]);return i}function Ka(e,t){var n=t.indexOf("(");if(n<0)return'_f("'.concat(t,'")(').concat(e,")");var a=t.slice(0,n),i=t.slice(n+1);return'_f("'.concat(a,'")(').concat(e).concat(")"!==i?","+i:i)}function Ya(e,t){console.error("[Vue compiler]: ".concat(e))}function Xa(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Ja(e,t,n,a,i){(e.props||(e.props=[])).push(ri({name:t,value:n,dynamic:i},a)),e.plain=!1}function Za(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(ri({name:t,value:n,dynamic:i},a)),e.plain=!1}function Qa(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(ri({name:t,value:n},a))}function ei(e,t,n,a,i,s,r,o){(e.directives||(e.directives=[])).push(ri({name:t,rawName:n,value:a,arg:i,isDynamicArg:s,modifiers:r},o)),e.plain=!1}function ti(e,t,n){return n?"_p(".concat(t,',"').concat(e,'")'):e+t}function ni(t,n,a,i,s,r,o,d){var p;(i=i||e).right?d?n="(".concat(n,")==='click'?'contextmenu':(").concat(n,")"):"click"===n&&(n="contextmenu",delete i.right):i.middle&&(d?n="(".concat(n,")==='click'?'mouseup':(").concat(n,")"):"click"===n&&(n="mouseup")),i.capture&&(delete i.capture,n=ti("!",n,d)),i.once&&(delete i.once,n=ti("~",n,d)),i.passive&&(delete i.passive,n=ti("&",n,d)),i.native?(delete i.native,p=t.nativeEvents||(t.nativeEvents={})):p=t.events||(t.events={});var u=ri({value:a.trim(),dynamic:d},o);i!==e&&(u.modifiers=i);var l=p[n];Array.isArray(l)?s?l.unshift(u):l.push(u):p[n]=l?s?[u,l]:[l,u]:u,t.plain=!1}function ai(e,t,n){var a=ii(e,":"+t)||ii(e,"v-bind:"+t);if(null!=a)return Ga(a);if(!1!==n){var i=ii(e,t);if(null!=i)return JSON.stringify(i)}}function ii(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,s=0,r=i.length;s<r;s++)if(i[s].name===t){i.splice(s,1);break}return n&&delete e.attrsMap[t],a}function si(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var s=n[a];if(t.test(s.name))return n.splice(a,1),s}}function ri(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function oi(e,t,n){var a=n||{},i=a.number,s="$$v",r=s;a.trim&&(r="(typeof ".concat(s," === 'string'")+"? ".concat(s,".trim()")+": ".concat(s,")")),i&&(r="_n(".concat(r,")"));var o=di(t,r);e.model={value:"(".concat(t,")"),expression:JSON.stringify(t),callback:"function (".concat(s,") {").concat(o,"}")}}function di(e,t){var n=function(e){if(e=e.trim(),Ua=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<Ua-1)return(qa=e.lastIndexOf("."))>-1?{exp:e.slice(0,qa),key:'"'+e.slice(qa+1)+'"'}:{exp:e,key:null};for(za=e,qa=$a=Ha=0;!ui();)li(Na=pi())?ci(Na):91===Na&&yi(Na);return{exp:e.slice(0,$a),key:e.slice($a+1,Ha)}}(e);return null===n.key?"".concat(e,"=").concat(t):"$set(".concat(n.exp,", ").concat(n.key,", ").concat(t,")")}function pi(){return za.charCodeAt(++qa)}function ui(){return qa>=Ua}function li(e){return 34===e||39===e}function yi(e){var t=1;for($a=qa;!ui();)if(li(e=pi()))ci(e);else if(91===e&&t++,93===e&&t--,0===t){Ha=qa;break}}function ci(e){for(var t=e;!ui()&&(e=pi())!==t;);}var mi;function Ti(e,t,n){var a=mi;return function i(){var s=t.apply(null,arguments);null!==s&&bi(e,i,n,a)}}var fi=Xt&&!(ee&&Number(ee[1])<=53);function hi(e,t,n,a){if(fi){var i=Lt,s=t;t=s._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return s.apply(this,arguments)}}mi.addEventListener(e,t,ne?{capture:n,passive:a}:n)}function bi(e,t,n,a){(a||mi).removeEventListener(e,t._wrapper||t,n)}function vi(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},s=e.data.on||{};mi=t.elm||e.elm,function(e){if(i(e.__r)){var t=Y?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}i(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),Ue(n,s,hi,bi,Ti,t.context),mi=void 0}}var _i,wi={create:vi,update:vi,destroy:function(e){return vi(e,ka)}};function gi(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,r,o=t.elm,d=e.data.domProps||{},p=t.data.domProps||{};for(n in(i(p.__ob__)||s(p._v_attr_proxy))&&(p=t.data.domProps=I({},p)),d)n in p||(o[n]="");for(n in p){if(r=p[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===d[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=r;var u=a(r)?"":String(r);ki(o,u)&&(o.value=u)}else if("innerHTML"===n&&ca(o.tagName)&&a(o.innerHTML)){(_i=_i||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var l=_i.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;l.firstChild;)o.appendChild(l.firstChild)}else if(r!==d[n])try{o[n]=r}catch(e){}}}}function ki(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(i(a)){if(a.number)return m(n)!==m(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Mi={create:gi,update:gi},xi=w((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function Si(e){var t=Ai(e.style);return e.staticStyle?I(e.staticStyle,t):t}function Ai(e){return Array.isArray(e)?O(e):"string"==typeof e?xi(e):e}var Pi,Ii=/^--/,Oi=/\s*!important$/,Ei=function(e,t,n){if(Ii.test(t))e.style.setProperty(t,n);else if(Oi.test(n))e.style.setProperty(S(t),n.replace(Oi,""),"important");else{var a=Fi(t);if(Array.isArray(n))for(var i=0,s=n.length;i<s;i++)e.style[a]=n[i];else e.style[a]=n}},Ri=["Webkit","Moz","ms"],Fi=w((function(e){if(Pi=Pi||document.createElement("div").style,"filter"!==(e=k(e))&&e in Pi)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Ri.length;n++){var a=Ri[n]+t;if(a in Pi)return a}}));function Ci(e,t){var n=t.data,s=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(s.staticStyle)&&a(s.style))){var r,o,d=t.elm,p=s.staticStyle,u=s.normalizedStyle||s.style||{},l=p||u,y=Ai(t.data.style)||{};t.data.normalizedStyle=i(y.__ob__)?I({},y):y;var c=function(e,t){for(var n,a={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=Si(i.data))&&I(a,n);(n=Si(e.data))&&I(a,n);for(var s=e;s=s.parent;)s.data&&(n=Si(s.data))&&I(a,n);return a}(t);for(o in l)a(c[o])&&Ei(d,o,"");for(o in c)(r=c[o])!==l[o]&&Ei(d,o,null==r?"":r)}}var Di={create:Ci,update:Ci},Vi=/\s+/;function Li(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Vi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Bi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Vi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Ui(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,zi(e.name||"v")),I(t,e),t}return"string"==typeof e?zi(e):void 0}}var zi=w((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),Ni=G&&!X,qi="transition",$i="animation",Hi="transition",Wi="transitionend",ji="animation",Gi="animationend";Ni&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Hi="WebkitTransition",Wi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ji="WebkitAnimation",Gi="webkitAnimationEnd"));var Ki=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Yi(e){Ki((function(){Ki(e)}))}function Xi(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Li(e,t))}function Ji(e,t){e._transitionClasses&&b(e._transitionClasses,t),Bi(e,t)}function Zi(e,t,n){var a=es(e,t),i=a.type,s=a.timeout,r=a.propCount;if(!i)return n();var o=i===qi?Wi:Gi,d=0,p=function(){e.removeEventListener(o,u),n()},u=function(t){t.target===e&&++d>=r&&p()};setTimeout((function(){d<r&&p()}),s+1),e.addEventListener(o,u)}var Qi=/\b(transform|all)(,|$)/;function es(e,t){var n,a=window.getComputedStyle(e),i=(a[Hi+"Delay"]||"").split(", "),s=(a[Hi+"Duration"]||"").split(", "),r=ts(i,s),o=(a[ji+"Delay"]||"").split(", "),d=(a[ji+"Duration"]||"").split(", "),p=ts(o,d),u=0,l=0;return t===qi?r>0&&(n=qi,u=r,l=s.length):t===$i?p>0&&(n=$i,u=p,l=d.length):l=(n=(u=Math.max(r,p))>0?r>p?qi:$i:null)?n===qi?s.length:d.length:0,{type:n,timeout:u,propCount:l,hasTransform:n===qi&&Qi.test(a[Hi+"Property"])}}function ts(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ns(t)+ns(e[n])})))}function ns(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function as(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var s=Ui(e.data.transition);if(!a(s)&&!i(n._enterCb)&&1===n.nodeType){for(var r=s.css,p=s.type,u=s.enterClass,l=s.enterToClass,y=s.enterActiveClass,c=s.appearClass,T=s.appearToClass,f=s.appearActiveClass,h=s.beforeEnter,b=s.enter,v=s.afterEnter,_=s.enterCancelled,w=s.beforeAppear,g=s.appear,k=s.afterAppear,M=s.appearCancelled,x=s.duration,S=xt,A=xt.$vnode;A&&A.parent;)S=A.context,A=A.parent;var P=!S._isMounted||!e.isRootInsert;if(!P||g||""===g){var I=P&&c?c:u,O=P&&f?f:y,E=P&&T?T:l,R=P&&w||h,F=P&&o(g)?g:b,C=P&&k||v,D=P&&M||_,L=m(d(x)?x.enter:x),B=!1!==r&&!X,U=rs(F),z=n._enterCb=V((function(){B&&(Ji(n,E),Ji(n,O)),z.cancelled?(B&&Ji(n,I),D&&D(n)):C&&C(n),n._enterCb=null}));e.data.show||ze(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),F&&F(n,z)})),R&&R(n),B&&(Xi(n,I),Xi(n,O),Yi((function(){Ji(n,I),z.cancelled||(Xi(n,E),U||(ss(L)?setTimeout(z,L):Zi(n,p,z)))}))),e.data.show&&(t&&t(),F&&F(n,z)),B||U||z()}}}function is(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var s=Ui(e.data.transition);if(a(s)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var r=s.css,o=s.type,p=s.leaveClass,u=s.leaveToClass,l=s.leaveActiveClass,y=s.beforeLeave,c=s.leave,T=s.afterLeave,f=s.leaveCancelled,h=s.delayLeave,b=s.duration,v=!1!==r&&!X,_=rs(c),w=m(d(b)?b.leave:b),g=n._leaveCb=V((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(Ji(n,u),Ji(n,l)),g.cancelled?(v&&Ji(n,p),f&&f(n)):(t(),T&&T(n)),n._leaveCb=null}));h?h(k):k()}function k(){g.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),v&&(Xi(n,p),Xi(n,l),Yi((function(){Ji(n,p),g.cancelled||(Xi(n,u),_||(ss(w)?setTimeout(g,w):Zi(n,o,g)))}))),c&&c(n,g),v||_||g())}}function ss(e){return"number"==typeof e&&!isNaN(e)}function rs(e){if(a(e))return!1;var t=e.fns;return i(t)?rs(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function os(e,t){!0!==t.data.show&&as(t)}var ds=function(e){var n,o,d={},p=e.modules,u=e.nodeOps;for(n=0;n<Ma.length;++n)for(d[Ma[n]]=[],o=0;o<p.length;++o)i(p[o][Ma[n]])&&d[Ma[n]].push(p[o][Ma[n]]);function l(e){var t=u.parentNode(e);i(t)&&u.removeChild(t,e)}function y(e,t,n,a,r,o,p){if(i(e.elm)&&i(o)&&(e=o[p]=me(e)),e.isRootInsert=!r,!function(e,t,n,a){var r=e.data;if(i(r)){var o=i(e.componentInstance)&&r.keepAlive;if(i(r=r.hook)&&i(r=r.init)&&r(e,!1),i(e.componentInstance))return c(e,t),m(n,e.elm,a),s(o)&&function(e,t,n,a){for(var s,r=e;r.componentInstance;)if(i(s=(r=r.componentInstance._vnode).data)&&i(s=s.transition)){for(s=0;s<d.activate.length;++s)d.activate[s](ka,r);t.push(r);break}m(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var l=e.data,y=e.children,T=e.tag;i(T)?(e.elm=e.ns?u.createElementNS(e.ns,T):u.createElement(T,e),v(e),f(e,y,t),i(l)&&b(e,t),m(n,e.elm,a)):s(e.isComment)?(e.elm=u.createComment(e.text),m(n,e.elm,a)):(e.elm=u.createTextNode(e.text),m(n,e.elm,a))}}function c(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(b(e,t),v(e)):(wa(e),t.push(e))}function m(e,t,n){i(e)&&(i(n)?u.parentNode(n)===e&&u.insertBefore(e,t,n):u.appendChild(e,t))}function f(e,n,a){if(t(n))for(var i=0;i<n.length;++i)y(n[i],a,e.elm,null,!0,n,i);else r(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function b(e,t){for(var a=0;a<d.create.length;++a)d.create[a](ka,e);i(n=e.data.hook)&&(i(n.create)&&n.create(ka,e),i(n.insert)&&t.push(e))}function v(e){var t;if(i(t=e.fnScopeId))u.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t),n=n.parent;i(t=xt)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t)}function _(e,t,n,a,i,s){for(;a<=i;++a)y(n[a],s,e,t,!1,n,a)}function w(e){var t,n,a=e.data;if(i(a))for(i(t=a.hook)&&i(t=t.destroy)&&t(e),t=0;t<d.destroy.length;++t)d.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function g(e,t,n){for(;t<=n;++t){var a=e[t];i(a)&&(i(a.tag)?(k(a),w(a)):l(a.elm))}}function k(e,t){if(i(t)||i(e.data)){var n,a=d.remove.length+1;for(i(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&l(e)}return n.listeners=t,n}(e.elm,a),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&k(n,t),n=0;n<d.remove.length;++n)d.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else l(e.elm)}function M(e,t,n,a){for(var s=n;s<a;s++){var r=t[s];if(i(r)&&xa(e,r))return s}}function x(e,t,n,r,o,p){if(e!==t){i(t.elm)&&i(r)&&(t=r[o]=me(t));var l=t.elm=e.elm;if(s(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?P(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;i(m)&&i(c=m.hook)&&i(c=c.prepatch)&&c(e,t);var T=e.children,f=t.children;if(i(m)&&h(t)){for(c=0;c<d.update.length;++c)d.update[c](e,t);i(c=m.hook)&&i(c=c.update)&&c(e,t)}a(t.text)?i(T)&&i(f)?T!==f&&function(e,t,n,s,r){for(var o,d,p,l=0,c=0,m=t.length-1,T=t[0],f=t[m],h=n.length-1,b=n[0],v=n[h],w=!r;l<=m&&c<=h;)a(T)?T=t[++l]:a(f)?f=t[--m]:xa(T,b)?(x(T,b,s,n,c),T=t[++l],b=n[++c]):xa(f,v)?(x(f,v,s,n,h),f=t[--m],v=n[--h]):xa(T,v)?(x(T,v,s,n,h),w&&u.insertBefore(e,T.elm,u.nextSibling(f.elm)),T=t[++l],v=n[--h]):xa(f,b)?(x(f,b,s,n,c),w&&u.insertBefore(e,f.elm,T.elm),f=t[--m],b=n[++c]):(a(o)&&(o=Sa(t,l,m)),a(d=i(b.key)?o[b.key]:M(b,t,l,m))?y(b,s,e,T.elm,!1,n,c):xa(p=t[d],b)?(x(p,b,s,n,c),t[d]=void 0,w&&u.insertBefore(e,p.elm,T.elm)):y(b,s,e,T.elm,!1,n,c),b=n[++c]);l>m?_(e,a(n[h+1])?null:n[h+1].elm,n,c,h,s):c>h&&g(t,l,m)}(l,T,f,n,p):i(f)?(i(e.text)&&u.setTextContent(l,""),_(l,null,f,0,f.length-1,n)):i(T)?g(T,0,T.length-1):i(e.text)&&u.setTextContent(l,""):e.text!==t.text&&u.setTextContent(l,t.text),i(m)&&i(c=m.hook)&&i(c=c.postpatch)&&c(e,t)}}}function S(e,t,n){if(s(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var A=T("attrs,class,staticClass,staticStyle,key");function P(e,t,n,a){var r,o=t.tag,d=t.data,p=t.children;if(a=a||d&&d.pre,t.elm=e,s(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(d)&&(i(r=d.hook)&&i(r=r.init)&&r(t,!0),i(r=t.componentInstance)))return c(t,n),!0;if(i(o)){if(i(p))if(e.hasChildNodes())if(i(r=d)&&i(r=r.domProps)&&i(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var u=!0,l=e.firstChild,y=0;y<p.length;y++){if(!l||!P(l,p[y],n,a)){u=!1;break}l=l.nextSibling}if(!u||l)return!1}else f(t,p,n);if(i(d)){var m=!1;for(var T in d)if(!A(T)){m=!0,b(t,n);break}!m&&d.class&&dn(d.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,r){if(!a(t)){var o,p=!1,l=[];if(a(e))p=!0,y(t,l);else{var c=i(e.nodeType);if(!c&&xa(e,t))x(e,t,l,null,null,r);else{if(c){if(1===e.nodeType&&e.hasAttribute(B)&&(e.removeAttribute(B),n=!0),s(n)&&P(e,t,l))return S(t,l,!0),e;o=e,e=new le(u.tagName(o).toLowerCase(),{},[],void 0,o)}var m=e.elm,T=u.parentNode(m);if(y(t,l,m._leaveCb?null:T,u.nextSibling(m)),i(t.parent))for(var f=t.parent,b=h(t);f;){for(var v=0;v<d.destroy.length;++v)d.destroy[v](f);if(f.elm=t.elm,b){for(var _=0;_<d.create.length;++_)d.create[_](ka,f);var k=f.data.hook.insert;if(k.merged)for(var M=1;M<k.fns.length;M++)k.fns[M]()}else wa(f);f=f.parent}i(T)?g([e],0,0):i(e.tag)&&w(e)}}return S(t,l,p),t.elm}i(e)&&w(e)}}({nodeOps:va,modules:[La,Wa,wi,Mi,Di,G?{create:os,activate:os,remove:function(e,t){!0!==e.data.show?is(e,t):t()}}:{}].concat(Fa)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&fs(e,"input")}));var ps={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?ze(n,"postpatch",(function(){ps.componentUpdated(e,t,n)})):us(e,t,n.context),e._vOptions=[].map.call(e.options,cs)):("textarea"===n.tag||ha(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",ms),e.addEventListener("compositionend",Ts),e.addEventListener("change",Ts),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){us(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,cs);i.some((function(e,t){return!C(e,a[t])}))&&(e.multiple?t.value.some((function(e){return ys(e,i)})):t.value!==t.oldValue&&ys(t.value,i))&&fs(e,"change")}}};function us(e,t,n){ls(e,t),(Y||J)&&setTimeout((function(){ls(e,t)}),0)}function ls(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var s,r,o=0,d=e.options.length;o<d;o++)if(r=e.options[o],i)s=D(a,cs(r))>-1,r.selected!==s&&(r.selected=s);else if(C(cs(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));i||(e.selectedIndex=-1)}}function ys(e,t){return t.every((function(t){return!C(t,e)}))}function cs(e){return"_value"in e?e._value:e.value}function ms(e){e.target.composing=!0}function Ts(e){e.target.composing&&(e.target.composing=!1,fs(e.target,"input"))}function fs(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function hs(e){return!e.componentInstance||e.data&&e.data.transition?e:hs(e.componentInstance._vnode)}var bs={model:ps,show:{bind:function(e,t,n){var a=t.value,i=(n=hs(n)).data&&n.data.transition,s=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,as(n,(function(){e.style.display=s}))):e.style.display=a?s:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=hs(n)).data&&n.data.transition?(n.data.show=!0,a?as(n,(function(){e.style.display=e.__vOriginalDisplay})):is(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}}},vs={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function _s(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?_s(_t(t.children)):e}function ws(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var a in i)t[k(a)]=i[a];return t}function gs(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ks=function(e){return e.tag||ut(e)},Ms=function(e){return"show"===e.name},xs={name:"transition",props:vs,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ks)).length){var a=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var s=_s(i);if(!s)return i;if(this._leaving)return gs(e,i);var o="__transition-".concat(this._uid,"-");s.key=null==s.key?s.isComment?o+"comment":o+s.tag:r(s.key)?0===String(s.key).indexOf(o)?s.key:o+s.key:s.key;var d=(s.data||(s.data={})).transition=ws(this),p=this._vnode,u=_s(p);if(s.data.directives&&s.data.directives.some(Ms)&&(s.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(s,u)&&!ut(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var l=u.data.transition=I({},d);if("out-in"===a)return this._leaving=!0,ze(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),gs(e,i);if("in-out"===a){if(ut(s))return p;var y,c=function(){y()};ze(d,"afterEnter",c),ze(d,"enterCancelled",c),ze(l,"delayLeave",(function(e){y=e}))}}return i}}},Ss=I({tag:String,moveClass:String},vs);delete Ss.mode;var As={props:Ss,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=St(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],r=ws(this),o=0;o<i.length;o++)(u=i[o]).tag&&null!=u.key&&0!==String(u.key).indexOf("__vlist")&&(s.push(u),n[u.key]=u,(u.data||(u.data={})).transition=r);if(a){var d=[],p=[];for(o=0;o<a.length;o++){var u;(u=a[o]).data.transition=r,u.data.pos=u.elm.getBoundingClientRect(),n[u.key]?d.push(u):p.push(u)}this.kept=e(t,null,d),this.removed=p}return e(t,null,s)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Ps),e.forEach(Is),e.forEach(Os),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Xi(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Wi,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Wi,e),n._moveCb=null,Ji(n,t))})}})))},methods:{hasMove:function(e,t){if(!Ni)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Bi(n,e)})),Li(n,t),n.style.display="none",this.$el.appendChild(n);var a=es(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function Ps(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Is(e){e.data.newPos=e.elm.getBoundingClientRect()}function Os(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var s=e.elm.style;s.transform=s.WebkitTransform="translate(".concat(a,"px,").concat(i,"px)"),s.transitionDuration="0s"}}var Es={Transition:xs,TransitionGroup:As};Wn.config.mustUseProp=ea,Wn.config.isReservedTag=ma,Wn.config.isReservedAttr=Zn,Wn.config.getTagNamespace=Ta,Wn.config.isUnknownElement=function(e){if(!G)return!0;if(ma(e))return!1;if(e=e.toLowerCase(),null!=fa[e])return fa[e];var t=document.createElement(e);return e.indexOf("-")>-1?fa[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:fa[e]=/HTMLUnknownElement/.test(t.toString())},I(Wn.options.directives,bs),I(Wn.options.components,Es),Wn.prototype.__patch__=G?ds:E,Wn.prototype.$mount=function(e,t){return function(e,t,n){var a;e.$el=t,e.$options.render||(e.$options.render=ye),Ot(e,"beforeMount"),a=function(){e._update(e._render(),n)},new ln(e,a,E,{before:function(){e._isMounted&&!e._isDestroyed&&Ot(e,"beforeUpdate")}},!0),n=!1;var i=e._preWatchers;if(i)for(var s=0;s<i.length;s++)i[s].run();return null==e.$vnode&&(e._isMounted=!0,Ot(e,"mounted")),e}(this,e=e&&G?ba(e):void 0,t)},G&&setTimeout((function(){N.devtools&&se&&se.emit("init",Wn)}),0);var Rs,Fs=/\{\{((?:.|\r?\n)+?)\}\}/g,Cs=/[-.*+?^${}()|[\]\/\\]/g,Ds=w((function(e){var t=e[0].replace(Cs,"\\$&"),n=e[1].replace(Cs,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),Vs={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=ii(e,"class");n&&(e.staticClass=JSON.stringify(n.replace(/\s+/g," ").trim()));var a=ai(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:".concat(e.staticClass,",")),e.classBinding&&(t+="class:".concat(e.classBinding,",")),t}},Ls={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=ii(e,"style");n&&(e.staticStyle=JSON.stringify(xi(n)));var a=ai(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:".concat(e.staticStyle,",")),e.styleBinding&&(t+="style:(".concat(e.styleBinding,"),")),t}},Bs=T("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Us=T("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),zs=T("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Ns=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,qs=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,$s="[a-zA-Z_][\\-\\.0-9_a-zA-Z".concat(q.source,"]*"),Hs="((?:".concat($s,"\\:)?").concat($s,")"),Ws=new RegExp("^<".concat(Hs)),js=/^\s*(\/?)>/,Gs=new RegExp("^<\\/".concat(Hs,"[^>]*>")),Ks=/^<!DOCTYPE [^>]+>/i,Ys=/^<!\--/,Xs=/^<!\[/,Js=T("script,style,textarea",!0),Zs={},Qs={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},er=/&(?:lt|gt|quot|amp|#39);/g,tr=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,nr=T("pre,textarea",!0),ar=function(e,t){return e&&nr(e)&&"\n"===t[0]};function ir(e,t){var n=t?tr:er;return e.replace(n,(function(e){return Qs[e]}))}var sr,rr,or,dr,pr,ur,lr,yr,cr=/^@|^v-on:/,mr=/^v-|^@|^:|^#/,Tr=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,fr=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,hr=/^\(|\)$/g,br=/^\[.*\]$/,vr=/:(.*)$/,_r=/^:|^\.|^v-bind:/,wr=/\.[^.\]]+(?=[^\]]*$)/g,gr=/^v-slot(:|$)|^#/,kr=/[\r\n]/,Mr=/[ \f\t\r\n]+/g,xr=w((function(e){return(Rs=Rs||document.createElement("div")).innerHTML=e,Rs.textContent})),Sr="_empty_";function Ar(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:Cr(t),rawAttrsMap:{},parent:n,children:[]}}function Pr(e,t){sr=t.warn||Ya,ur=t.isPreTag||R,lr=t.mustUseProp||R,yr=t.getTagNamespace||R;t.isReservedTag;or=Xa(t.modules,"transformNode"),dr=Xa(t.modules,"preTransformNode"),pr=Xa(t.modules,"postTransformNode"),rr=t.delimiters;var n,a,i=[],s=!1!==t.preserveWhitespace,r=t.whitespace,o=!1,d=!1;function p(e){if(u(e),o||e.processed||(e=Ir(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&Er(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)r=e,p=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),p&&p.if&&Er(p,{exp:r.elseif,block:r});else{if(e.slotScope){var s=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[s]=e}a.children.push(e),e.parent=a}var r,p;e.children=e.children.filter((function(e){return!e.slotScope})),u(e),e.pre&&(o=!1),ur(e.tag)&&(d=!1);for(var l=0;l<pr.length;l++)pr[l](e,t)}function u(e){if(!d)for(var t=void 0;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],s=t.expectHTML,r=t.isUnaryTag||R,o=t.canBeLeftOpenTag||R,d=0,p=function(){if(n=e,a&&Js(a)){var p=0,y=a.toLowerCase(),c=Zs[y]||(Zs[y]=new RegExp("([\\s\\S]*?)(</"+y+"[^>]*>)","i"));g=e.replace(c,(function(e,n,a){return p=a.length,Js(y)||"noscript"===y||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),ar(y,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""})),d+=e.length-g.length,e=g,l(y,d-p,d)}else{var m=e.indexOf("<");if(0===m){if(Ys.test(e)){var T=e.indexOf("--\x3e");if(T>=0)return t.shouldKeepComment&&t.comment&&t.comment(e.substring(4,T),d,d+T+3),u(T+3),"continue"}if(Xs.test(e)){var f=e.indexOf("]>");if(f>=0)return u(f+2),"continue"}var h=e.match(Ks);if(h)return u(h[0].length),"continue";var b=e.match(Gs);if(b){var v=d;return u(b[0].length),l(b[1],v,d),"continue"}var _=function(){var t=e.match(Ws);if(t){var n={tagName:t[1],attrs:[],start:d};u(t[0].length);for(var a=void 0,i=void 0;!(a=e.match(js))&&(i=e.match(qs)||e.match(Ns));)i.start=d,u(i[0].length),i.end=d,n.attrs.push(i);if(a)return n.unarySlash=a[1],u(a[0].length),n.end=d,n}}();if(_)return function(e){var n=e.tagName,d=e.unarySlash;s&&("p"===a&&zs(n)&&l(a),o(n)&&a===n&&l(n));for(var p=r(n)||!!d,u=e.attrs.length,y=new Array(u),c=0;c<u;c++){var m=e.attrs[c],T=m[3]||m[4]||m[5]||"",f="a"===n&&"href"===m[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;y[c]={name:m[1],value:ir(T,f)}}p||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:y,start:e.start,end:e.end}),a=n),t.start&&t.start(n,y,p,e.start,e.end)}(_),ar(_.tagName,e)&&u(1),"continue"}var w=void 0,g=void 0,k=void 0;if(m>=0){for(g=e.slice(m);!(Gs.test(g)||Ws.test(g)||Ys.test(g)||Xs.test(g)||(k=g.indexOf("<",1))<0);)m+=k,g=e.slice(m);w=e.substring(0,m)}m<0&&(w=e),w&&u(w.length),t.chars&&w&&t.chars(w,d-w.length,d)}if(e===n)return t.chars&&t.chars(e),"break"};e&&"break"!==p(););function u(t){d+=t,e=e.substring(t)}function l(e,n,s){var r,o;if(null==n&&(n=d),null==s&&(s=d),e)for(o=e.toLowerCase(),r=i.length-1;r>=0&&i[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var p=i.length-1;p>=r;p--)t.end&&t.end(i[p].tag,n,s);i.length=r,a=r&&i[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,s):"p"===o&&(t.start&&t.start(e,[],!1,n,s),t.end&&t.end(e,n,s))}l()}(e,{warn:sr,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,s,r,u,l){var y=a&&a.ns||yr(e);Y&&"svg"===y&&(s=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];Dr.test(a.name)||(a.name=a.name.replace(Vr,""),t.push(a))}return t}(s));var c,m=Ar(e,s,a);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||ie()||(m.forbidden=!0);for(var T=0;T<dr.length;T++)m=dr[T](m,t)||m;o||(function(e){null!=ii(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(o=!0)),ur(m.tag)&&(d=!0),o?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(m):m.processed||(Or(m),function(e){var t=ii(e,"v-if");if(t)e.if=t,Er(e,{exp:t,block:e});else{null!=ii(e,"v-else")&&(e.else=!0);var n=ii(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=ii(e,"v-once")&&(e.once=!0)}(m)),n||(n=m),r?p(m):(a=m,i.push(m))},end:function(e,t,n){var s=i[i.length-1];i.length-=1,a=i[i.length-1],p(s)},chars:function(e,t,n){if(a&&(!Y||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,p=a.children;if(e=d||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:xr(e):p.length?r?"condense"===r&&kr.test(e)?"":" ":s?" ":"":""){d||"condense"!==r||(e=e.replace(Mr," "));var u=void 0,l=void 0;!o&&" "!==e&&(u=function(e,t){var n=t?Ds(t):Fs;if(n.test(e)){for(var a,i,s,r=[],o=[],d=n.lastIndex=0;a=n.exec(e);){(i=a.index)>d&&(o.push(s=e.slice(d,i)),r.push(JSON.stringify(s)));var p=Ga(a[1].trim());r.push("_s(".concat(p,")")),o.push({"@binding":p}),d=i+a[0].length}return d<e.length&&(o.push(s=e.slice(d)),r.push(JSON.stringify(s))),{expression:r.join("+"),tokens:o}}}(e,rr))?l={type:2,expression:u.expression,tokens:u.tokens,text:e}:" "===e&&p.length&&" "===p[p.length-1].text||(l={type:3,text:e}),l&&p.push(l)}}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};a.children.push(i)}}}),n}function Ir(e,t){var n;!function(e){var t=ai(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=ai(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=ii(e,"scope"),e.slotScope=t||ii(e,"slot-scope")):(t=ii(e,"slot-scope"))&&(e.slotScope=t);var n,a=ai(e,"slot");if(a&&(e.slotTarget='""'===a?'"default"':a,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Za(e,"slot",a,function(e,t){return e.rawAttrsMap[":slot"]||e.rawAttrsMap["v-bind:slot"]||e.rawAttrsMap.slot}(e))),"template"===e.tag){if(n=si(e,gr)){var i=Rr(n),s=i.name,r=i.dynamic;e.slotTarget=s,e.slotTargetDynamic=r,e.slotScope=n.value||Sr}}else if(n=si(e,gr)){var o=e.scopedSlots||(e.scopedSlots={}),d=Rr(n),p=d.name,u=(r=d.dynamic,o[p]=Ar("template",[],e));u.slotTarget=p,u.slotTargetDynamic=r,u.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=u,!0})),u.slotScope=n.value||Sr,e.children=[],e.plain=!1}}(e),"slot"===(n=e).tag&&(n.slotName=ai(n,"name")),function(e){var t;(t=ai(e,"is"))&&(e.component=t),null!=ii(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<or.length;a++)e=or[a](e,t)||e;return function(e){var t,n,a,i,s,r,o,d,p=e.attrsList;for(t=0,n=p.length;t<n;t++)if(a=i=p[t].name,s=p[t].value,mr.test(a))if(e.hasBindings=!0,(r=Fr(a.replace(mr,"")))&&(a=a.replace(wr,"")),_r.test(a))a=a.replace(_r,""),s=Ga(s),(d=br.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!d&&"innerHtml"===(a=k(a))&&(a="innerHTML"),r.camel&&!d&&(a=k(a)),r.sync&&(o=di(s,"$event"),d?ni(e,'"update:"+('.concat(a,")"),o,null,!1,0,p[t],!0):(ni(e,"update:".concat(k(a)),o,null,!1,0,p[t]),S(a)!==k(a)&&ni(e,"update:".concat(S(a)),o,null,!1,0,p[t])))),r&&r.prop||!e.component&&lr(e.tag,e.attrsMap.type,a)?Ja(e,a,s,p[t],d):Za(e,a,s,p[t],d);else if(cr.test(a))a=a.replace(cr,""),(d=br.test(a))&&(a=a.slice(1,-1)),ni(e,a,s,r,!1,0,p[t],d);else{var u=(a=a.replace(mr,"")).match(vr),l=u&&u[1];d=!1,l&&(a=a.slice(0,-(l.length+1)),br.test(l)&&(l=l.slice(1,-1),d=!0)),ei(e,a,i,s,l,d,r,p[t])}else Za(e,a,JSON.stringify(s),p[t]),!e.component&&"muted"===a&&lr(e.tag,e.attrsMap.type,a)&&Ja(e,a,"true",p[t])}(e),e}function Or(e){var t;if(t=ii(e,"v-for")){var n=function(e){var t=e.match(Tr);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(hr,""),i=a.match(fr);return i?(n.alias=a.replace(fr,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a,n}}(t);n&&I(e,n)}}function Er(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function Rr(e){var t=e.name.replace(gr,"");return t||"#"!==e.name[0]&&(t="default"),br.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'.concat(t,'"'),dynamic:!1}}function Fr(e){var t=e.match(wr);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function Cr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var Dr=/^xmlns:NS\d+/,Vr=/^NS\d+:/;function Lr(e){return Ar(e.tag,e.attrsList.slice(),e.parent)}var Br,Ur,zr=[Vs,Ls,{preTransformNode:function(e,t){if("input"===e.tag){var n=e.attrsMap;if(!n["v-model"])return;var a=void 0;if((n[":type"]||n["v-bind:type"])&&(a=ai(e,"type")),n.type||a||!n["v-bind"]||(a="(".concat(n["v-bind"],").type")),a){var i=ii(e,"v-if",!0),s=i?"&&(".concat(i,")"):"",r=null!=ii(e,"v-else",!0),o=ii(e,"v-else-if",!0),d=Lr(e);Or(d),Qa(d,"type","checkbox"),Ir(d,t),d.processed=!0,d.if="(".concat(a,")==='checkbox'")+s,Er(d,{exp:d.if,block:d});var p=Lr(e);ii(p,"v-for",!0),Qa(p,"type","radio"),Ir(p,t),Er(d,{exp:"(".concat(a,")==='radio'")+s,block:p});var u=Lr(e);return ii(u,"v-for",!0),Qa(u,":type",a),Ir(u,t),Er(d,{exp:i,block:u}),r?d.else=!0:o&&(d.elseif=o),d}}}}],Nr={expectHTML:!0,modules:zr,directives:{model:function(e,t,n){var a=t.value,i=t.modifiers,s=e.tag,r=e.attrsMap.type;if(e.component)return oi(e,a,i),!1;if("select"===s)!function(e,t,n){var a=n&&n.number,i='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;'+"return ".concat(a?"_n(val)":"val","})"),s="var $$selectedVal = ".concat(i,";");ni(e,"change",s="".concat(s," ").concat(di(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]")),null,!0)}(e,a,i);else if("input"===s&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,i=ai(e,"value")||"null",s=ai(e,"true-value")||"true",r=ai(e,"false-value")||"false";Ja(e,"checked","Array.isArray(".concat(t,")")+"?_i(".concat(t,",").concat(i,")>-1")+("true"===s?":(".concat(t,")"):":_q(".concat(t,",").concat(s,")"))),ni(e,"change","var $$a=".concat(t,",")+"$$el=$event.target,"+"$$c=$$el.checked?(".concat(s,"):(").concat(r,");")+"if(Array.isArray($$a)){"+"var $$v=".concat(a?"_n("+i+")":i,",")+"$$i=_i($$a,$$v);"+"if($$el.checked){$$i<0&&(".concat(di(t,"$$a.concat([$$v])"),")}")+"else{$$i>-1&&(".concat(di(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))"),")}")+"}else{".concat(di(t,"$$c"),"}"),null,!0)}(e,a,i);else if("input"===s&&"radio"===r)!function(e,t,n){var a=n&&n.number,i=ai(e,"value")||"null";i=a?"_n(".concat(i,")"):i,Ja(e,"checked","_q(".concat(t,",").concat(i,")")),ni(e,"change",di(t,i),null,!0)}(e,a,i);else if("input"===s||"textarea"===s)!function(e,t,n){var a=e.attrsMap.type,i=n||{},s=i.lazy,r=i.number,o=i.trim,d=!s&&"range"!==a,p=s?"change":"range"===a?"__r":"input",u="$event.target.value";o&&(u="$event.target.value.trim()"),r&&(u="_n(".concat(u,")"));var l=di(t,u);d&&(l="if($event.target.composing)return;".concat(l)),Ja(e,"value","(".concat(t,")")),ni(e,p,l,null,!0),(o||r)&&ni(e,"blur","$forceUpdate()")}(e,a,i);else if(!N.isReservedTag(s))return oi(e,a,i),!1;return!0},text:function(e,t){t.value&&Ja(e,"textContent","_s(".concat(t.value,")"),t)},html:function(e,t){t.value&&Ja(e,"innerHTML","_s(".concat(t.value,")"),t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:Bs,mustUseProp:ea,canBeLeftOpenTag:Us,isReservedTag:ma,getTagNamespace:Ta,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(zr)},qr=w((function(e){return T("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function $r(e,t){e&&(Br=qr(t.staticKeys||""),Ur=t.isReservedTag||R,Hr(e),Wr(e,!1))}function Hr(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||f(e.tag)||!Ur(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(Br))))}(e),1===e.type){if(!Ur(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Hr(a),a.static||(e.static=!1)}if(e.ifConditions)for(t=1,n=e.ifConditions.length;t<n;t++){var i=e.ifConditions[t].block;Hr(i),i.static||(e.static=!1)}}}function Wr(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Wr(e.children[n],t||!!e.for);if(e.ifConditions)for(n=1,a=e.ifConditions.length;n<a;n++)Wr(e.ifConditions[n].block,t)}}var jr=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Gr=/\([^)]*?\);*$/,Kr=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Yr={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Xr={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Jr=function(e){return"if(".concat(e,")return null;")},Zr={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Jr("$event.target !== $event.currentTarget"),ctrl:Jr("!$event.ctrlKey"),shift:Jr("!$event.shiftKey"),alt:Jr("!$event.altKey"),meta:Jr("!$event.metaKey"),left:Jr("'button' in $event && $event.button !== 0"),middle:Jr("'button' in $event && $event.button !== 1"),right:Jr("'button' in $event && $event.button !== 2")};function Qr(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var s in e){var r=eo(e[s]);e[s]&&e[s].dynamic?i+="".concat(s,",").concat(r,","):a+='"'.concat(s,'":').concat(r,",")}return a="{".concat(a.slice(0,-1),"}"),i?n+"_d(".concat(a,",[").concat(i.slice(0,-1),"])"):n+a}function eo(e){if(!e)return"function(){}";if(Array.isArray(e))return"[".concat(e.map((function(e){return eo(e)})).join(","),"]");var t=Kr.test(e.value),n=jr.test(e.value),a=Kr.test(e.value.replace(Gr,""));if(e.modifiers){var i="",s="",r=[],o=function(t){if(Zr[t])s+=Zr[t],Yr[t]&&r.push(t);else if("exact"===t){var n=e.modifiers;s+=Jr(["ctrl","shift","alt","meta"].filter((function(e){return!n[e]})).map((function(e){return"$event.".concat(e,"Key")})).join("||"))}else r.push(t)};for(var d in e.modifiers)o(d);r.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+"".concat(e.map(to).join("&&"),")return null;")}(r)),s&&(i+=s);var p=t?"return ".concat(e.value,".apply(null, arguments)"):n?"return (".concat(e.value,").apply(null, arguments)"):a?"return ".concat(e.value):e.value;return"function($event){".concat(i).concat(p,"}")}return t||n?e.value:"function($event){".concat(a?"return ".concat(e.value):e.value,"}")}function to(e){var t=parseInt(e,10);if(t)return"$event.keyCode!==".concat(t);var n=Yr[e],a=Xr[e];return"_k($event.keyCode,"+"".concat(JSON.stringify(e),",")+"".concat(JSON.stringify(n),",")+"$event.key,"+"".concat(JSON.stringify(a))+")"}var no={on:function(e,t){e.wrapListeners=function(e){return"_g(".concat(e,",").concat(t.value,")")}},bind:function(e,t){e.wrapData=function(n){return"_b(".concat(n,",'").concat(e.tag,"',").concat(t.value,",").concat(t.modifiers&&t.modifiers.prop?"true":"false").concat(t.modifiers&&t.modifiers.sync?",true":"",")")}},cloak:E},ao=function(e){this.options=e,this.warn=e.warn||Ya,this.transforms=Xa(e.modules,"transformCode"),this.dataGenFns=Xa(e.modules,"genData"),this.directives=I(I({},no),e.directives);var t=e.isReservedTag||R;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function io(e,t){var n=new ao(t),a=e?"script"===e.tag?"null":so(e,n):'_c("div")';return{render:"with(this){return ".concat(a,"}"),staticRenderFns:n.staticRenderFns}}function so(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return ro(e,t);if(e.once&&!e.onceProcessed)return oo(e,t);if(e.for&&!e.forProcessed)return lo(e,t);if(e.if&&!e.ifProcessed)return po(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=To(e,t),i="_t(".concat(n).concat(a?",function(){return ".concat(a,"}"):""),s=e.attrs||e.dynamicAttrs?bo((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:k(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];return!s&&!r||a||(i+=",null"),s&&(i+=",".concat(s)),r&&(i+="".concat(s?"":",null",",").concat(r)),i+")"}(e,t);var n=void 0;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:To(t,n,!0);return"_c(".concat(e,",").concat(yo(t,n)).concat(a?",".concat(a):"",")")}(e.component,e,t);else{var a=void 0,i=t.maybeComponent(e);(!e.plain||e.pre&&i)&&(a=yo(e,t));var s=void 0,r=t.options.bindings;i&&r&&!1!==r.__isScriptSetup&&(s=function(e,t){var n=k(t),a=M(n),i=function(i){return e[t]===i?t:e[n]===i?n:e[a]===i?a:void 0},s=i("setup-const")||i("setup-reactive-const");if(s)return s;var r=i("setup-let")||i("setup-ref")||i("setup-maybe-ref");return r||void 0}(r,e.tag)),s||(s="'".concat(e.tag,"'"));var o=e.inlineTemplate?null:To(e,t,!0);n="_c(".concat(s).concat(a?",".concat(a):"").concat(o?",".concat(o):"",")")}for(var d=0;d<t.transforms.length;d++)n=t.transforms[d](e,n);return n}return To(e,t)||"void 0"}function ro(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return ".concat(so(e,t),"}")),t.pre=n,"_m(".concat(t.staticRenderFns.length-1).concat(e.staticInFor?",true":"",")")}function oo(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return po(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o(".concat(so(e,t),",").concat(t.onceId++,",").concat(n,")"):so(e,t)}return ro(e,t)}function po(e,t,n,a){return e.ifProcessed=!0,uo(e.ifConditions.slice(),t,n,a)}function uo(e,t,n,a){if(!e.length)return a||"_e()";var i=e.shift();return i.exp?"(".concat(i.exp,")?").concat(s(i.block),":").concat(uo(e,t,n,a)):"".concat(s(i.block));function s(e){return n?n(e,t):e.once?oo(e,t):so(e,t)}}function lo(e,t,n,a){var i=e.for,s=e.alias,r=e.iterator1?",".concat(e.iterator1):"",o=e.iterator2?",".concat(e.iterator2):"";return e.forProcessed=!0,"".concat(a||"_l","((").concat(i,"),")+"function(".concat(s).concat(r).concat(o,"){")+"return ".concat((n||so)(e,t))+"})"}function yo(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,i,s,r,o="directives:[",d=!1;for(a=0,i=n.length;a<i;a++){s=n[a],r=!0;var p=t.directives[s.name];p&&(r=!!p(e,s,t.warn)),r&&(d=!0,o+='{name:"'.concat(s.name,'",rawName:"').concat(s.rawName,'"').concat(s.value?",value:(".concat(s.value,"),expression:").concat(JSON.stringify(s.value)):"").concat(s.arg?",arg:".concat(s.isDynamicArg?s.arg:'"'.concat(s.arg,'"')):"").concat(s.modifiers?",modifiers:".concat(JSON.stringify(s.modifiers)):"","},"))}return d?o.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:".concat(e.key,",")),e.ref&&(n+="ref:".concat(e.ref,",")),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'.concat(e.tag,'",'));for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:".concat(bo(e.attrs),",")),e.props&&(n+="domProps:".concat(bo(e.props),",")),e.events&&(n+="".concat(Qr(e.events,!1),",")),e.nativeEvents&&(n+="".concat(Qr(e.nativeEvents,!0),",")),e.slotTarget&&!e.slotScope&&(n+="slot:".concat(e.slotTarget,",")),e.scopedSlots&&(n+="".concat(function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||co(n)})),i=!!e.if;if(!a)for(var s=e.parent;s;){if(s.slotScope&&s.slotScope!==Sr||s.for){a=!0;break}s.if&&(i=!0),s=s.parent}var r=Object.keys(t).map((function(e){return mo(t[e],n)})).join(",");return"scopedSlots:_u([".concat(r,"]").concat(a?",null,true":"").concat(!a&&i?",null,false,".concat(function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r)):"",")")}(e,e.scopedSlots,t),",")),e.model&&(n+="model:{value:".concat(e.model.value,",callback:").concat(e.model.callback,",expression:").concat(e.model.expression,"},")),e.inlineTemplate){var s=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=io(n,t.options);return"inlineTemplate:{render:function(){".concat(a.render,"},staticRenderFns:[").concat(a.staticRenderFns.map((function(e){return"function(){".concat(e,"}")})).join(","),"]}")}}(e,t);s&&(n+="".concat(s,","))}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b(".concat(n,',"').concat(e.tag,'",').concat(bo(e.dynamicAttrs),")")),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function co(e){return 1===e.type&&("slot"===e.tag||e.children.some(co))}function mo(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return po(e,t,mo,"null");if(e.for&&!e.forProcessed)return lo(e,t,mo);var a=e.slotScope===Sr?"":String(e.slotScope),i="function(".concat(a,"){")+"return ".concat("template"===e.tag?e.if&&n?"(".concat(e.if,")?").concat(To(e,t)||"undefined",":undefined"):To(e,t)||"undefined":so(e,t),"}"),s=a?"":",proxy:true";return"{key:".concat(e.slotTarget||'"default"',",fn:").concat(i).concat(s,"}")}function To(e,t,n,a,i){var s=e.children;if(s.length){var r=s[0];if(1===s.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return"".concat((a||so)(r,t)).concat(o)}var d=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(fo(i)||i.ifConditions&&i.ifConditions.some((function(e){return fo(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(s,t.maybeComponent):0,p=i||ho;return"[".concat(s.map((function(e){return p(e,t)})).join(","),"]").concat(d?",".concat(d):"")}}function fo(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function ho(e,t){return 1===e.type?so(e,t):3===e.type&&e.isComment?function(e){return"_e(".concat(JSON.stringify(e.text),")")}(e):"_v(".concat(2===(n=e).type?n.expression:vo(JSON.stringify(n.text)),")");var n}function bo(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],s=vo(i.value);i.dynamic?n+="".concat(i.name,",").concat(s,","):t+='"'.concat(i.name,'":').concat(s,",")}return t="{".concat(t.slice(0,-1),"}"),n?"_d(".concat(t,",[").concat(n.slice(0,-1),"])"):t}function vo(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function _o(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),E}}function wo(e){var t=Object.create(null);return function(n,a,i){(a=I({},a)).warn,delete a.warn;var s=a.delimiters?String(a.delimiters)+n:n;if(t[s])return t[s];var r=e(n,a),o={},d=[];return o.render=_o(r.render,d),o.staticRenderFns=r.staticRenderFns.map((function(e){return _o(e,d)})),t[s]=o}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var go,ko,Mo=(go=function(e,t){var n=Pr(e.trim(),t);!1!==t.optimize&&$r(n,t);var a=io(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],s=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=I(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?s:i).push(e)};var o=go(t.trim(),a);return o.errors=i,o.tips=s,o}return{compile:t,compileToFunctions:wo(t)}}),xo=Mo(Nr).compileToFunctions;function So(e){return(ko=ko||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',ko.innerHTML.indexOf("&#10;")>0}var Ao=!!G&&So(!1),Po=!!G&&So(!0),Io=w((function(e){var t=ba(e);return t&&t.innerHTML})),Oo=Wn.prototype.$mount;function Eo(e,t){for(var n in t)e[n]=t[n];return e}Wn.prototype.$mount=function(e,t){if((e=e&&ba(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=Io(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var i=xo(a,{outputSourceRange:!1,shouldDecodeNewlines:Ao,shouldDecodeNewlinesForHref:Po,delimiters:n.delimiters,comments:n.comments},this),s=i.render,r=i.staticRenderFns;n.render=s,n.staticRenderFns=r}}return Oo.call(this,e,t)},Wn.compile=xo;var Ro=/[!'()*]/g,Fo=function(e){return"%"+e.charCodeAt(0).toString(16)},Co=/%2C/g,Do=function(e){return encodeURIComponent(e).replace(Ro,Fo).replace(Co,",")};function Vo(e){try{return decodeURIComponent(e)}catch(e){}return e}var Lo=function(e){return null==e||"object"==typeof e?e:String(e)};function Bo(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=Vo(n.shift()),i=n.length>0?Vo(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function Uo(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Do(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(Do(t)):a.push(Do(t)+"="+Do(e)))})),a.join("&")}return Do(t)+"="+Do(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var zo=/\/?$/;function No(e,t,n,a){var i=a&&a.options.stringifyQuery,s=t.query||{};try{s=qo(s)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:s,params:t.params||{},fullPath:Wo(t,i),matched:e?Ho(e):[]};return n&&(r.redirectedFrom=Wo(n,i)),Object.freeze(r)}function qo(e){if(Array.isArray(e))return e.map(qo);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=qo(e[n]);return t}return e}var $o=No(null,{path:"/"});function Ho(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Wo(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||Uo)(a)+i}function jo(e,t,n){return t===$o?e===t:!!t&&(e.path&&t.path?e.path.replace(zo,"")===t.path.replace(zo,"")&&(n||e.hash===t.hash&&Go(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&Go(e.query,t.query)&&Go(e.params,t.params)))}function Go(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var s=e[n];if(a[i]!==n)return!1;var r=t[n];return null==s||null==r?s===r:"object"==typeof s&&"object"==typeof r?Go(s,r):String(s)===String(r)}))}function Ko(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],s=n.enteredCbs[a];if(i&&s){delete n.enteredCbs[a];for(var r=0;r<s.length;r++)i._isBeingDestroyed||s[r](i)}}}}var Yo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,s=t.data;s.routerView=!0;for(var r=i.$createElement,o=n.name,d=i.$route,p=i._routerViewCache||(i._routerViewCache={}),u=0,l=!1;i&&i._routerRoot!==i;){var y=i.$vnode?i.$vnode.data:{};y.routerView&&u++,y.keepAlive&&i._directInactive&&i._inactive&&(l=!0),i=i.$parent}if(s.routerViewDepth=u,l){var c=p[o],m=c&&c.component;return m?(c.configProps&&Xo(m,s,c.route,c.configProps),r(m,s,a)):r()}var T=d.matched[u],f=T&&T.components[o];if(!T||!f)return p[o]=null,r();p[o]={component:f},s.registerRouteInstance=function(e,t){var n=T.instances[o];(t&&n!==e||!t&&n===e)&&(T.instances[o]=t)},(s.hook||(s.hook={})).prepatch=function(e,t){T.instances[o]=t.componentInstance},s.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==T.instances[o]&&(T.instances[o]=e.componentInstance),Ko(d)};var h=T.props&&T.props[o];return h&&(Eo(p[o],{route:d,configProps:h}),Xo(f,s,d,h)),r(f,s,a)}};function Xo(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(i){i=t.props=Eo({},i);var s=t.attrs=t.attrs||{};for(var r in i)e.props&&r in e.props||(s[r]=i[r],delete i[r])}}function Jo(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var s=e.replace(/^\//,"").split("/"),r=0;r<s.length;r++){var o=s[r];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function Zo(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Qo=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ed=function e(t,n,a){return Qo(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return ld(e,t)}(t,n):Qo(t)?function(t,n,a){for(var i=[],s=0;s<t.length;s++)i.push(e(t[s],n,a).source);return ld(new RegExp("(?:"+i.join("|")+")",yd(a)),n)}(t,n,a):function(e,t,n){return cd(sd(e,n),t,n)}(t,n,a)},td=sd,nd=dd,ad=cd,id=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function sd(e,t){for(var n,a=[],i=0,s=0,r="",o=t&&t.delimiter||"/";null!=(n=id.exec(e));){var d=n[0],p=n[1],u=n.index;if(r+=e.slice(s,u),s=u+d.length,p)r+=p[1];else{var l=e[s],y=n[2],c=n[3],m=n[4],T=n[5],f=n[6],h=n[7];r&&(a.push(r),r="");var b=null!=y&&null!=l&&l!==y,v="+"===f||"*"===f,_="?"===f||"*"===f,w=n[2]||o,g=m||T;a.push({name:c||i++,prefix:y||"",delimiter:w,optional:_,repeat:v,partial:b,asterisk:!!h,pattern:g?ud(g):h?".*":"[^"+pd(w)+"]+?"})}}return s<e.length&&(r+=e.substr(s)),r&&a.push(r),a}function rd(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function od(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function dd(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",yd(t)));return function(t,a){for(var i="",s=t||{},r=(a||{}).pretty?rd:encodeURIComponent,o=0;o<e.length;o++){var d=e[o];if("string"!=typeof d){var p,u=s[d.name];if(null==u){if(d.optional){d.partial&&(i+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(Qo(u)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var l=0;l<u.length;l++){if(p=r(u[l]),!n[o].test(p))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===l?d.prefix:d.delimiter)+p}}else{if(p=d.asterisk?od(u):r(u),!n[o].test(p))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+p+'"');i+=d.prefix+p}}else i+=d}return i}}function pd(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function ud(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function ld(e,t){return e.keys=t,e}function yd(e){return e&&e.sensitive?"":"i"}function cd(e,t,n){Qo(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,s="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)s+=pd(o);else{var d=pd(o.prefix),p="(?:"+o.pattern+")";t.push(o),o.repeat&&(p+="(?:"+d+p+")*"),s+=p=o.optional?o.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var u=pd(n.delimiter||"/"),l=s.slice(-u.length)===u;return a||(s=(l?s.slice(0,-u.length):s)+"(?:"+u+"(?=$))?"),s+=i?"$":a&&l?"":"(?="+u+"|$)",ld(new RegExp("^"+s,yd(n)),t)}ed.parse=td,ed.compile=function(e,t){return dd(sd(e,t),t)},ed.tokensToFunction=nd,ed.tokensToRegExp=ad;var md=Object.create(null);function Td(e,t,n){t=t||{};try{var a=md[e]||(md[e]=ed.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function fd(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var s=(i=Eo({},e)).params;return s&&"object"==typeof s&&(i.params=Eo({},s)),i}if(!i.path&&i.params&&t){(i=Eo({},i))._normalized=!0;var r=Eo(Eo({},t.params),i.params);if(t.name)i.name=t.name,i.params=r;else if(t.matched.length){var o=t.matched[t.matched.length-1].path;i.path=Td(o,r,t.path)}return i}var d=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),p=t&&t.path||"/",u=d.path?Jo(d.path,p,n||i.append):p,l=function(e,t,n){void 0===t&&(t={});var a,i=n||Bo;try{a=i(e||"")}catch(e){a={}}for(var s in t){var r=t[s];a[s]=Array.isArray(r)?r.map(Lo):Lo(r)}return a}(d.query,i.query,a&&a.options.parseQuery),y=i.hash||d.hash;return y&&"#"!==y.charAt(0)&&(y="#"+y),{_normalized:!0,path:u,query:l,hash:y}}var hd,bd=function(){},vd={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),s=i.location,r=i.route,o=i.href,d={},p=n.options.linkActiveClass,u=n.options.linkExactActiveClass,l=null==p?"router-link-active":p,y=null==u?"router-link-exact-active":u,c=null==this.activeClass?l:this.activeClass,m=null==this.exactActiveClass?y:this.exactActiveClass,T=r.redirectedFrom?No(null,fd(r.redirectedFrom),null,n):r;d[m]=jo(a,T,this.exactPath),d[c]=this.exact||this.exactPath?d[m]:function(e,t){return 0===e.path.replace(zo,"/").indexOf(t.path.replace(zo,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,T);var f=d[m]?this.ariaCurrentValue:null,h=function(e){_d(e)&&(t.replace?n.replace(s,bd):n.push(s,bd))},b={click:_d};Array.isArray(this.event)?this.event.forEach((function(e){b[e]=h})):b[this.event]=h;var v={class:d},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:r,navigate:h,isActive:d[c],isExactActive:d[m]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?e():e("span",{},_)}if("a"===this.tag)v.on=b,v.attrs={href:o,"aria-current":f};else{var w=wd(this.$slots.default);if(w){w.isStatic=!1;var g=w.data=Eo({},w.data);for(var k in g.on=g.on||{},g.on){var M=g.on[k];k in b&&(g.on[k]=Array.isArray(M)?M:[M])}for(var x in b)x in g.on?g.on[x].push(b[x]):g.on[x]=h;var S=w.data.attrs=Eo({},w.data.attrs);S.href=o,S["aria-current"]=f}else v.on=b}return e(this.tag,v,this.$slots.default)}};function _d(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function wd(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=wd(t.children)))return t}}var gd="undefined"!=typeof window;function kd(e,t,n,a,i){var s=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){Md(s,r,o,e,i)}));for(var d=0,p=s.length;d<p;d++)"*"===s[d]&&(s.push(s.splice(d,1)[0]),p--,d--);return{pathList:s,pathMap:r,nameMap:o}}function Md(e,t,n,a,i,s){var r=a.path,o=a.name,d=a.pathToRegexpOptions||{},p=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:Zo(t.path+"/"+e)}(r,i,d.strict);"boolean"==typeof a.caseSensitive&&(d.sensitive=a.caseSensitive);var u={path:p,regex:xd(p,d),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:o,parent:i,matchAs:s,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var i=s?Zo(s+"/"+a.path):void 0;Md(e,t,n,a,u,i)})),t[u.path]||(e.push(u.path),t[u.path]=u),void 0!==a.alias)for(var l=Array.isArray(a.alias)?a.alias:[a.alias],y=0;y<l.length;++y){var c={path:l[y],children:a.children};Md(e,t,n,c,i,u.path||"/")}o&&(n[o]||(n[o]=u))}function xd(e,t){return ed(e,[],t)}function Sd(e,t){var n=kd(e),a=n.pathList,i=n.pathMap,s=n.nameMap;function r(e,n,r){var d=fd(e,n,!1,t),p=d.name;if(p){var u=s[p];if(!u)return o(null,d);var l=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof d.params&&(d.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in d.params)&&l.indexOf(y)>-1&&(d.params[y]=n.params[y]);return d.path=Td(u.path,d.params),o(u,d,r)}if(d.path){d.params={};for(var c=0;c<a.length;c++){var m=a[c],T=i[m];if(Ad(T.regex,d.path,d.params))return o(T,d,r)}}return o(null,d)}function o(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,i="function"==typeof a?a(No(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return o(null,n);var d=i,p=d.name,u=d.path,l=n.query,y=n.hash,c=n.params;if(l=d.hasOwnProperty("query")?d.query:l,y=d.hasOwnProperty("hash")?d.hash:y,c=d.hasOwnProperty("params")?d.params:c,p)return s[p],r({_normalized:!0,name:p,query:l,hash:y,params:c},void 0,n);if(u){var m=function(e,t){return Jo(e,t.parent?t.parent.path:"/",!0)}(u,e);return r({_normalized:!0,path:Td(m,c),query:l,hash:y},void 0,n)}return o(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:Td(n,t.params)});if(a){var i=a.matched,s=i[i.length-1];return t.params=a.params,o(s,t)}return o(null,t)}(0,n,e.matchAs):No(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?s[e]:void 0;kd([t||e],a,i,s,n),n&&n.alias.length&&kd(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,s,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){kd(e,a,i,s)}}}function Ad(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,s=a.length;i<s;++i){var r=e.keys[i-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[i]?Vo(a[i]):a[i])}return!0}var Pd=gd&&window.performance&&window.performance.now?window.performance:Date;function Id(){return Pd.now().toFixed(3)}var Od=Id();function Ed(){return Od}function Rd(e){return Od=e}var Fd=Object.create(null);function Cd(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Eo({},window.history.state);return n.key=Ed(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Ld),function(){window.removeEventListener("popstate",Ld)}}function Dd(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var s=function(){var e=Ed();if(e)return Fd[e]}(),r=i.call(e,t,n,a?s:null);r&&("function"==typeof r.then?r.then((function(e){qd(e,s)})).catch((function(e){})):qd(r,s))}))}}function Vd(){var e=Ed();e&&(Fd[e]={x:window.pageXOffset,y:window.pageYOffset})}function Ld(e){Vd(),e.state&&e.state.key&&Rd(e.state.key)}function Bd(e){return zd(e.x)||zd(e.y)}function Ud(e){return{x:zd(e.x)?e.x:window.pageXOffset,y:zd(e.y)?e.y:window.pageYOffset}}function zd(e){return"number"==typeof e}var Nd=/^#\d/;function qd(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=Nd.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var s=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,s={x:zd((n=s).x)?n.x:0,y:zd(n.y)?n.y:0})}else Bd(e)&&(t=Ud(e))}else a&&Bd(e)&&(t=Ud(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var $d,Hd=gd&&(-1===($d=window.navigator.userAgent).indexOf("Android 2.")&&-1===$d.indexOf("Android 4.0")||-1===$d.indexOf("Mobile Safari")||-1!==$d.indexOf("Chrome")||-1!==$d.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Wd(e,t){Vd();var n=window.history;try{if(t){var a=Eo({},n.state);a.key=Ed(),n.replaceState(a,"",e)}else n.pushState({key:Rd(Id())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function jd(e){Wd(e,!0)}function Gd(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}var Kd={redirected:2,aborted:4,cancelled:8,duplicated:16};function Yd(e,t){return Xd(e,t,Kd.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Xd(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var Jd=["params","query","hash"];function Zd(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Qd(e,t){return Zd(e)&&e._isRouter&&(null==t||e.type===t)}function ep(e,t){return tp(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function tp(e){return Array.prototype.concat.apply([],e)}var np="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ap(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var ip=function(e,t){this.router=e,this.base=function(e){if(!e)if(gd){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=$o,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function sp(e,t,n,a){var i=ep(e,(function(e,a,i,s){var r=function(e,t){return"function"!=typeof e&&(e=hd.extend(e)),e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,i,s)})):n(r,a,i,s)}));return tp(a?i.reverse():i)}function rp(e,t){if(t)return function(){return e.apply(t,arguments)}}ip.prototype.listen=function(e){this.cb=e},ip.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},ip.prototype.onError=function(e){this.errorCbs.push(e)},ip.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var s=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,s)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(Qd(e,Kd.redirected)&&s===$o||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},ip.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var s,r,o=function(e){!Qd(e)&&Zd(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},d=e.matched.length-1,p=i.matched.length-1;if(jo(e,i)&&d===p&&e.matched[d]===i.matched[p])return this.ensureURL(),e.hash&&Dd(this.router,i,e,!1),o(((r=Xd(s=i,e,Kd.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",r));var u,l=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),y=l.updated,c=l.deactivated,m=l.activated,T=[].concat(function(e){return sp(e,"beforeRouteLeave",rp,!0)}(c),this.router.beforeHooks,function(e){return sp(e,"beforeRouteUpdate",rp)}(y),m.map((function(e){return e.beforeEnter})),(u=m,function(e,t,n){var a=!1,i=0,s=null;ep(u,(function(e,t,r,o){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var d,p=ap((function(t){var a;((a=t).__esModule||np&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:hd.extend(t),r.components[o]=t,--i<=0&&n()})),u=ap((function(e){var t="Failed to resolve async component "+o+": "+e;s||(s=Zd(e)?e:new Error(t),n(s))}));try{d=e(p,u)}catch(e){u(e)}if(d)if("function"==typeof d.then)d.then(p,u);else{var l=d.component;l&&"function"==typeof l.then&&l.then(p,u)}}})),a||n()})),f=function(t,n){if(a.pending!==e)return o(Yd(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return Xd(e,t,Kd.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):Zd(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(function(e,t){return Xd(e,t,Kd.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Jd.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};Gd(T,f,(function(){var n=function(e){return sp(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,s){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),s(e)}))}}(e,n,a)}))}(m);Gd(n.concat(a.router.resolveHooks),f,(function(){if(a.pending!==e)return o(Yd(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){Ko(e)}))}))}))},ip.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},ip.prototype.setupListeners=function(){},ip.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=$o,this.pending=null};var op=function(e){function t(t,n){e.call(this,t,n),this._startLocation=dp(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Hd&&n;a&&this.listeners.push(Cd());var i=function(){var n=e.current,i=dp(e.base);e.current===$o&&i===e._startLocation||e.transitionTo(i,(function(e){a&&Dd(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Wd(Zo(a.base+e.fullPath)),Dd(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){jd(Zo(a.base+e.fullPath)),Dd(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(dp(this.base)!==this.current.fullPath){var t=Zo(this.base+this.current.fullPath);e?Wd(t):jd(t)}},t.prototype.getCurrentLocation=function(){return dp(this.base)},t}(ip);function dp(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(Zo(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var pp=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=dp(e);if(!/^\/#/.test(t))return window.location.replace(Zo(e+"/#"+t)),!0}(this.base)||up()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Hd&&t;n&&this.listeners.push(Cd());var a=function(){var t=e.current;up()&&e.transitionTo(lp(),(function(a){n&&Dd(e.router,a,t,!0),Hd||mp(a.fullPath)}))},i=Hd?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){cp(e.fullPath),Dd(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){mp(e.fullPath),Dd(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;lp()!==t&&(e?cp(t):mp(t))},t.prototype.getCurrentLocation=function(){return lp()},t}(ip);function up(){var e=lp();return"/"===e.charAt(0)||(mp("/"+e),!1)}function lp(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function yp(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function cp(e){Hd?Wd(yp(e)):window.location.hash=e}function mp(e){Hd?jd(yp(e)):window.location.replace(yp(e))}var Tp=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){Qd(e,Kd.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(ip),fp=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Sd(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Hd&&!1!==e.fallback,this.fallback&&(t="hash"),gd||(t="abstract"),this.mode=t,t){case"history":this.history=new op(this,e.base);break;case"hash":this.history=new pp(this,e.base,this.fallback);break;case"abstract":this.history=new Tp(this,e.base)}},hp={currentRoute:{configurable:!0}};function bp(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}fp.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},hp.currentRoute.get=function(){return this.history&&this.history.current},fp.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof op||n instanceof pp){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;Hd&&i&&"fullPath"in e&&Dd(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},fp.prototype.beforeEach=function(e){return bp(this.beforeHooks,e)},fp.prototype.beforeResolve=function(e){return bp(this.resolveHooks,e)},fp.prototype.afterEach=function(e){return bp(this.afterHooks,e)},fp.prototype.onReady=function(e,t){this.history.onReady(e,t)},fp.prototype.onError=function(e){this.history.onError(e)},fp.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},fp.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},fp.prototype.go=function(e){this.history.go(e)},fp.prototype.back=function(){this.go(-1)},fp.prototype.forward=function(){this.go(1)},fp.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},fp.prototype.resolve=function(e,t,n){var a=fd(e,t=t||this.history.current,n,this),i=this.match(a,t),s=i.redirectedFrom||i.fullPath,r=function(e,t,n){var a="hash"===n?"#"+t:t;return e?Zo(e+"/"+a):a}(this.history.base,s,this.mode);return{location:a,route:i,href:r,normalizedTo:a,resolved:i}},fp.prototype.getRoutes=function(){return this.matcher.getRoutes()},fp.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==$o&&this.history.transitionTo(this.history.getCurrentLocation())},fp.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==$o&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(fp.prototype,hp),fp.install=function e(t){if(!e.installed||hd!==t){e.installed=!0,hd=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Yo),t.component("RouterLink",vd);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},fp.version="3.5.4",fp.isNavigationFailure=Qd,fp.NavigationFailureType=Kd,fp.START_LOCATION=$o,gd&&window.Vue&&window.Vue.use(fp);const vp=fp;var _p=function(){var e=this._self._c;return e("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[e("router-view")],1)};function wp(e,t,n,a,i,s,r,o){var d,p="function"==typeof e?e.options:e;if(t&&(p.render=t,p.staticRenderFns=n,p._compiled=!0),a&&(p.functional=!0),s&&(p._scopeId="data-v-"+s),r?(d=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},p._ssrRegister=d):i&&(d=o?function(){i.call(this,(p.functional?this.parent:this).$root.$options.shadowRoot)}:i),d)if(p.functional){p._injectStyles=d;var u=p.render;p.render=function(e,t){return d.call(t),u(e,t)}}else{var l=p.beforeCreate;p.beforeCreate=l?[].concat(l,d):[d]}return{exports:e,options:p}}_p._withStripped=!0,n(838);const gp=wp({},_p,[],!1,null,null,null).exports;var kp=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("HeaderBar"),e._v(" "),t("div",{staticClass:"pb-32"},[t("div",{staticClass:"space-y-4"},[t("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),t("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))])]),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?t("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.receive?t("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.fallback?t("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?t("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?t("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?t("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),t("FooterBar")],1)};kp._withStripped=!0;var Mp=function(){var e=this,t=e._self._c;return t("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[t("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Mp._withStripped=!0;const xp=JSON.parse('{"u2":"hardhat-docgen","cj":"https://github.com/ItsNickBarry/hardhat-docgen"}'),Sp=wp({data:function(){return{repository:xp.cj,name:xp.u2}},methods:{openLink(e){window.open(e,"_blank")}}},Mp,[],!1,null,null,null).exports;var Ap=function(){var e=this._self._c;return e("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[e("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};Ap._withStripped=!0;const Pp=wp({},Ap,[],!1,null,null,null).exports;var Ip=function(){var e=this,t=e._self._c;return t("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[t("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),t("div",{staticClass:"space-y-3"},[t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))]),e._v(" "),t("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),t("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};Ip._withStripped=!0;var Op=function(){var e=this,t=e._self._c;return e.items.length>0?t("ul",[t("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(n,a){return t("li",{key:a},[t("span",{staticClass:"bg-gray-300"},[e._v(e._s(n.type))]),e._v(" "),t("b",[e._v(e._s(n.name||`_${a}`))]),n.desc?t("span",[e._v(": "),t("i",[e._v(e._s(n.desc))])]):e._e()])}))],2):e._e()};Op._withStripped=!0;const Ep={components:{MemberSection:wp({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},Op,[],!1,null,null,null).exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}},Rp=wp(Ep,Ip,[],!1,null,null,null).exports;var Fp=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full mt-8"},[t("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(n){return t("Member",{key:n,staticClass:"mt-3",attrs:{json:e.json[n]}})}))],2)};Fp._withStripped=!0;var Cp=wp({components:{Member:Rp},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},Fp,[],!1,null,null,null);const Dp=wp({components:{Member:Rp,MemberSet:Cp.exports,HeaderBar:Pp,FooterBar:Sp},props:{json:{type:Object,default:()=>new Object}}},kp,[],!1,null,null,null).exports;var Vp=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};Vp._withStripped=!0;var Lp=function(){var e=this,t=e._self._c;return t("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?t("div",{staticClass:"pl-5"},e._l(e.json,(function(n,a){return t("div",{key:a},[t("router-link",{attrs:{to:`${n.source}:${n.name}`}},[e._v("\n        "+e._s(n.name)+"\n      ")])],1)})),0):t("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(n){return t("div",{key:n},[t("Branch",{attrs:{json:e.json[n],name:n}})],1)})),0)])};Lp._withStripped=!0;var Bp=wp({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},Lp,[],!1,null,null,null);const Up=wp({components:{Branch:Bp.exports,FooterBar:Sp},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},Vp,[],!1,null,null,null).exports;Wn.use(vp);const zp={"contracts/Deployer.sol:Deployer":{source:"contracts/Deployer.sol",name:"Deployer",events:{"Deployed(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"addr",type:"address"},{indexed:!1,internalType:"uint256",name:"salt",type:"uint256"}],name:"Deployed",type:"event",notice:"Emitted when a contract is deployed"}},methods:{"deploy(bytes,uint256)":{inputs:[{internalType:"bytes",name:"code",type:"bytes"},{internalType:"uint256",name:"salt",type:"uint256"}],name:"deploy",outputs:[],stateMutability:"nonpayable",type:"function",params:{code:"The bytecode of the contract to deploy",salt:"The salt to use for the create2 method"},notice:"Deploys a contract using the create2 method"}}},"contracts/access/Governable.sol:Governable":{source:"contracts/access/Governable.sol",name:"Governable",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},methods:{"gov()":{inputs:[],name:"gov",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setGov(address)":{inputs:[{internalType:"address",name:"_gov",type:"address"}],name:"setGov",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/access/TokenManager.sol:TokenManager":{source:"contracts/access/TokenManager.sol",name:"TokenManager",title:"Vaporwave Token Manager",constructor:{inputs:[{internalType:"uint256",name:"_minAuthorizations",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"ClearAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ClearAction",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action"},notice:"Emitted when an action is cleared"},"SignAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignAction",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action"},notice:"Emitted when an action is signed"},"SignalApprove(address,address,uint256,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApprove",type:"event",params:{action:"The hash of the action (bytes32)",amount:"The amount to approve",nonce:"The nonce of the action",spender:"The address of the spender",token:"The address of the token contract"},notice:"Emitted when an approve action is signalled"},"SignalApproveNFT(address,address,uint256,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApproveNFT",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action",spender:"The address of the spender",token:"The address of the token contract",tokenId:"The tokenId to approve"},notice:"Emitted when an approveNFT action is signalled"},"SignalApproveNFTs(address,address,uint256[],bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256[]",name:"tokenIds",type:"uint256[]"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApproveNFTs",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action",spender:"The address of the spender",token:"The address of the token contract",tokenIds:"An array of tokenIds to approve"},notice:"Emitted when an approveNFTs action is signalled"},"SignalPendingAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalPendingAction",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action"},notice:"Emitted when an action is set as pending"},"SignalSetAdmin(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"admin",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalSetAdmin",type:"event",params:{action:"The hash of the action (bytes32)",admin:"The address of the new admin",nonce:"The nonce of the action",target:"The address of target contract"},notice:"Emitted when a setAdmin action is signalled"},"SignalSetOwner(address,address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"timelock",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalSetOwner",type:"event",params:{action:"The hash of the action (bytes32)",nonce:"The nonce of the action",owner:"The address of the new owner",target:"The address of target contract",timelock:"The address of timelock contract"},notice:"Emitted when a signalSetOwner action is signalled"}},stateVariables:{"actionsNonce()":{inputs:[],name:"actionsNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",details:"Increments for every action",notice:"The current action nonce"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Contract admin"},"approve(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Call a token approve action"},"approveNFT(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Call an NFT approve action"},"approveNFTs(address,address,uint256[],uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Call an NFT approve action for an array of tokenIds"},"initialize(address[])":{inputs:[{internalType:"address[]",name:"_signers",type:"address[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_signers:"An array of addresses that are valid signers"},notice:"Initialize the contract"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract has been initialized"},"isSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of valid signers"},"minAuthorizations()":{inputs:[],name:"minAuthorizations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Minimum authorizations required for an action"},"pendingActions(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"pendingActions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of pending actions"},"receiveNFTs(address,address,uint256[])":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"}],name:"receiveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",details:"The NFTs must be approved by the spender first",params:{_sender:"The address to send the NFTs from",_token:"The address of the NFT contract",_tokenIds:"The array of tokenIds to transfer"},notice:"Transfer an array of NFTs to this contract"},"setAdmin(address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_nonce:"The nonce of the action",_target:"The address of the target contract"},notice:"Call a setAdmin action"},"setOwner(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Call a setOwner action"},"signApprove(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApprove",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Sign a token approve action"},"signApproveNFT(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApproveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Sign an NFT approve action"},"signApproveNFTs(address,address,uint256[],uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApproveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Sign an NFT approve action for an array of tokenIds"},"signSetAdmin(address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signSetAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_nonce:"The nonce of the action",_target:"The address of the target contract"},notice:"Sign a setAdmin action"},"signSetOwner(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signSetOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Sign a setOwner action"},"signalApprove(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"signalApprove",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Signal a token approve action"},"signalApproveNFT(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"signalApproveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Signal an NFT approve action"},"signalApproveNFTs(address,address,uint256[])":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"}],name:"signalApproveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Signal an NFT approve action for an array of tokenIds"},"signalSetAdmin(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"}],name:"signalSetAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_target:"The address of the target contract"},notice:"Signal a setAdmin action"},"signalSetOwner(address,address,address)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"signalSetOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Signal a setOwner action"},"signedActions(address,bytes32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"signedActions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of addresses to their signed actions"},"signers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"signers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of valid signers"},"signersLength()":{inputs:[],name:"signersLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The length of the signers array"},notice:"Get the lengths of the signers array"}}},"contracts/access/interfaces/IAdmin.sol:IAdmin":{source:"contracts/access/interfaces/IAdmin.sol",name:"IAdmin",title:"Vaporwave Admin Interface",methods:{"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/UniFactory.sol:UniFactory":{source:"contracts/amm/UniFactory.sol",name:"UniFactory",methods:{"getPool(address,address,uint24)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint24",name:"",type:"uint24"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/amm/UniswapV2Oracle.sol:UniswapV2Oracle":{source:"contracts/amm/UniswapV2Oracle.sol",name:"UniswapV2Oracle",title:"Vaporwave UniswapV2 Price Oracle",details:"Gets the time weighted average price (twap) of a token based off of the UniswapV2Pairfixed window oracle that recomputes the average price for the entire period once every periodnote that the price average is only guaranteed to be over at least 1 period, but may be over a longer period",constructor:{inputs:[{internalType:"contract IUniswapV2Pair",name:"_pair",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"blockTimestampLast()":{inputs:[],name:"blockTimestampLast",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The timestamp of the last price update"},"consult(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"}],name:"consult",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"view",type:"function",details:"This will always return 0 before update has been called successfully for the first time.",params:{_amountIn:"The amount of `_token` to get the price average for",_token:"The token to get the price average for"},returns:{amountOut:"(The price of `amountIn` tokens denominated by the pair token)"},notice:"Get the price average for `_amountIn` of `_token`"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pair()":{inputs:[],name:"pair",outputs:[{internalType:"contract IUniswapV2Pair",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Address of the pair"},"period()":{inputs:[],name:"period",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The period length in seconds (how often the price average can be updated)"},"price0Average()":{inputs:[],name:"price0Average",outputs:[{internalType:"uint224",name:"_x",type:"uint224"}],stateMutability:"view",type:"function",notice:"The TWAP for token 0"},"price0CumulativeLast()":{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The price0Cumulative used during the last period"},"price1Average()":{inputs:[],name:"price1Average",outputs:[{internalType:"uint224",name:"_x",type:"uint224"}],stateMutability:"view",type:"function",notice:"The TWAP for token 1"},"price1CumulativeLast()":{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The price1Cumulative used during the last period"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setPeriod(uint256)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"}],name:"setPeriod",outputs:[],stateMutability:"nonpayable",type:"function",details:"Reverts if `_period` is zero (0)",params:{_period:"The period length in seconds"},notice:"Set the period length to `_period` seconds"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Address of token0"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Address of token1"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"update()":{inputs:[],name:"update",outputs:[],stateMutability:"nonpayable",type:"function",details:"Reverts if the period has not elapsed",notice:"Update the price average for the entire period"}}},"contracts/amm/interfaces/IERC20.sol:IERC20Uniswap":{source:"contracts/amm/interfaces/IERC20.sol",name:"IERC20Uniswap",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IPancakeFactory.sol:IPancakeFactory":{source:"contracts/amm/interfaces/IPancakeFactory.sol",name:"IPancakeFactory",methods:{"getPair(address,address)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"}],name:"getPair",outputs:[{internalType:"address",name:"pair",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/amm/interfaces/IPancakePair.sol:IPancakePair":{source:"contracts/amm/interfaces/IPancakePair.sol",name:"IPancakePair",methods:{"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"}}},"contracts/amm/interfaces/IPancakeRouter.sol:IPancakeRouter":{source:"contracts/amm/interfaces/IPancakeRouter.sol",name:"IPancakeRouter",methods:{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"amountADesired",type:"uint256"},{internalType:"uint256",name:"amountBDesired",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Callee.sol:IUniswapV2Callee":{source:"contracts/amm/interfaces/IUniswapV2Callee.sol",name:"IUniswapV2Callee",methods:{"uniswapV2Call(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV2Call",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20":{source:"contracts/amm/interfaces/IUniswapV2ERC20.sol",name:"IUniswapV2ERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Factory.sol:IUniswapV2Factory":{source:"contracts/amm/interfaces/IUniswapV2Factory.sol",name:"IUniswapV2Factory",events:{"PairCreated(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token0",type:"address"},{indexed:!0,internalType:"address",name:"token1",type:"address"},{indexed:!1,internalType:"address",name:"pair",type:"address"},{indexed:!1,internalType:"uint256",name:"",type:"uint256"}],name:"PairCreated",type:"event"}},methods:{"allPairs(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allPairs",outputs:[{internalType:"address",name:"pair",type:"address"}],stateMutability:"view",type:"function"},"allPairsLength()":{inputs:[],name:"allPairsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"createPair(address,address)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"}],name:"createPair",outputs:[{internalType:"address",name:"pair",type:"address"}],stateMutability:"nonpayable",type:"function"},"feeTo()":{inputs:[],name:"feeTo",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeToSetter()":{inputs:[],name:"feeToSetter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPair(address,address)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"}],name:"getPair",outputs:[{internalType:"address",name:"pair",type:"address"}],stateMutability:"view",type:"function"},"migrator()":{inputs:[],name:"migrator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setFeeTo(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"setFeeTo",outputs:[],stateMutability:"nonpayable",type:"function"},"setFeeToSetter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"setFeeToSetter",outputs:[],stateMutability:"nonpayable",type:"function"},"setMigrator(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"setMigrator",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Oracle.sol:IUniswapV2Oracle":{source:"contracts/amm/interfaces/IUniswapV2Oracle.sol",name:"IUniswapV2Oracle",notice:"Interface for UniswapV2 Price Oracle",methods:{"consult(address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"consult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Pair.sol:IUniswapV2Pair":{source:"contracts/amm/interfaces/IUniswapV2Pair.sol",name:"IUniswapV2Pair",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},"Swap(address,uint256,uint256,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},"Sync(uint112,uint112)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:!1,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"MINIMUM_LIQUIDITY()":{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"kLast()":{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},"price0CumulativeLast()":{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"price1CumulativeLast()":{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"skim(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},"swap(uint256,uint256,address,bytes)":{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01":{source:"contracts/amm/interfaces/IUniswapV2Router01.sol",name:"IUniswapV2Router01",methods:{"WETH()":{inputs:[],name:"WETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"amountADesired",type:"uint256"},{internalType:"uint256",name:"amountBDesired",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountTokenDesired",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"payable",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"getAmountIn(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountIn",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountOut(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountOut",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountsIn(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsIn",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"getAmountsOut(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsOut",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"quote(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"reserveA",type:"uint256"},{internalType:"uint256",name:"reserveB",type:"uint256"}],name:"quote",outputs:[{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"pure",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityETHWithPermit",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityWithPermit",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapETHForExactTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapETHForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactETHForTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactETHForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactTokensForETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapTokensForExactETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IUniswapV2Router02.sol:IUniswapV2Router02":{source:"contracts/amm/interfaces/IUniswapV2Router02.sol",name:"IUniswapV2Router02",methods:{"WETH()":{inputs:[],name:"WETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"amountADesired",type:"uint256"},{internalType:"uint256",name:"amountBDesired",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountTokenDesired",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"payable",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"getAmountIn(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountIn",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountOut(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountOut",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountsIn(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsIn",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"getAmountsOut(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsOut",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"quote(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"reserveA",type:"uint256"},{internalType:"uint256",name:"reserveB",type:"uint256"}],name:"quote",outputs:[{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"pure",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidityETHSupportingFeeOnTransferTokens",outputs:[{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityETHWithPermit",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",outputs:[{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityWithPermit",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapETHForExactTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapETHForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactETHForTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactETHForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactETHForTokensSupportingFeeOnTransferTokens",outputs:[],stateMutability:"payable",type:"function"},"swapExactTokensForETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETHSupportingFeeOnTransferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokensSupportingFeeOnTransferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},"swapTokensForExactETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/interfaces/IWETH.sol:IWETH":{source:"contracts/amm/interfaces/IWETH.sol",name:"IWETH",methods:{"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/amm/libraries/Babylonian.sol:Babylonian":{source:"contracts/amm/libraries/Babylonian.sol",name:"Babylonian"},"contracts/amm/libraries/BitMath.sol:BitMath":{source:"contracts/amm/libraries/BitMath.sol",name:"BitMath"},"contracts/amm/libraries/FixedPoint.sol:FixedPoint":{source:"contracts/amm/libraries/FixedPoint.sol",name:"FixedPoint",methods:{"Q112()":{inputs:[],name:"Q112",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"RESOLUTION()":{inputs:[],name:"RESOLUTION",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"}}},"contracts/amm/libraries/FullMath.sol:FullMath":{source:"contracts/amm/libraries/FullMath.sol",name:"FullMath"},"contracts/amm/libraries/UniswapV2OracleLibrary.sol:UniswapV2OracleLibrary":{source:"contracts/amm/libraries/UniswapV2OracleLibrary.sol",name:"UniswapV2OracleLibrary"},"contracts/core/BasePositionManager.sol:BasePositionManager":{source:"contracts/core/BasePositionManager.sol",name:"BasePositionManager",title:"Vaporwave Base Position Manager",constructor:{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"uint256",name:"_depositFee",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"DecreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"DecreasePositionReferral",type:"event"},"IncreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"IncreasePositionReferral",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAdmin(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"SetAdmin",type:"event",notice:"Emitted when the admin address is set"},"SetDepositFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositFee",type:"uint256"}],name:"SetDepositFee",type:"event",notice:"Emitted when the deposit fee is set"},"SetIncreasePositionBufferBps(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"increasePositionBufferBps",type:"uint256"}],name:"SetIncreasePositionBufferBps",type:"event",notice:"Emitted when the increase position buffer basis points are set"},"SetMaxGlobalSizes(address[],uint256[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"longSizes",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"shortSizes",type:"uint256[]"}],name:"SetMaxGlobalSizes",type:"event",notice:"Emitted when the max global long and short sizes are set"},"SetReferralStorage(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referralStorage",type:"address"}],name:"SetReferralStorage",type:"event",notice:"Emitted when the referral storage address is set"},"WithdrawFees(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawFees",type:"event",notice:"Emitted when fees are withdrawn"}},stateVariables:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"stateVariable",return:"The admin address",returns:{_0:"The admin address"},notice:"Returns the address of admin"},"depositFee()":{inputs:[],name:"depositFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",details:"to prevent using the deposit and withdrawal of collateral as a zero fee swap, there is a small depositFee charged if a collateral deposit results in the decrease of leverage for an existing position increasePositionBufferBps allows for a small amount of decrease of leverage",return:"The deposit fee",returns:{_0:"The deposit fee"},notice:"Returns the deposit fee"},"increasePositionBufferBps()":{inputs:[],name:"increasePositionBufferBps",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"100",returns:{_0:"100"},notice:"Returns the increase position buffer bps (100)"},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"stateVariable",return:"The router address",returns:{_0:"The router address"},notice:"Returns the address of router"},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"stateVariable",return:"The vault address",returns:{_0:"The vault address"},notice:"Returns the address of the vault"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"stateVariable",return:"Wrapped Ether (WETH) token address",returns:{_0:"Wrapped Ether (WETH) token address"},notice:"Returns the WETH token contract address"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper used to avoid truncation errors in basis points calculations"},"approve(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token allowance to grant",_spender:"The spender of the token",_token:"The token to approve"},notice:"Make a token approval call"},"feeReserves(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"feeReserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token fee reserves"},"maxGlobalLongSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalLongSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global long sizes by token"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global short sizes by token"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"referralStorage()":{inputs:[],name:"referralStorage",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The referral storage address"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"sendValue(address,uint256)":{inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"sendValue",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of ETH to transfer",_receiver:"The receiver of the ETH"},notice:"Transfer ETH"},"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The new admin address"},notice:"Set the admin address"},"setDepositFee(uint256)":{inputs:[{internalType:"uint256",name:"_depositFee",type:"uint256"}],name:"setDepositFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_depositFee:"The new deposit fee"},notice:"Set the deposit fee"},"setIncreasePositionBufferBps(uint256)":{inputs:[{internalType:"uint256",name:"_increasePositionBufferBps",type:"uint256"}],name:"setIncreasePositionBufferBps",outputs:[],stateMutability:"nonpayable",type:"function",params:{_increasePositionBufferBps:"The new increase position buffer basis points"},notice:"Set the increase position buffer basis points"},"setMaxGlobalSizes(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"},{internalType:"uint256[]",name:"_longSizes",type:"uint256[]"},{internalType:"uint256[]",name:"_shortSizes",type:"uint256[]"}],name:"setMaxGlobalSizes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_longSizes:"The array of corresponding max global long sizes",_shortSizes:"The array of corresponding max global short sizes",_tokens:"The array of tokens"},notice:"Set the max global sizes"},"setReferralStorage(address)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"}],name:"setReferralStorage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_referralStorage:"The new referral storage address"},notice:"Set the referral storage address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawFees(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_receiver:"The receiver of the fees",_token:"The token to withdraw"},notice:"Withdraw fees from the contract"}}},"contracts/core/OrderBook.sol:OrderBook":{source:"contracts/core/OrderBook.sol",name:"OrderBook",title:"Vaporwave Order Book",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"CancelDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelDecreaseOrder",type:"event",notice:"Emitted when an decrease order is cancelled"},"CancelIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelIncreaseOrder",type:"event",notice:"Emitted when an increase order is cancelled"},"CancelSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelSwapOrder",type:"event",notice:"Emitted when an swap order is cancelled"},"CreateDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateDecreaseOrder",type:"event",notice:"Emitted when an decrease order is created"},"CreateIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateIncreaseOrder",type:"event",notice:"Emitted when an increase order is created"},"CreateSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateSwapOrder",type:"event",notice:"Emitted when an swap order is created"},"ExecuteDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionPrice",type:"uint256"}],name:"ExecuteDecreaseOrder",type:"event",notice:"Emitted when an decrease order is executed"},"ExecuteIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionPrice",type:"uint256"}],name:"ExecuteIncreaseOrder",type:"event",notice:"Emitted when an increase order is executed"},"ExecuteSwapOrder(address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"ExecuteSwapOrder",type:"event",notice:"Emitted when an swap order is executed"},"Initialize(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"router",type:"address"},{indexed:!1,internalType:"address",name:"vault",type:"address"},{indexed:!1,internalType:"address",name:"weth",type:"address"},{indexed:!1,internalType:"uint256",name:"minExecutionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minPurchaseTokenAmountUsd",type:"uint256"}],name:"Initialize",type:"event",notice:"Emitted when the contract is initialized"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"UpdateDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"}],name:"UpdateDecreaseOrder",type:"event",notice:"Emitted when an decrease order is updated"},"UpdateIncreaseOrder(address,uint256,address,address,bool,uint256,uint256,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"}],name:"UpdateIncreaseOrder",type:"event",notice:"Emitted when an increase order is updated"},"UpdateMinExecutionFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minExecutionFee",type:"uint256"}],name:"UpdateMinExecutionFee",type:"event",notice:"Emitted when the minimum execution fee is updated"},"UpdateMinPurchaseTokenAmountUsd(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minPurchaseTokenAmountUsd",type:"uint256"}],name:"UpdateMinPurchaseTokenAmountUsd",type:"event",notice:"Emitted when the minimum purchase token amount in USD is updated"},"UpdateSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"ordexIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"UpdateSwapOrder",type:"event",notice:"Emitted when an swap order is updated"}},methods:{"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"cancelDecreaseOrder(uint256)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"cancelDecreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `CancelDecreaseOrder` event",params:{_orderIndex:"The index of the decrease order"},notice:"Cancel a decrease order"},"cancelIncreaseOrder(uint256)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"cancelIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `CancelIncreaseOrder` event",params:{_orderIndex:"The index of the order to cancel"},notice:"Cancel an increase order"},"cancelMultiple(uint256[],uint256[],uint256[])":{inputs:[{internalType:"uint256[]",name:"_swapOrderIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"_increaseOrderIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"_decreaseOrderIndexes",type:"uint256[]"}],name:"cancelMultiple",outputs:[],stateMutability:"nonpayable",type:"function",params:{_decreaseOrderIndexes:"The indexes of the decrease orders to cancel",_increaseOrderIndexes:"The indexes of the increase orders to cancel",_swapOrderIndexes:"The indexes of the swap orders to cancel"},notice:"Cancel multiple swap orders"},"cancelSwapOrder(uint256)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"cancelSwapOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only cancel the account's own swap ordersEmits a `CancelSwapOrder` event",params:{_orderIndex:"The index of the order to cancel"},notice:"Cancel a swap order"},"createDecreaseOrder(address,uint256,address,uint256,bool,uint256,bool)":{inputs:[{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_triggerPrice",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"}],name:"createDecreaseOrder",outputs:[],stateMutability:"payable",type:"function",params:{_collateralDelta:"The collateral delta",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the order is long, false if short",_sizeDelta:"The size delta",_triggerAboveThreshold:"True if the threshold is above the trigger price, false otherwise",_triggerPrice:"The trigger price"},notice:"Create a decrease order"},"createIncreaseOrder(address[],uint256,address,uint256,uint256,address,bool,uint256,bool,uint256,bool)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_triggerPrice",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"_executionFee",type:"uint256"},{internalType:"bool",name:"_shouldWrap",type:"bool"}],name:"createIncreaseOrder",outputs:[],stateMutability:"payable",type:"function",details:"User must always transfer in ETH for execution fee",params:{_amountIn:"The amount of tokens to swap in",_collateralToken:"The collateral token",_executionFee:"The execution fee",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false otherwise",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_shouldWrap:"True if weth should be wrapped, false otherwise",_sizeDelta:"The size delta",_triggerAboveThreshold:"True if the threshold is above the trigger ratio, false otherwise",_triggerPrice:"The trigger price"},notice:"Create an increase order"},"createSwapOrder(address[],uint256,uint256,uint256,bool,uint256,bool,bool)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_triggerRatio",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"_executionFee",type:"uint256"},{internalType:"bool",name:"_shouldWrap",type:"bool"},{internalType:"bool",name:"_shouldUnwrap",type:"bool"}],name:"createSwapOrder",outputs:[],stateMutability:"payable",type:"function",params:{_amountIn:"The amount of the token to swap in",_executionFee:"The execution fee of the swap",_minOut:"The minimum amount of the token to swap out",_path:"The path of the swap",_shouldUnwrap:"The flag to unwrap WETH",_shouldWrap:"The flag to wrap WETH",_triggerAboveThreshold:"The threshold to trigger the swap",_triggerRatio:"The trigger ratio of the swap"},notice:"Create a swap order"},"decreaseOrders(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"decreaseOrders",outputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralDelta",type:"uint256"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of decrease orders by account"},"decreaseOrdersIndex(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"decreaseOrdersIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of account decrease order index"},"executeDecreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_address",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeDecreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `ExecuteDecreaseOrder` event",params:{_address:"The account that owns the decrease order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the decrease order"},notice:"Execute a decrease order"},"executeIncreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_address",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `ExecuteIncreaseOrder` event",params:{_address:"The account that owns the order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the increase order"},notice:"Execute an increase order"},"executeSwapOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeSwapOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an event `ExecuteSwapOrder`",params:{_account:"The account that created the swap order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the order to execute"},notice:"Execute a swap order"},"getDecreaseOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getDecreaseOrder",outputs:[{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralDelta",type:"uint256"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account that created the order",_orderIndex:"The index of the order to get"},notice:"Get a decrease order"},"getIncreaseOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getIncreaseOrder",outputs:[{internalType:"address",name:"purchaseToken",type:"address"},{internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account that created the order",_orderIndex:"The index of the order to get"},notice:"Get an increase order"},"getSwapOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getSwapOrder",outputs:[{internalType:"address",name:"path0",type:"address"},{internalType:"address",name:"path1",type:"address"},{internalType:"address",name:"path2",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minOut",type:"uint256"},{internalType:"uint256",name:"triggerRatio",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"bool",name:"shouldUnwrap",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account address",_orderIndex:"The index of the order"},notice:"Get swap order"},"increaseOrders(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"increaseOrders",outputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"purchaseToken",type:"address"},{internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of increase orders by account"},"increaseOrdersIndex(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"increaseOrdersIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of account increase order index"},"initialize(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"uint256",name:"_minExecutionFee",type:"uint256"},{internalType:"uint256",name:"_minPurchaseTokenAmountUsd",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `Initialize` event",params:{_minExecutionFee:"The minimum execution fee",_minPurchaseTokenAmountUsd:"The minimum purchase token amount in USD",_router:"The router contract address",_vault:"The vault contract address",_weth:"The WETH contract address"},notice:"Initialize the order book"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract has been initialized"},"minExecutionFee()":{inputs:[],name:"minExecutionFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum execution fee"},"minPurchaseTokenAmountUsd()":{inputs:[],name:"minPurchaseTokenAmountUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum purchase token amount in USD"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The router address"},"setMinExecutionFee(uint256)":{inputs:[{internalType:"uint256",name:"_minExecutionFee",type:"uint256"}],name:"setMinExecutionFee",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `UpdateMinExecutionFee` event",params:{_minExecutionFee:"The minimum execution fee"},notice:"Set the Minimum Execution Fee to `_minExecutionFee`"},"setMinPurchaseTokenAmountUsd(uint256)":{inputs:[{internalType:"uint256",name:"_minPurchaseTokenAmountUsd",type:"uint256"}],name:"setMinPurchaseTokenAmountUsd",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `UpdateMinPurchaseTokenAmountUsd` event",params:{_minPurchaseTokenAmountUsd:"The minimum purchase token amount in USD"},notice:"Set the Minimum Purchase Token Amount in USD to `_minPurchaseTokenAmountUsd`"},"swapOrders(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"swapOrders",outputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minOut",type:"uint256"},{internalType:"uint256",name:"triggerRatio",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"bool",name:"shouldUnwrap",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of swap orders by account"},"swapOrdersIndex(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"swapOrdersIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of account swap order index"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateDecreaseOrder(uint256,uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"uint256",name:"_triggerPrice",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"}],name:"updateDecreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `UpdateDecreaseOrder` event",params:{_collateralDelta:"The collateral delta",_orderIndex:"The index of the decrease order",_sizeDelta:"The size delta",_triggerAboveThreshold:"True if the threshold is above the trigger price, false otherwise",_triggerPrice:"The price to trigger the decrease order"},notice:"Update a decrease order"},"updateIncreaseOrder(uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"uint256",name:"_triggerPrice",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"}],name:"updateIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `UpdateIncreaseOrder` event",params:{_orderIndex:"The index of the order to update",_sizeDelta:"The size delta",_triggerAboveThreshold:"True if the threshold is above the trigger price, false otherwise",_triggerPrice:"The trigger price"},notice:"Update an increase order"},"updateSwapOrder(uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_triggerRatio",type:"uint256"},{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"}],name:"updateSwapOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an event `UpdateSwapOrder`",params:{_minOut:"The minimum token amount to swap out",_orderIndex:"The index of the order to update",_triggerAboveThreshold:"True if the threshold is above the trigger ratio, false otherwise",_triggerRatio:"The trigger ratio for the swap"},notice:"Update a swap order"},"validatePositionOrderPrice(bool,uint256,address,bool,bool)":{inputs:[{internalType:"bool",name:"_triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"_triggerPrice",type:"uint256"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_maximizePrice",type:"bool"},{internalType:"bool",name:"_raise",type:"bool"}],name:"validatePositionOrderPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_indexToken:"The address of the token to long or short",_maximizePrice:"True if the price should be maximised, false otherwise",_triggerAboveThreshold:"True if the threshold is above the trigger ratio, false otherwise",_triggerPrice:"The price of the trigger ratio"},notice:"Validate the price of a position order"},"validateSwapOrderPriceWithTriggerAboveThreshold(address[],uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_triggerRatio",type:"uint256"}],name:"validateSwapOrderPriceWithTriggerAboveThreshold",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_path:"The path of the token swap",_triggerRatio:"The trigger ratio for the swap"},returns:{_0:"True if the price is above the threshold, false otherwise"},notice:"Validate the swap order price is above the trigger threshold"},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The vault address"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Wrapped Ether (WETH) token address"}}},"contracts/core/OrderBookReader.sol:OrderBookReader":{source:"contracts/core/OrderBookReader.sol",name:"OrderBookReader",title:"Vaporwave Order Book Reader",notice:"Provides getter functions for OrderBook orders",methods:{"getDecreaseOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getDecreaseOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_account:"Address of the account",_indices:"Indices of the orders to get",_orderBookAddress:"Address of the order book"},notice:"Get decrease orders"},"getIncreaseOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getIncreaseOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_account:"Address of the account",_indices:"Indices of the orders to get",_orderBookAddress:"Address of the order book"},notice:"Get increase orders"},"getSwapOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getSwapOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_account:"Address of the account",_indices:"Indices of the orders to get",_orderBookAddress:"Address of the order book"},notice:"Get swap orders"}}},"contracts/core/PositionManager.sol:PositionManager":{source:"contracts/core/PositionManager.sol",name:"PositionManager",title:"Vaporwave Position Manager",constructor:{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"uint256",name:"_depositFee",type:"uint256"},{internalType:"address",name:"_orderBook",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"DecreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"DecreasePositionReferral",type:"event"},"IncreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"IncreasePositionReferral",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAdmin(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"SetAdmin",type:"event",notice:"Emitted when the admin address is set"},"SetDepositFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositFee",type:"uint256"}],name:"SetDepositFee",type:"event",notice:"Emitted when the deposit fee is set"},"SetInLegacyMode(bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"inLegacyMode",type:"bool"}],name:"SetInLegacyMode",type:"event",params:{inLegacyMode:"Whether the contract is in legacy mode"},notice:"Emitted when the inLegacyMode variable is updated"},"SetIncreasePositionBufferBps(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"increasePositionBufferBps",type:"uint256"}],name:"SetIncreasePositionBufferBps",type:"event",notice:"Emitted when the increase position buffer basis points are set"},"SetLiquidator(address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetLiquidator",type:"event",params:{account:"The address of the liquidator",isActive:"Whether the liquidator is active"},notice:"Emitted when a liquidator is updated"},"SetMaxGlobalSizes(address[],uint256[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"longSizes",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"shortSizes",type:"uint256[]"}],name:"SetMaxGlobalSizes",type:"event",notice:"Emitted when the max global long and short sizes are set"},"SetOrderKeeper(address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetOrderKeeper",type:"event",params:{account:"The address of the order keeper",isActive:"Whether the order keeper is active"},notice:"Emitted when an order keeper is updated"},"SetPartner(address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetPartner",type:"event",params:{account:"The address of the partner",isActive:"Whether the partner is active"},notice:"Emitted when a partner is updated"},"SetReferralStorage(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referralStorage",type:"address"}],name:"SetReferralStorage",type:"event",notice:"Emitted when the referral storage address is set"},"SetShouldValidateIncreaseOrder(bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"shouldValidateIncreaseOrder",type:"bool"}],name:"SetShouldValidateIncreaseOrder",type:"event",params:{shouldValidateIncreaseOrder:"Whether the contract should validate increase orders"},notice:"Emitted when the shouldValidateIncreaseOrder variable is updated"},"WithdrawFees(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawFees",type:"event",notice:"Emitted when fees are withdrawn"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper used to avoid truncation errors in basis points calculations"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of admin"},"approve(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token allowance to grant",_spender:"The spender of the token",_token:"The token to approve"},notice:"Make a token approval call"},"decreasePosition(address,address,uint256,uint256,bool,address,uint256)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"decreasePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"collateral delta of the position",_collateralToken:"address of the collateral token",_indexToken:"The address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_price:"price of the position",_receiver:"address to receive the withdrawn token",_sizeDelta:"size delta of the position"},notice:"decrease a position"},"decreasePositionAndSwap(address[],address,uint256,uint256,bool,address,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"}],name:"decreasePositionAndSwap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"collateral delta of the position",_indexToken:"address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_minOut:"minimum amount of token to swap out",_path:"path of the token swap",_price:"price of the position",_receiver:"address to receive the withdrawn token",_sizeDelta:"size delta of the position"},notice:"decrease a position and swap the tokens"},"decreasePositionAndSwapETH(address[],address,uint256,uint256,bool,address,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"}],name:"decreasePositionAndSwapETH",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"collateral delta of the position",_indexToken:"address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_minOut:"minimum amount of token to swap out",_path:"path of the token swap",_price:"price of the position",_receiver:"address to receive the withdrawn ETH",_sizeDelta:"size delta of the position"},notice:"decrease a position and swap ETH"},"decreasePositionETH(address,address,uint256,uint256,bool,address,uint256)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"decreasePositionETH",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"collateral delta of the position",_collateralToken:"address of the collateral token",_indexToken:"The address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_price:"price of the position",_receiver:"address to receive the withdrawn ETH",_sizeDelta:"size delta of the position"},notice:"decrease a position"},"depositFee()":{inputs:[],name:"depositFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the deposit fee"},"executeDecreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeDecreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the account",_feeReceiver:"address to receive the fees",_orderIndex:"index of the decrease order"},notice:"execute a decrease order"},"executeIncreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the account",_feeReceiver:"address to receive the fees",_orderIndex:"index of the increase order"},notice:"execute an increase order"},"executeSwapOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeSwapOrder",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the account",_feeReceiver:"address to receive the fees",_orderIndex:"index of the swap order"},notice:"execute a swap order"},"feeReserves(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"feeReserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token fee reserves"},"inLegacyMode()":{inputs:[],name:"inLegacyMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract is in legaacy mode"},"increasePosition(address[],address,uint256,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"increasePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"amount of the token to swap in",_indexToken:"The address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_minOut:"minimum amount of token to swap out",_path:"path of the token swap",_price:"price of the position",_sizeDelta:"size delta of the position"},notice:"increase a position"},"increasePositionBufferBps()":{inputs:[],name:"increasePositionBufferBps",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the increase position buffer bps (100)"},"increasePositionETH(address[],address,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"increasePositionETH",outputs:[],stateMutability:"payable",type:"function",params:{_indexToken:"The address of the token to long or short",_isLong:"true if the position is long, false if the position is short",_minOut:"minimum amount of token to swap out",_path:"path of the token swap",_price:"price of the position",_sizeDelta:"size delta of the position"},notice:"increase a position with ETH"},"isLiquidator(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isLiquidator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of liquidators"},"isOrderKeeper(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isOrderKeeper",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of order keepers"},"isPartner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isPartner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of partners"},"liquidatePosition(address,address,address,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_feeReceiver",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralToken:"address of the collateral token",_feeReceiver:"address to receive the fees",_indexToken:"address of the token to long or short",_isLong:"true if the position is long, false if the position is short"},notice:"liquidate a position"},"maxGlobalLongSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalLongSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global long sizes by token"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global short sizes by token"},"orderBook()":{inputs:[],name:"orderBook",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The order book address"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"referralStorage()":{inputs:[],name:"referralStorage",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The referral storage address"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of router"},"sendValue(address,uint256)":{inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"sendValue",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of ETH to transfer",_receiver:"The receiver of the ETH"},notice:"Transfer ETH"},"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The new admin address"},notice:"Set the admin address"},"setDepositFee(uint256)":{inputs:[{internalType:"uint256",name:"_depositFee",type:"uint256"}],name:"setDepositFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_depositFee:"The new deposit fee"},notice:"Set the deposit fee"},"setInLegacyMode(bool)":{inputs:[{internalType:"bool",name:"_inLegacyMode",type:"bool"}],name:"setInLegacyMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inLegacyMode:"True to turn on legacy mode, false to turn off legacy mode"},notice:"Set the inLegacyMode flag to `_inLegacyMode`"},"setIncreasePositionBufferBps(uint256)":{inputs:[{internalType:"uint256",name:"_increasePositionBufferBps",type:"uint256"}],name:"setIncreasePositionBufferBps",outputs:[],stateMutability:"nonpayable",type:"function",params:{_increasePositionBufferBps:"The new increase position buffer basis points"},notice:"Set the increase position buffer basis points"},"setLiquidator(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setLiquidator",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the liquidator to set",_isActive:"True to add the account as a liquidator, false to remove the account"},notice:"Set `_account` as a liquidator true/false: `_isActive`"},"setMaxGlobalSizes(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"},{internalType:"uint256[]",name:"_longSizes",type:"uint256[]"},{internalType:"uint256[]",name:"_shortSizes",type:"uint256[]"}],name:"setMaxGlobalSizes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_longSizes:"The array of corresponding max global long sizes",_shortSizes:"The array of corresponding max global short sizes",_tokens:"The array of tokens"},notice:"Set the max global sizes"},"setOrderKeeper(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setOrderKeeper",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the order keeper to set",_isActive:"True to add the account as an order keeper, false to remove the account"},notice:"Set a order keeper address"},"setPartner(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setPartner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the partner to set",_isActive:"True to add the account as a partner, false to remove the account"},notice:"Set `_account` as a partner true/false: `_isActive`"},"setReferralStorage(address)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"}],name:"setReferralStorage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_referralStorage:"The new referral storage address"},notice:"Set the referral storage address"},"setShouldValidateIncreaseOrder(bool)":{inputs:[{internalType:"bool",name:"_shouldValidateIncreaseOrder",type:"bool"}],name:"setShouldValidateIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",params:{_shouldValidateIncreaseOrder:"True to turn on the validation of increase order, false to turn off the validation of increase order"},notice:"Set the shouldValidateIncreaseOrder flag to `_shouldValidateIncreaseOrder`"},"shouldValidateIncreaseOrder()":{inputs:[],name:"shouldValidateIncreaseOrder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract should validate increase order"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the vault"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the WETH token contract address"},"withdrawFees(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_receiver:"The receiver of the fees",_token:"The token to withdraw"},notice:"Withdraw fees from the contract"}}},"contracts/core/PositionRouter.sol:PositionRouter":{source:"contracts/core/PositionRouter.sol",name:"PositionRouter",title:"Vaporwave Position Router",constructor:{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"uint256",name:"_depositFee",type:"uint256"},{internalType:"uint256",name:"_minExecutionFee",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"CancelDecreasePosition(address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockGap",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeGap",type:"uint256"}],name:"CancelDecreasePosition",type:"event",notice:"Emitted when a decrease position is cancelled"},"CancelIncreasePosition(address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockGap",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeGap",type:"uint256"}],name:"CancelIncreasePosition",type:"event",notice:"Emitted when an increase position is cancelled"},"CreateDecreasePosition(address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockTime",type:"uint256"}],name:"CreateDecreasePosition",type:"event",notice:"Emitted when a decrease position is created"},"CreateIncreasePosition(address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"gasPrice",type:"uint256"}],name:"CreateIncreasePosition",type:"event",notice:"Emitted when an increase position is created"},"DecreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"DecreasePositionReferral",type:"event"},"ExecuteDecreasePosition(address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockGap",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeGap",type:"uint256"}],name:"ExecuteDecreasePosition",type:"event",notice:"Emitted when a decrease position is executed"},"ExecuteIncreasePosition(address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"acceptablePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockGap",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeGap",type:"uint256"}],name:"ExecuteIncreasePosition",type:"event",notice:"Emitted when an increase position is executed"},"IncreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"IncreasePositionReferral",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAdmin(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"SetAdmin",type:"event",notice:"Emitted when the admin address is set"},"SetDelayValues(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minBlockDelayKeeper",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minTimeDelayPublic",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTimeDelay",type:"uint256"}],name:"SetDelayValues",type:"event",params:{maxTimeDelay:"The new maximum time delay",minBlockDelayKeeper:"The new minimum block delay for the keeper",minTimeDelayPublic:"The new minimum time delay for the public"},notice:"Emitted when the delay values are updated"},"SetDepositFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositFee",type:"uint256"}],name:"SetDepositFee",type:"event",notice:"Emitted when the deposit fee is set"},"SetIncreasePositionBufferBps(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"increasePositionBufferBps",type:"uint256"}],name:"SetIncreasePositionBufferBps",type:"event",notice:"Emitted when the increase position buffer basis points are set"},"SetIsLeverageEnabled(bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isLeverageEnabled",type:"bool"}],name:"SetIsLeverageEnabled",type:"event",params:{isLeverageEnabled:"Whether leverage is enabled or not"},notice:"Emitted when the isLeverageEnabled variable is updated"},"SetMaxGlobalSizes(address[],uint256[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"longSizes",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"shortSizes",type:"uint256[]"}],name:"SetMaxGlobalSizes",type:"event",notice:"Emitted when the max global long and short sizes are set"},"SetMinExecutionFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minExecutionFee",type:"uint256"}],name:"SetMinExecutionFee",type:"event",params:{minExecutionFee:"The new minimum execution fee"},notice:"Emitted when the minimum execution fee is updated"},"SetPositionKeeper(address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetPositionKeeper",type:"event",params:{account:"The position keeper address",isActive:"Whether the position keeper is active"},notice:"Emitted when a position keeper is updated"},"SetReferralStorage(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referralStorage",type:"address"}],name:"SetReferralStorage",type:"event",notice:"Emitted when the referral storage address is set"},"SetRequestKeysStartValues(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"increasePositionRequestKeysStart",type:"uint256"},{indexed:!1,internalType:"uint256",name:"decreasePositionRequestKeysStart",type:"uint256"}],name:"SetRequestKeysStartValues",type:"event",params:{decreasePositionRequestKeysStart:"The new decrease position request keys start",increasePositionRequestKeysStart:"The new increase position request keys start"},notice:"Emitted when the request keys start values are updated"},"WithdrawFees(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawFees",type:"event",notice:"Emitted when fees are withdrawn"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper used to avoid truncation errors in basis points calculations"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of admin"},"approve(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token allowance to grant",_spender:"The spender of the token",_token:"The token to approve"},notice:"Make a token approval call"},"cancelDecreasePosition(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"cancelDecreasePosition",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_executionFeeReceiver:"The account to receiver the execution fee",_key:"The key for the request"},returns:{_0:"The success of the cancellation"},notice:"Cancel an decrease position"},"cancelIncreasePosition(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"cancelIncreasePosition",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_executionFeeReceiver:"The account to receiver the execution fee",_key:"The key for the request"},returns:{_0:"The success of the cancellation"},notice:"Cancel an increase position"},"createDecreasePosition(address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_acceptablePrice",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_executionFee",type:"uint256"},{internalType:"bool",name:"_withdrawETH",type:"bool"}],name:"createDecreasePosition",outputs:[],stateMutability:"payable",type:"function",params:{_acceptablePrice:"The acceptable price",_collateralDelta:"The collateral delta",_executionFee:"The execution fee",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if short",_minOut:"The minimum amount to swap out",_path:"The path of the token swap",_receiver:"The receiver",_sizeDelta:"The size delta",_withdrawETH:"True if withdrawing ETH, false otherwise"},notice:"Create an decrease position"},"createIncreasePosition(address[],address,uint256,uint256,uint256,bool,uint256,uint256,bytes32)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_acceptablePrice",type:"uint256"},{internalType:"uint256",name:"_executionFee",type:"uint256"},{internalType:"bytes32",name:"_referralCode",type:"bytes32"}],name:"createIncreasePosition",outputs:[],stateMutability:"payable",type:"function",params:{_acceptablePrice:"The acceptable price",_amountIn:"The amount of tokens to swap in",_executionFee:"The execution fee",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if short",_minOut:"The minimun tokens to swap out",_path:"The path of the token swap",_referralCode:"The trader's referral code",_sizeDelta:"The size delta"},notice:"Create an increase position"},"createIncreasePositionETH(address[],address,uint256,uint256,bool,uint256,uint256,bytes32)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_acceptablePrice",type:"uint256"},{internalType:"uint256",name:"_executionFee",type:"uint256"},{internalType:"bytes32",name:"_referralCode",type:"bytes32"}],name:"createIncreasePositionETH",outputs:[],stateMutability:"payable",type:"function",params:{_acceptablePrice:"The acceptable price",_executionFee:"The execution fee",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if short",_minOut:"The minimun tokens to swap out",_path:"The path of the token swap",_referralCode:"The trader's referral code",_sizeDelta:"The size delta"},notice:"Create an increase position with ETH"},"decreasePositionRequestKeys(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"decreasePositionRequestKeys",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"decreasePositionRequestKeysStart()":{inputs:[],name:"decreasePositionRequestKeysStart",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decreasePositionRequests(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"decreasePositionRequests",outputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"collateralDelta",type:"uint256"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"minOut",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"blockTime",type:"uint256"},{internalType:"bool",name:"withdrawETH",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of decrease position requests"},"decreasePositionsIndex(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"decreasePositionsIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user decrease position index"},"depositFee()":{inputs:[],name:"depositFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the deposit fee"},"executeDecreasePosition(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeDecreasePosition",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_executionFeeReceiver:"The account to receive the execution fee",_key:"The key of the request"},returns:{_0:"The success of the execution"},notice:"Execute a decrease position"},"executeDecreasePositions(uint256,address)":{inputs:[{internalType:"uint256",name:"_endIndex",type:"uint256"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeDecreasePositions",outputs:[],stateMutability:"nonpayable",type:"function",details:"Function executes all decrease positions from index `decreasePositionRequestKeysStart` to `_endIndex`",params:{_endIndex:"The index of the increase position to stop execution",_executionFeeReceiver:"The address to receive the execution fees"},notice:"Execute decrease positions"},"executeIncreasePosition(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeIncreasePosition",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Emit an event `ExecuteIncreasePosition`",params:{_executionFeeReceiver:"The account to receive the execution fee",_key:"The key for the request"},returns:{_0:"The execution success"},notice:"Execute an increase position"},"executeIncreasePositions(uint256,address)":{inputs:[{internalType:"uint256",name:"_endIndex",type:"uint256"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeIncreasePositions",outputs:[],stateMutability:"nonpayable",type:"function",details:"Function executes all increase positions from index `increasePositionRequestKeysStart` to `_endIndex`",params:{_endIndex:"The index of the increase position to stop execution",_executionFeeReceiver:"The address to receive the execution fees"},notice:"Execute increase positions"},"feeReserves(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"feeReserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token fee reserves"},"getDecreasePositionRequestPath(bytes32)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"}],name:"getDecreasePositionRequestPath",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_key:"The key for the request"},returns:{_0:"The token swap path for the request"},notice:"Get the request path for a decrease position"},"getIncreasePositionRequestPath(bytes32)":{inputs:[{internalType:"bytes32",name:"_key",type:"bytes32"}],name:"getIncreasePositionRequestPath",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_key:"The key for the request"},returns:{_0:"The token swap path for the request"},notice:"Get the request path for an increase position"},"getRequestKey(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_index",type:"uint256"}],name:"getRequestKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function",params:{_account:"The account associated with the request",_index:"The index of the requestd"},notice:"Get a request key"},"getRequestQueueLengths()":{inputs:[],name:"getRequestQueueLengths",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Get the length of the request queue"},"increasePositionBufferBps()":{inputs:[],name:"increasePositionBufferBps",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the increase position buffer bps (100)"},"increasePositionRequestKeys(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"increasePositionRequestKeys",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"increasePositionRequestKeysStart()":{inputs:[],name:"increasePositionRequestKeysStart",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"increasePositionRequests(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"increasePositionRequests",outputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minOut",type:"uint256"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"blockTime",type:"uint256"},{internalType:"bool",name:"hasCollateralInETH",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of increase position requests"},"increasePositionsIndex(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"increasePositionsIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user increase position index"},"isLeverageEnabled()":{inputs:[],name:"isLeverageEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isPositionKeeper(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isPositionKeeper",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of position keepers"},"maxGlobalLongSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalLongSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global long sizes by token"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max global short sizes by token"},"maxTimeDelay()":{inputs:[],name:"maxTimeDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minBlockDelayKeeper()":{inputs:[],name:"minBlockDelayKeeper",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minExecutionFee()":{inputs:[],name:"minExecutionFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTimeDelayPublic()":{inputs:[],name:"minTimeDelayPublic",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"referralStorage()":{inputs:[],name:"referralStorage",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The referral storage address"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of router"},"sendValue(address,uint256)":{inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"sendValue",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of ETH to transfer",_receiver:"The receiver of the ETH"},notice:"Transfer ETH"},"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The new admin address"},notice:"Set the admin address"},"setDelayValues(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minBlockDelayKeeper",type:"uint256"},{internalType:"uint256",name:"_minTimeDelayPublic",type:"uint256"},{internalType:"uint256",name:"_maxTimeDelay",type:"uint256"}],name:"setDelayValues",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an event `SetDelayValues`",params:{_maxTimeDelay:"The maximum time delay",_minBlockDelayKeeper:"The minimum block delay for the keeper",_minTimeDelayPublic:"The minimum time delay for the public"},notice:"Set the delay values"},"setDepositFee(uint256)":{inputs:[{internalType:"uint256",name:"_depositFee",type:"uint256"}],name:"setDepositFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_depositFee:"The new deposit fee"},notice:"Set the deposit fee"},"setIncreasePositionBufferBps(uint256)":{inputs:[{internalType:"uint256",name:"_increasePositionBufferBps",type:"uint256"}],name:"setIncreasePositionBufferBps",outputs:[],stateMutability:"nonpayable",type:"function",params:{_increasePositionBufferBps:"The new increase position buffer basis points"},notice:"Set the increase position buffer basis points"},"setIsLeverageEnabled(bool)":{inputs:[{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isLeverageEnabled:"True to enable leverage, false otherwise"},notice:"Set the isLeverageEnabled flag to `_isLeverageEnabled`"},"setMaxGlobalSizes(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"},{internalType:"uint256[]",name:"_longSizes",type:"uint256[]"},{internalType:"uint256[]",name:"_shortSizes",type:"uint256[]"}],name:"setMaxGlobalSizes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_longSizes:"The array of corresponding max global long sizes",_shortSizes:"The array of corresponding max global short sizes",_tokens:"The array of tokens"},notice:"Set the max global sizes"},"setMinExecutionFee(uint256)":{inputs:[{internalType:"uint256",name:"_minExecutionFee",type:"uint256"}],name:"setMinExecutionFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_minExecutionFee:"The nex minimum execution fee"},notice:"Set the minimum execution fee to `_minExecutionFee`"},"setPositionKeeper(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setPositionKeeper",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the account to set as a position keeper",_isActive:"True/false to set the account as a position keeper"},notice:"Set `_account` as a position keeper true/false: `_isActive`"},"setReferralStorage(address)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"}],name:"setReferralStorage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_referralStorage:"The new referral storage address"},notice:"Set the referral storage address"},"setRequestKeysStartValues(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_increasePositionRequestKeysStart",type:"uint256"},{internalType:"uint256",name:"_decreasePositionRequestKeysStart",type:"uint256"}],name:"setRequestKeysStartValues",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an event `SetRequestKeysStartValues`",params:{_decreasePositionRequestKeysStart:"The start value for the decrease position request key",_increasePositionRequestKeysStart:"The start value for the increase position request key"},notice:"Set the request keys start values"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the vault"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the WETH token contract address"},"withdrawFees(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_receiver:"The receiver of the fees",_token:"The token to withdraw"},notice:"Withdraw fees from the contract"}}},"contracts/core/Router.sol:Router":{source:"contracts/core/Router.sol",name:"Router",title:"Vaporwave Router",constructor:{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_weth",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Swap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"tokenIn",type:"address"},{indexed:!1,internalType:"address",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"}},methods:{"addPlugin(address)":{inputs:[{internalType:"address",name:"_plugin",type:"address"}],name:"addPlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The address of the plugin to add"},notice:"Add `_plugin` as a plugin to the router"},"approvePlugin(address)":{inputs:[{internalType:"address",name:"_plugin",type:"address"}],name:"approvePlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The address of the plugin to approve"},notice:"Approve `_plugin` as a plugin"},"approvedPlugins(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"approvedPlugins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of accounts to their approved plugins"},"decreasePosition(address,address,uint256,uint256,bool,address,uint256)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"decreasePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"The collateral delta",_collateralToken:"The token used as collateral",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_price:"The price of the position",_receiver:"The address of the account to receive the tokens",_sizeDelta:"The size delta"},notice:"Decrease a position"},"decreasePositionAndSwap(address[],address,uint256,uint256,bool,address,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"}],name:"decreasePositionAndSwap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"The collateral delta",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_price:"The price of the position",_receiver:"The address of the account to receive the tokens",_sizeDelta:"The size delta"},notice:"Decrease a position and swap the collateral token"},"decreasePositionAndSwapETH(address[],address,uint256,uint256,bool,address,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"}],name:"decreasePositionAndSwapETH",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"The collateral delta",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_price:"The price of the position",_receiver:"The address of the account to receive the tokens",_sizeDelta:"The size delta"},notice:"Decrease a position and swap the ETH"},"decreasePositionETH(address,address,uint256,uint256,bool,address,uint256)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"decreasePositionETH",outputs:[],stateMutability:"nonpayable",type:"function",params:{_collateralDelta:"The collateral delta",_collateralToken:"The token used as collateral",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_price:"The price of the position",_receiver:"The address of the account to receive the tokens"},notice:"Decrease a position with ETH"},"denyPlugin(address)":{inputs:[{internalType:"address",name:"_plugin",type:"address"}],name:"denyPlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The address of the plugin to deny"},notice:"Deny `_plugin` as a plugin"},"directPoolDeposit(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"directPoolDeposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to deposit",_token:"The token to deposit"},notice:"Make a direct token deposit to the vault pool"},"increasePosition(address[],address,uint256,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"increasePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"The amount of tokens to swap in",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_price:"The price of the position",_sizeDelta:"The size delta"},notice:"Increase a position"},"increasePositionETH(address[],address,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"increasePositionETH",outputs:[],stateMutability:"payable",type:"function",params:{_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_price:"The price of the position",_sizeDelta:"The size delta"},notice:"Increase a position with ETH"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pluginDecreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"}],name:"pluginDecreasePosition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to decrease the position of",_collateralDelta:"The collateral delta",_collateralToken:"The token to use as collateral",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_receiver:"The address of the account to receive the collateral",_sizeDelta:"The size delta"},notice:"Decrease the position of `_account` with `_collateralToken` collateral and `_indexToken` index"},"pluginIncreasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"pluginIncreasePosition",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to increase the position of",_collateralToken:"The token to use as collateral",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if it is short",_sizeDelta:"The size delta"},notice:"Increase the position of `_account` with `_collateralToken` collateral and `_indexToken` index"},"pluginTransfer(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"pluginTransfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to transfer from",_amount:"The amount of tokens to transfer",_receiver:"The address of the account to transfer to",_token:"The token to transfer"},notice:"Transfer `_amount` of `_token` tokens from `_account to `_receiver`"},"plugins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"plugins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of plugin addresses"},"removePlugin(address)":{inputs:[{internalType:"address",name:"_plugin",type:"address"}],name:"removePlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The address of the plugin to remove"},notice:"Remove `_plugin` as a plugin from the router"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"swap(address[],uint256,uint256,address)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"The amount of tokens to swap in",_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_receiver:"The address of the account to receive the tokens"},notice:"Make a token swap"},"swapETHToTokens(address[],uint256,address)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"swapETHToTokens",outputs:[],stateMutability:"payable",type:"function",params:{_minOut:"The minimum amount of tokens to swap out",_path:"The path of the token swap",_receiver:"The address of the account to receive the tokens"},notice:"Make a swap from ETH to a token"},"swapTokensToETH(address[],uint256,uint256,address)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address payable",name:"_receiver",type:"address"}],name:"swapTokensToETH",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"The amount of tokens to swap in",_minOut:"The minimum amount of ETH to swap out",_path:"The path of the token swap",_receiver:"The address of the account to receive the ETH"},notice:"Make a swap from a token to ETH"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Vault address"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Wrapped Ether (WETH) token"}}},"contracts/core/Vault.sol:Vault":{source:"contracts/core/Vault.sol",name:"Vault",title:"Vaporwave Vault",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Buy(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"usdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeBasisPoints",type:"uint256"}],name:"Buy",type:"event"},"ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"size",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"averagePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryFundingRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reserveAmount",type:"uint256"},{indexed:!1,internalType:"int256",name:"realisedPnl",type:"int256"}],name:"ClosePosition",type:"event"},"CollectMarginFees(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"feeUsd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeTokens",type:"uint256"}],name:"CollectMarginFees",type:"event"},"CollectSwapFees(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"feeUsd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeTokens",type:"uint256"}],name:"CollectSwapFees",type:"event"},"DecreaseGuaranteedUsd(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DecreaseGuaranteedUsd",type:"event"},"DecreasePoolAmount(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DecreasePoolAmount",type:"event"},"DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"}],name:"DecreasePosition",type:"event"},"DecreaseReservedAmount(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DecreaseReservedAmount",type:"event"},"DirectPoolDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DirectPoolDeposit",type:"event"},"IncreaseGuaranteedUsd(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"IncreaseGuaranteedUsd",type:"event"},"IncreasePoolAmount(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"IncreasePoolAmount",type:"event"},"IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"}],name:"IncreasePosition",type:"event"},"IncreaseReservedAmount(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"IncreaseReservedAmount",type:"event"},"LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"size",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reserveAmount",type:"uint256"},{indexed:!1,internalType:"int256",name:"realisedPnl",type:"int256"},{indexed:!1,internalType:"uint256",name:"markPrice",type:"uint256"}],name:"LiquidatePosition",type:"event"},"Sell(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"usdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeBasisPoints",type:"uint256"}],name:"Sell",type:"event"},"Swap(address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"tokenIn",type:"address"},{indexed:!1,internalType:"address",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOutAfterFees",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeBasisPoints",type:"uint256"}],name:"Swap",type:"event"},"UpdateFundingRate(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"fundingRate",type:"uint256"}],name:"UpdateFundingRate",type:"event"},"UpdatePnl(bytes32,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"bool",name:"hasProfit",type:"bool"},{indexed:!1,internalType:"uint256",name:"delta",type:"uint256"}],name:"UpdatePnl",type:"event"},"UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"size",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"averagePrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryFundingRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reserveAmount",type:"uint256"},{indexed:!1,internalType:"int256",name:"realisedPnl",type:"int256"},{indexed:!1,internalType:"uint256",name:"markPrice",type:"uint256"}],name:"UpdatePosition",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in basis points calculations"},"FUNDING_RATE_PRECISION()":{inputs:[],name:"FUNDING_RATE_PRECISION",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in funding rate calculations"},"MAX_FEE_BASIS_POINTS()":{inputs:[],name:"MAX_FEE_BASIS_POINTS",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The max fee basis points is 5% (500)"},"MAX_FUNDING_RATE_FACTOR()":{inputs:[],name:"MAX_FUNDING_RATE_FACTOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The max funding rate factor is 1% (10,000)"},"MAX_LIQUIDATION_FEE_USD()":{inputs:[],name:"MAX_LIQUIDATION_FEE_USD",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"The max liquidation fee is 100 USD (1e32)"},"MIN_FUNDING_RATE_INTERVAL()":{inputs:[],name:"MIN_FUNDING_RATE_INTERVAL",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The minimum funding rate interval is 1 hour (3600 seconds)"},"MIN_LEVERAGE()":{inputs:[],name:"MIN_LEVERAGE",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The minimum leverage is 1x (10,000)"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"addRouter(address)":{inputs:[{internalType:"address",name:"_router",type:"address"}],name:"addRouter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_router:"The address to add as a router"},notice:"Add `_router` as a router"},"allAllowlistedTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allAllowlistedTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of all allowlisted tokens"},"allAllowlistedTokensLength()":{inputs:[],name:"allAllowlistedTokensLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The length of the allWhiteListedtokens array"},notice:"Get the number of allowlisted tokens"},"allowlistedTokenCount()":{inputs:[],name:"allowlistedTokenCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of allowlisted tokens"},"allowlistedTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"allowlistedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of allowlisted tokens"},"approvedRouters(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"approvedRouters",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of approved routers"},"bufferAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"bufferAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of buffer amounts by token"},"buy(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"buy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Update the pool amounts after a token transfer inEmits a `Buy` event",params:{_token:"The token used to buy USD -- token must be allowlisted"},notice:"Buy USD"},"clearTokenConfig(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"clearTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function"},"cumulativeFundingRates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"cumulativeFundingRates",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of cumulative funding rates by token"},"decreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"}],name:"decreasePosition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"directPoolDeposit(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"directPoolDeposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"deposit into the pool without minting USD tokens - useful in allowing the pool to become over-collaterisedEmits an event `DirectPoolDeposit`",params:{_token:"The token to deposit into the pool"}},"feeReserves(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"feeReserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of fee reserves by token"},"fundingInterval()":{inputs:[],name:"fundingInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The funding interval"},"fundingRateFactor()":{inputs:[],name:"fundingRateFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The funding rate factor"},"getDelta(address,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_averagePrice",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_lastIncreasedTime",type:"uint256"}],name:"getDelta",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getEntryFundingRate(address,address,bool)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getEntryFundingRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short"},notice:"Get the entry funding rate"},"getFeeBasisPoints(address,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdDelta",type:"uint256"},{internalType:"uint256",name:"_feeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"bool",name:"_increment",type:"bool"}],name:"getFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getFundingFee(address,address,address,bool,uint256,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_entryFundingRate",type:"uint256"}],name:"getFundingFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address of the account",_collateralToken:"The collateral token",_entryFundingRate:"The entry funding rate",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short",_size:"The size of the position"},notice:"Get the funding fee"},"getGlobalShortDelta(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getGlobalShortDelta",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address"},returns:{_0:"The global short delta"},notice:"Get the global short delta"},"getMaxPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getMaxPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query for the price"},returns:{_0:"The max price for the token"},notice:"Get the max price for `_token`"},"getMinPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getMinPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query for the price"},returns:{_0:"The min price for the token"},notice:"Get the min price for `_token`"},"getNextAveragePrice(address,uint256,uint256,bool,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_averagePrice",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_nextPrice",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"uint256",name:"_lastIncreasedTime",type:"uint256"}],name:"getNextAveragePrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)",params:{_averagePrice:"The average price",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short",_lastIncreasedTime:"The time of the last increase",_nextPrice:"The next price",_size:"The position size",_sizeDelta:"The change in the position size"},returns:{_0:"The next average price"},notice:"Get the next average price"},"getNextFundingRate(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getNextFundingRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address"},returns:{_0:"The next funding rate"},notice:"Get the next funding rate"},"getNextGlobalShortAveragePrice(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_nextPrice",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"}],name:"getNextGlobalShortAveragePrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)",params:{_indexToken:"The address of the token to long or short",_nextPrice:"The next price",_sizeDelta:"The size delta"},returns:{_0:"The next global short average price"},notice:"Get the next global short average price"},"getPosition(address,address,address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account associated with the position",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short"},notice:"Get a position"},"getPositionDelta(address,address,address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getPositionDelta",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account associated with the position",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short"},returns:{_0:"The position delta"},notice:"Get a position delta"},"getPositionFee(address,address,address,bool,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"}],name:"getPositionFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address of the account",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short",_sizeDelta:"The change in size of the position"},notice:"Get the position fee"},"getPositionKey(address,address,address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getPositionKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function",details:"The position key is deterministically created from the hash of the parameters",params:{_account:"The account associated with the position",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short"},notice:"Get a position key"},"getPositionLeverage(address,address,address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getPositionLeverage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account associated with the position",_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short",_isLong:"True if the position is long, false if the position is short"},notice:"Get a position leverage"},"getRedemptionAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getRedemptionAmount",outputs:[{internalType:"uint256",name:"redemptionAmount",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query for the redemption amount",_usdAmount:"The USD amount"},returns:{redemptionAmount:"The redemption amount for the token in USD"},notice:"Get the redemption amount for `_token`"},"getRedemptionCollateral(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getRedemptionCollateral",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query"},returns:{_0:"The redemption collateral amount"},notice:"Get the redemption collateral for `_token`"},"getRedemptionCollateralUsd(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getRedemptionCollateralUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query"},returns:{_0:"The redemption collateral amount in USD"},notice:"Get the redemption collateral for `_token` in USD"},"getTargetUsdAmount(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getTargetUsdAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address"},returns:{_0:"The target USD amount"},notice:"Get the target USD amount"},"getTokenAum(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address"},returns:{_0:"The current token aum in vault"},notice:"Calculates the current token aum in Vault"},"getUtilisation(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getUtilisation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address"},returns:{_0:"The token utilisation"},notice:"Get the token utilisation"},"globalShortAveragePrices(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"globalShortAveragePrices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of the global average short prices by token"},"globalShortSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"globalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of the global short sizes by token"},"guaranteedUsd(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"guaranteedUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of guaranteed USD amounts by token"},"hasDynamicFees()":{inputs:[],name:"hasDynamicFees",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract has dynamic fees"},"inPrivateLiquidationMode()":{inputs:[],name:"inPrivateLiquidationMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract is in private liquidation mode"},"includeAmmPrice()":{inputs:[],name:"includeAmmPrice",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if AMM pricing should be included"},"increasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"increasePosition",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `IncreasePosition` eventEmits a `UpdatePosition` event",notice:"Increase position"},"initialize(address,address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_liquidationFeeUsd",type:"uint256"},{internalType:"uint256",name:"_fundingRateFactor",type:"uint256"},{internalType:"uint256",name:"_stableFundingRateFactor",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fundingRateFactor:"The factor used to calculate the funding rate",_liquidationFeeUsd:"The fee charged for liquidation",_priceFeed:"The address of the price feed contract",_router:"The address of the router contract",_stableFundingRateFactor:"The stable funding rate factor"},notice:"Initialize the contract"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the vault is initialzied"},"isLeverageEnabled()":{inputs:[],name:"isLeverageEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if leverage is enabled"},"isLiquidator(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isLiquidator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of liquidators"},"isManager(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isManager",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of managers"},"isSwapEnabled()":{inputs:[],name:"isSwapEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if swaps are enabled"},"lastFundingTimes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastFundingTimes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of last funding times by token"},"liquidatePosition(address,address,address,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_feeReceiver",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `CollectMarginFees` eventEmits a `LiquidatePosition` event"},"liquidationFeeUsd()":{inputs:[],name:"liquidationFeeUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The liquidation fee in USD"},"marginFeeBasisPoints()":{inputs:[],name:"marginFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The margin fee basis points"},"maxGasPrice()":{inputs:[],name:"maxGasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max gas price"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of the max global short sizes by token"},"maxLeverage()":{inputs:[],name:"maxLeverage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum leverage"},"maxUsdAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"maxUsdAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of max USD amounts by token"},"minProfitBasisPoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"minProfitBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of minimum profit basis points by token"},"minProfitTime()":{inputs:[],name:"minProfitTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum profit time"},"mintBurnFeeBasisPoints()":{inputs:[],name:"mintBurnFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The fee basis points for a mint or burn"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the vault owner"},"poolAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of pool amounts by token"},"positions(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"positions",outputs:[{internalType:"uint256",name:"size",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"averagePrice",type:"uint256"},{internalType:"uint256",name:"entryFundingRate",type:"uint256"},{internalType:"uint256",name:"reserveAmount",type:"uint256"},{internalType:"int256",name:"realisedPnl",type:"int256"},{internalType:"uint256",name:"lastIncreasedTime",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of positions"},"priceFeed()":{inputs:[],name:"priceFeed",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The price feed address"},"removeRouter(address)":{inputs:[{internalType:"address",name:"_router",type:"address"}],name:"removeRouter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_router:"the address to remove as a router"},notice:"Remove `_router` as a router"},"reservedAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"reservedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of reserved amounts by token"},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The router address"},"sell(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"sell",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Emits a `Sell` event",params:{_receiver:"The receiver of the tokens",_token:"The token to sell USD for -- token must be allowlisted"},notice:"Sell USD tokens"},"setBufferAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setBufferAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The buffer amount to set",_token:"The token to set the buffer amount for"},notice:"Set the buffer amount"},"setFees(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableTaxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_mintBurnFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_swapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableSwapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_marginFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_liquidationFeeUsd",type:"uint256"},{internalType:"uint256",name:"_minProfitTime",type:"uint256"},{internalType:"bool",name:"_hasDynamicFees",type:"bool"}],name:"setFees",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set Fees"},"setFundingRate(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_fundingInterval",type:"uint256"},{internalType:"uint256",name:"_fundingRateFactor",type:"uint256"},{internalType:"uint256",name:"_stableFundingRateFactor",type:"uint256"}],name:"setFundingRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fundingInterval:"The funding interval",_fundingRateFactor:"The funding rate factor",_stableFundingRateFactor:"The stable funding rate factor"},notice:"Set the funding rate"},"setInPrivateLiquidationMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateLiquidationMode",type:"bool"}],name:"setInPrivateLiquidationMode",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_inPrivateLiquidationMode:"True if the contract should be in private liquidation mode, false otherwise"},notice:"Toggle private liquidation mode"},"setIsLeverageEnabled(bool)":{inputs:[{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isLeverageEnabled:"Whether to enable or disable leverage"},notice:"Enable or disable `_isLeverageEnabled` leverage"},"setIsSwapEnabled(bool)":{inputs:[{internalType:"bool",name:"_isSwapEnabled",type:"bool"}],name:"setIsSwapEnabled",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_isSwapEnabled:"True if the contract should be in swap enabled mode, false otherwise"},notice:"Toggle swap enabled"},"setLiquidator(address,bool)":{inputs:[{internalType:"address",name:"_liquidator",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setLiquidator",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_isActive:"True if the address should be added to the liquidator list, false if it should be removed",_liquidator:"Address to be added or removed from the liquidator list"},notice:"Set a liquidator address"},"setManager(address,bool)":{inputs:[{internalType:"address",name:"_manager",type:"address"},{internalType:"bool",name:"_isManager",type:"bool"}],name:"setManager",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_isManager:"True if the address should be added to the manager list, false if it should be removed",_manager:"Address to be added or removed from the manager list"},notice:"Set a manager address"},"setMaxGasPrice(uint256)":{inputs:[{internalType:"uint256",name:"_maxGasPrice",type:"uint256"}],name:"setMaxGasPrice",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxGasPrice:"The max gas price"},notice:"Set the max gas price"},"setMaxGlobalShortSize(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setMaxGlobalShortSize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Called by the owner (timelock contract)",params:{_amount:"The max short size for the token",_token:"The token to set the max short size for"},notice:"Set Max Global Short Size"},"setMaxLeverage(uint256)":{inputs:[{internalType:"uint256",name:"_maxLeverage",type:"uint256"}],name:"setMaxLeverage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxLeverage:"The maximum leverage"},notice:"Set the maximum leverage"},"setMaxUsdAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setMaxUsdAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The max usd debt amount",_token:"The address of the token to set the max usd amount for"},notice:"Set the max usd debt amount for `_token` to `_amount`"},"setOwner(address)":{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_owner:"The new owner of the contract"},notice:"Transfer the contract ownership"},"setPriceFeed(address)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceFeed:"The address of the price feed"},notice:"Set the price feed address"},"setTokenConfig(address,uint256,uint256,uint256,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"},{internalType:"uint256",name:"_tokenWeight",type:"uint256"},{internalType:"uint256",name:"_minProfitBps",type:"uint256"},{internalType:"bool",name:"_isStable",type:"bool"},{internalType:"bool",name:"_isShortable",type:"bool"}],name:"setTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set Token Configuration"},"setVaultUtils(address)":{inputs:[{internalType:"contract IVaultUtils",name:"_vaultUtils",type:"address"}],name:"setVaultUtils",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the contract owner",params:{_vaultUtils:"The vault utils contract"},notice:"Set the vault utils contract"},"shortableTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"shortableTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of shortable tokens"},"stableFundingRateFactor()":{inputs:[],name:"stableFundingRateFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The funding rate factor for stable coins"},"stableSwapFeeBasisPoints()":{inputs:[],name:"stableSwapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The fee basis points for a stablecoin swap"},"stableTaxBasisPoints()":{inputs:[],name:"stableTaxBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The tax basis points for stablecoins"},"stableTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"stableTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of stable tokens (stablecoins)"},"swap(address,address,address)":{inputs:[{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"swap",outputs:[{internalType:"uint256",name:"amountOutAfterFees",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Emit an event `Swap`",params:{_receiver:"The receiver of the tokens",_tokenIn:"The token to swap in",_tokenOut:"The token to swap out"},returns:{amountOutAfterFees:"The amount of tokens out after fees"},notice:"Swap `_tokenIn` for `_tokenOut`"},"swapFeeBasisPoints()":{inputs:[],name:"swapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The fee basis points for a token swap"},"taxBasisPoints()":{inputs:[],name:"taxBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The tax basis points"},"tokenBalances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token balances"},"tokenDecimals(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenDecimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token decimals"},"tokenToUsdMin(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"tokenToUsdMin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token address to query for the minimum price",_tokenAmount:"The token amount"},returns:{_0:"The token amount converted to USD value using the minimum price"},notice:"Get the minimum price for `_tokenAmount` of `_token` in USD"},"tokenWeights(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenWeights",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token weights"},"totalTokenWeights()":{inputs:[],name:"totalTokenWeights",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total token weights"},"updateCumulativeFundingRate(address,address)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"}],name:"updateCumulativeFundingRate",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `UpdateFundingRate` event",params:{_collateralToken:"The collateral token",_indexToken:"The address of the token to long or short"},notice:"Update the cumulative funding rate"},"upgradeVault(address,address,uint256)":{inputs:[{internalType:"address",name:"_newVault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"upgradeVault",outputs:[],stateMutability:"nonpayable",type:"function",details:"The governance controlling this function should have a timelock",params:{_amount:"The amount of tokens to transfer to the new vault",_newVault:"The new vault contract address",_token:"The token to transfer to the new vault"},notice:"Upgrade the vault (Transfer tokens to a new vault)"},"usdToToken(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"usdToToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_price:"The USD price per token",_token:"The token address",_usdAmount:"The USD amount"},returns:{_0:"The token amount"},notice:"Get the token amount for `_usdAmount` USD of `_token` at `_price` USD per token"},"usdToTokenMax(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"usdToTokenMax",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token addres to query for the maximum price",_usdAmount:"The USD amount"},returns:{_0:"The max amount of tokens for the given USD amount"},notice:"Get the max token amount for `_usdAmount` USD of `_token`"},"usdToTokenMin(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"usdToTokenMin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The token addres to query for the minimum price",_usdAmount:"The USD amount"},returns:{_0:"The minimum amount of tokens for the given USD amount"},notice:"Get the minimum token amount for `_usdAmount` USD of `_token`"},"validateLiquidation(address,address,address,bool,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"bool",name:"_raise",type:"bool"}],name:"validateLiquidation",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Validate a liquidation"},"vaultUtils()":{inputs:[],name:"vaultUtils",outputs:[{internalType:"contract IVaultUtils",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The vault utils address"},"withdrawFees(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_receiver:"The address to receive the fees",_token:"The token to withdraw"},returns:{_0:"The amount of fees transferred out"},notice:"Withdraw fees"}}},"contracts/core/VaultPriceFeed.sol:VaultPriceFeed":{source:"contracts/core/VaultPriceFeed.sol",name:"VaultPriceFeed",title:"Vaporwave Vault Price Feed",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Factor used to avoid decimals in basis points calculations"},"MAX_ADJUSTMENT_BASIS_POINTS()":{inputs:[],name:"MAX_ADJUSTMENT_BASIS_POINTS",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",notice:"The max basis points adjustment is 20"},"MAX_ADJUSTMENT_INTERVAL()":{inputs:[],name:"MAX_ADJUSTMENT_INTERVAL",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The max adjustment interval is 2 hours (7,200 seconds)"},"MAX_SPREAD_BASIS_POINTS()":{inputs:[],name:"MAX_SPREAD_BASIS_POINTS",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",notice:"The max spread basis points is 50"},"ONE_USD()":{inputs:[],name:"ONE_USD",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Calculation helper to avoid truncation errors"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Calculation helper to avoid truncation errors"},"adjustmentBasisPoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"adjustmentBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to their adjustment basis points"},"ammOracles(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"ammOracles",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to amm oracles"},"getAmmPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getAmmPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Set isAmmEnabled to true to apply TWAP amm oracle pricing",params:{_token:"The token address"},notice:"Get the amm price for `_token`"},"getAmmPriceV2(address,bool,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"},{internalType:"uint256",name:"_primaryPrice",type:"uint256"}],name:"getAmmPriceV2",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"This function adds an additional boundary check between the primary price and the amm price",params:{_maximise:"True if the price should be maximized, false to minimize",_primaryPrice:"The primary price",_token:"The token address"},notice:"Get the amm price for `_token`"},"getPrice(address,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"},{internalType:"bool",name:"_includeAmmPrice",type:"bool"}],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_includeAmmPrice:"True to include AMM pricing, false to exclude",_maximise:"True if the price should be maximized, false to minimize",_token:"The token address"},notice:"Get the price for `_token`"},"getPriceV1(address,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"},{internalType:"bool",name:"_includeAmmPrice",type:"bool"}],name:"getPriceV1",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"This function does not use v2 AMM pricing",params:{_includeAmmPrice:"True to include AMM pricing, false to exclude",_maximise:"True if the price should be maximized, false to minimize",_token:"The token address"},notice:"Get the price for `_token`"},"getPriceV2(address,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"},{internalType:"bool",name:"_includeAmmPrice",type:"bool"}],name:"getPriceV2",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"This function uses v2 AMM pricing",params:{_includeAmmPrice:"True to include AMM pricing, false to exclude",_maximise:"True if the price should be maximized, false to minimize",_token:"The token address"},notice:"Get the price for `_token`"},"getPrimaryPrice(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getPrimaryPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_maximise:"True if the price should be maximized, false to minimize",_token:"The token address"},notice:"Get the primary price for `_token`"},"getSecondaryPrice(address,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_referencePrice",type:"uint256"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getSecondaryPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_maximise:"True if the price should be maximized, false to minimize",_referencePrice:"The reference price",_token:"The token address"},notice:"Get the secondary price for `_token`"},"isAdjustmentAdditive(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isAdjustmentAdditive",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if token adjustment is additive, false if deductive"},"isAmmEnabled()":{inputs:[],name:"isAmmEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"If the price feed is AMM pricing enabled"},"isSecondaryPriceEnabled()":{inputs:[],name:"isSecondaryPriceEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"If the price feed is secondary pricing enabled"},"lastAdjustmentTimings(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastAdjustmentTimings",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to their last adjustment time"},"maxStrictPriceDeviation()":{inputs:[],name:"maxStrictPriceDeviation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max allowed price deviation for strict stablecoins to return 1 USD"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceDecimals(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"priceDecimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of price feeds to decimals"},"priceFeeds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to price feeds"},"priceSampleSpace()":{inputs:[],name:"priceSampleSpace",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of rounds to sample from the price feed"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"secondaryPriceFeed()":{inputs:[],name:"secondaryPriceFeed",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the secondary price feed"},"setAdjustment(address,bool,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_isAdditive",type:"bool"},{internalType:"uint256",name:"_adjustmentBps",type:"uint256"}],name:"setAdjustment",outputs:[],stateMutability:"nonpayable",type:"function",params:{_adjustmentBps:"The adjustment basis points",_isAdditive:"True if the adjustment is additive, false if subtractive",_token:"The token to set the adjustment factors for"},notice:"Set the adjustment factors for `_token`"},"setAmmOracle(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_ammOracle",type:"address"}],name:"setAmmOracle",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ammOracle:"The address of the AMM oracle",_token:"The token to set the AMM oracle for"},notice:"Set the AMM oracle for `_token` to `_ammOracle`"},"setIsAmmEnabled(bool)":{inputs:[{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsAmmEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isEnabled:"Whether to enable or disable the AMM pricing for the feed"},notice:"Enable or disable `_isEnabled` the price feed from using AMM aggregate pricing"},"setIsSecondaryPriceEnabled(bool)":{inputs:[{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsSecondaryPriceEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isEnabled:"Whether to enable or disable the secondary pricing for the feed"},notice:"Enable or disable `_isEnabled` the price feed from using secondary pricing"},"setMaxStrictPriceDeviation(uint256)":{inputs:[{internalType:"uint256",name:"_maxStrictPriceDeviation",type:"uint256"}],name:"setMaxStrictPriceDeviation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxStrictPriceDeviation:"The max strict price deviation"},notice:"Set the max price deviation for strict stablecoins to `_maxStrictPriceDeviation`"},"setPriceSampleSpace(uint256)":{inputs:[{internalType:"uint256",name:"_priceSampleSpace",type:"uint256"}],name:"setPriceSampleSpace",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceSampleSpace:"The price sample space"},notice:"Set the price sample space to `_priceSampleSpace`"},"setSecondaryPriceFeed(address)":{inputs:[{internalType:"address",name:"_secondaryPriceFeed",type:"address"}],name:"setSecondaryPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_secondaryPriceFeed:"The address of the secondary price feed"},notice:"Set the secondary price feed to `_secondaryPriceFeed`"},"setSpreadBasisPoints(address,uint8)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint8",name:"_spreadBasisPoints",type:"uint8"}],name:"setSpreadBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spreadBasisPoints:"The spread basis points for the token",_token:"The token to set the spread basis points for"},notice:"Set the spread basis points for `_token` to `_spreadBasisPoints`"},"setSpreadThresholdBasisPoints(uint256)":{inputs:[{internalType:"uint256",name:"_spreadThresholdBasisPoints",type:"uint256"}],name:"setSpreadThresholdBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spreadThresholdBasisPoints:"The spread threshold basis points"},notice:"Set the spread threshold basis points"},"setTokenConfig(address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_priceDecimals",type:"uint256"},{internalType:"bool",name:"_isStrictStable",type:"bool"}],name:"setTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isStrictStable:"True if the token is a strict stablecoin, false otherwise",_priceDecimals:"The decimals of the price feed",_priceFeed:"The price feed address",_token:"The token address"},notice:"Set the token configurations variables for `_token`"},"setUseV2Pricing(bool)":{inputs:[{internalType:"bool",name:"_useV2Pricing",type:"bool"}],name:"setUseV2Pricing",outputs:[],stateMutability:"nonpayable",type:"function",params:{_useV2Pricing:"Whether to enable or disable the V2 pricing for the feed"},notice:"Enable or disable `_useV2Pricing` the price feed from using V2 pricing"},"spreadBasisPoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"spreadBasisPoints",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to their the spread basis points"},"spreadThresholdBasisPoints()":{inputs:[],name:"spreadThresholdBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Basis points for AMM price deviation allowance"},"strictStableTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"strictStableTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of strict stablecoins"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"useV2Pricing()":{inputs:[],name:"useV2Pricing",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"If the price feed can use v2 pricing"}}},"contracts/core/VaultUtils.sol:VaultUtils":{source:"contracts/core/VaultUtils.sol",name:"VaultUtils",title:"Vaporwave Vault Utils",details:"A utility contract to validate requests and calculate fees",constructor:{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"},{internalType:"contract IVlpManager",name:"_vlpManager",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in basis points calculations"},"FUNDING_RATE_PRECISION()":{inputs:[],name:"FUNDING_RATE_PRECISION",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in funding rate calculations"},"getAum(bool)":{inputs:[{internalType:"bool",name:"maximise",type:"bool"}],name:"getAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{maximise:"True to return the maximum AUM, false to return the minimum AUM"},returns:{_0:"The assets under management (AUM)"},notice:"Get the assets under management (AUM)"},"getBuyUsdFeeBasisPoints(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getBuyUsdFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The address of the token",_usdAmount:"The amount of usd to buy"},returns:{_0:"The basis points for the buy usd fee"},notice:"Get the basis points for the buy usd fee"},"getEntryFundingRate(address,address,bool)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"}],name:"getEntryFundingRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"The entry funding rate is the cumulative funding rate at the time of entry",params:{_collateralToken:"Address of the collateral token"},returns:{_0:"The entry funding rate"},notice:"Get the entry funding rate"},"getFeeBasisPoints(address,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdvDelta",type:"uint256"},{internalType:"uint256",name:"_feeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"bool",name:"_increment",type:"bool"}],name:"getFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getFundingFee(address,address,address,bool,uint256,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_entryFundingRate",type:"uint256"}],name:"getFundingFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_collateralToken:"The address of the collateral token",_entryFundingRate:"The entry funding rate",_size:"The size of the position"},returns:{_0:"The funding fee"},notice:"Get the funding fee"},"getPositionFee(address,address,address,bool,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"}],name:"getPositionFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_sizeDelta:"The change in the position size"},returns:{_0:"The position fee"},notice:"Get the position fee"},"getSellUsdFeeBasisPoints(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getSellUsdFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The address of the token",_usdAmount:"The amount of usd to sell"},returns:{_0:"The basis points for the sell usd fee"},notice:"Get the basis points for the sell usd fee"},"getSwapFeeBasisPoints(address,address,uint256)":{inputs:[{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getSwapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_tokenIn:"The address of the token to swap in",_tokenOut:"The address of the token to swap out",_usdAmount:"The amount to swap in usd"},returns:{_0:"The basis points for the swap fee"},notice:"Get the basis points for the swap fee"},"getTokenAum(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"maximise",type:"bool"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"The address of the token",maximise:"True to return the maximum AUM, false to return the minimum AUM"},returns:{_0:"The assets under management (AUM) in `_token`"},notice:"Get the assets under management (AUM) in `_token`"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateCumulativeFundingRate(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"updateCumulativeFundingRate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function",details:"Always returns true, included to satisfy the IVaultUtils interface"},"validateDecreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"},{internalType:"address",name:"",type:"address"}],name:"validateDecreasePosition",outputs:[],stateMutability:"view",type:"function",details:"Function does nothing, included to satisfy the IVaultUtils interface"},"validateIncreasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"}],name:"validateIncreasePosition",outputs:[],stateMutability:"view",type:"function",details:"Function does nothing, included to satisfy the IVaultUtils interface"},"validateLiquidation(address,address,address,bool,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"bool",name:"_raise",type:"bool"}],name:"validateLiquidation",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account to liquidate",_collateralToken:"The collateral token to liquidate",_indexToken:"The index token of the position",_isLong:"True if the position is long, false if the position is short",_raise:"True if checks should be performed against remaining collateral"},notice:"Validates a liquidation request, will revert if the request is invalid"},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The vault address"},"vlpManager()":{inputs:[],name:"vlpManager",outputs:[{internalType:"contract IVlpManager",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The vlp manager address"}}},"contracts/core/VlpManager.sol:VlpManager":{source:"contracts/core/VlpManager.sol",name:"VlpManager",title:"Vaporwave VLP Manager",constructor:{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_vlp",type:"address"},{internalType:"uint256",name:"_cooldownDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"aumInUsd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"vlpSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"usdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"mintAmount",type:"uint256"}],name:"AddLiquidity",type:"event",notice:"Emitted when liquidity is added"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"vlpAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"aumInUsd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"vlpSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"usdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"RemoveLiquidity",type:"event",notice:"Emitted when liquidity is removed"}},methods:{"MAX_COOLDOWN_DURATION()":{inputs:[],name:"MAX_COOLDOWN_DURATION",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"USD_DECIMALS()":{inputs:[],name:"USD_DECIMALS",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"addLiquidity(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minUsd",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to add to the VLP",_minUsd:"Minimum amount in USD to add to the VLP",_minVlp:"Minimum amount of VLP to add",_token:"Address of the token to add liquidity to"},notice:"Add liquidity to the VLP"},"addLiquidityForAccount(address,address,address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_fundingAccount",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minUsd",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"addLiquidityForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the liquidity account",_amount:"Amount of tokens to add to the VLP",_fundingAccount:"Address of the funding account",_minUsd:"Minimum amount in USD to add to the VLP",_minVlp:"Minimum amount of VLP to add",_token:"Address of the token to add liquidity to"},notice:"Add liquidity for `_account`"},"aumAddition()":{inputs:[],name:"aumAddition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"aumDeduction()":{inputs:[],name:"aumDeduction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cooldownDuration()":{inputs:[],name:"cooldownDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getAum(bool)":{inputs:[{internalType:"bool",name:"maximise",type:"bool"}],name:"getAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{maximise:"True if the maximum AUM should be returned, false otherwise"},returns:{_0:"AUM"},notice:"Get Assets Under Management(AUM)"},"getAums()":{inputs:[],name:"getAums",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function",returns:{_0:"Array with 2 values, min AUM and max AUm"},notice:"Get assets under management (AUM)"},"getTokenAum(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"inPrivateMode()":{inputs:[],name:"inPrivateMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handler addresses"},"lastAddedAt(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastAddedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of addresses to the time they last added liquidity"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeLiquidity(address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_minOut:"Minimum amount of tokens to remove from the VLP",_receiver:"Address to receive the withdrawn tokens",_tokenOut:"Address of the token to remove",_vlpAmount:"Amount of VLP to remove"},notice:"Remove liquidity from the VLP"},"removeLiquidityForAccount(address,address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"removeLiquidityForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_account:"Address of the liquidity account",_minOut:"Minimum amount of tokens to remove from the VLP",_receiver:"Address to receive the withdrawn tokens",_tokenOut:"Addrss of the token to remove",_vlpAmount:"Amount of VLP to remove"},notice:"Remove liquidity for a third-party account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAumAdjustment(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_aumAddition",type:"uint256"},{internalType:"uint256",name:"_aumDeduction",type:"uint256"}],name:"setAumAdjustment",outputs:[],stateMutability:"nonpayable",type:"function",params:{_aumAddition:"AUM addition",_aumDeduction:"AUM deduction"},notice:"Set the Assets Under Management (AUM) adjustment"},"setCooldownDuration(uint256)":{inputs:[{internalType:"uint256",name:"_cooldownDuration",type:"uint256"}],name:"setCooldownDuration",outputs:[],stateMutability:"nonpayable",type:"function",params:{_cooldownDuration:"Cooldown duration in seconds"},notice:"Set the cooldown duration"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"Address of the handler to set",_isActive:"True if the address is a handler, false otherwise"},notice:"Set the address of a handler"},"setInPrivateMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateMode",type:"bool"}],name:"setInPrivateMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateMode:"True if the VLP Manager is in private mode, false otherwise"},notice:"Set the inPrivateMode flag"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vault()":{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The vault address"},"vlp()":{inputs:[],name:"vlp",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"VWAVE LP token address"}}},"contracts/core/interfaces/IBasePositionManager.sol:IBasePositionManager":{source:"contracts/core/interfaces/IBasePositionManager.sol",name:"IBasePositionManager",notice:"Interface for BasePositionManager",events:{"DecreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"DecreasePositionReferral",type:"event"},"IncreasePositionReferral(address,uint256,uint256,bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"marginFeeBasisPoints",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"referralCode",type:"bytes32"},{indexed:!1,internalType:"address",name:"referrer",type:"address"}],name:"IncreasePositionReferral",type:"event"},"SetAdmin(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"SetAdmin",type:"event",params:{admin:"The new admin address"},notice:"Emitted when the admin address is set"},"SetDepositFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositFee",type:"uint256"}],name:"SetDepositFee",type:"event",params:{depositFee:"The new deposit fee"},notice:"Emitted when the deposit fee is set"},"SetIncreasePositionBufferBps(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"increasePositionBufferBps",type:"uint256"}],name:"SetIncreasePositionBufferBps",type:"event",params:{increasePositionBufferBps:"The new increase position buffer basis points"},notice:"Emitted when the increase position buffer basis points are set"},"SetMaxGlobalSizes(address[],uint256[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"longSizes",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"shortSizes",type:"uint256[]"}],name:"SetMaxGlobalSizes",type:"event",params:{longSizes:"The array of max long sizes",shortSizes:"The array of max short sizes",tokens:"The array of tokens"},notice:"Emitted when the max global long and short sizes are set"},"SetReferralStorage(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referralStorage",type:"address"}],name:"SetReferralStorage",type:"event",params:{referralStorage:"The new referral storage address"},notice:"Emitted when the referral storage address is set"},"WithdrawFees(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawFees",type:"event",params:{amount:"The amount withdrawn",receiver:"The receiver of the funds",token:"The token withdrawn"},notice:"Emitted when fees are withdrawn"}},methods:{"maxGlobalLongSizes(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"maxGlobalLongSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/core/interfaces/IOrderBook.sol:IOrderBook":{source:"contracts/core/interfaces/IOrderBook.sol",name:"IOrderBook",notice:"Interface for the OrderBook contract",events:{"CancelDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelDecreaseOrder",type:"event",notice:"Emitted when an decrease order is cancelled"},"CancelIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelIncreaseOrder",type:"event",notice:"Emitted when an increase order is cancelled"},"CancelSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CancelSwapOrder",type:"event",notice:"Emitted when an swap order is cancelled"},"CreateDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateDecreaseOrder",type:"event",notice:"Emitted when an decrease order is created"},"CreateIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateIncreaseOrder",type:"event",notice:"Emitted when an increase order is created"},"CreateSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"CreateSwapOrder",type:"event",notice:"Emitted when an swap order is created"},"ExecuteDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionPrice",type:"uint256"}],name:"ExecuteDecreaseOrder",type:"event",notice:"Emitted when an decrease order is executed"},"ExecuteIncreaseOrder(address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"purchaseToken",type:"address"},{indexed:!1,internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"executionPrice",type:"uint256"}],name:"ExecuteIncreaseOrder",type:"event",notice:"Emitted when an increase order is executed"},"ExecuteSwapOrder(address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"ExecuteSwapOrder",type:"event",notice:"Emitted when an swap order is executed"},"Initialize(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"router",type:"address"},{indexed:!1,internalType:"address",name:"vault",type:"address"},{indexed:!1,internalType:"address",name:"weth",type:"address"},{indexed:!1,internalType:"uint256",name:"minExecutionFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minPurchaseTokenAmountUsd",type:"uint256"}],name:"Initialize",type:"event",notice:"Emitted when the contract is initialized"},"UpdateDecreaseOrder(address,uint256,address,uint256,address,uint256,bool,uint256,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"collateralDelta",type:"uint256"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"}],name:"UpdateDecreaseOrder",type:"event",notice:"Emitted when an decrease order is updated"},"UpdateIncreaseOrder(address,uint256,address,address,bool,uint256,uint256,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"orderIndex",type:"uint256"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"indexToken",type:"address"},{indexed:!1,internalType:"bool",name:"isLong",type:"bool"},{indexed:!1,internalType:"uint256",name:"sizeDelta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerPrice",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"}],name:"UpdateIncreaseOrder",type:"event",notice:"Emitted when an increase order is updated"},"UpdateMinExecutionFee(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minExecutionFee",type:"uint256"}],name:"UpdateMinExecutionFee",type:"event",params:{minExecutionFee:"The new minimum execution fee"},notice:"Emitted when the minimum execution fee is updated"},"UpdateMinPurchaseTokenAmountUsd(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minPurchaseTokenAmountUsd",type:"uint256"}],name:"UpdateMinPurchaseTokenAmountUsd",type:"event",params:{minPurchaseTokenAmountUsd:"The new minimum purchase token amount in USD"},notice:"Emitted when the minimum purchase token amount in USD is updated"},"UpdateSwapOrder(address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"ordexIndex",type:"uint256"},{indexed:!1,internalType:"address[]",name:"path",type:"address[]"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"triggerRatio",type:"uint256"},{indexed:!1,internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{indexed:!1,internalType:"bool",name:"shouldUnwrap",type:"bool"},{indexed:!1,internalType:"uint256",name:"executionFee",type:"uint256"}],name:"UpdateSwapOrder",type:"event",notice:"Emitted when an swap order is updated"}},methods:{"executeDecreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_address",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeDecreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `ExecuteDecreaseOrder` event",params:{_address:"The account that owns the decrease order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the decrease order"},notice:"Execute a decrease order"},"executeIncreaseOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_address",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeIncreaseOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an `ExecuteIncreaseOrder` event",params:{_address:"The account that owns the order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the increase order"},notice:"Execute an increase order"},"executeSwapOrder(address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"},{internalType:"address payable",name:"_feeReceiver",type:"address"}],name:"executeSwapOrder",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits an event `ExecuteSwapOrder`",params:{_account:"The account that created the swap order",_feeReceiver:"The address to receive the fees",_orderIndex:"The index of the order to execute"},notice:"Execute a swap order"},"getDecreaseOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getDecreaseOrder",outputs:[{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralDelta",type:"uint256"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account that created the order",_orderIndex:"The index of the order to get"},notice:"Get a decrease order"},"getIncreaseOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getIncreaseOrder",outputs:[{internalType:"address",name:"purchaseToken",type:"address"},{internalType:"uint256",name:"purchaseTokenAmount",type:"uint256"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"uint256",name:"sizeDelta",type:"uint256"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account that created the order",_orderIndex:"The index of the order to get"},notice:"Get an increase order"},"getSwapOrder(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_orderIndex",type:"uint256"}],name:"getSwapOrder",outputs:[{internalType:"address",name:"path0",type:"address"},{internalType:"address",name:"path1",type:"address"},{internalType:"address",name:"path2",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minOut",type:"uint256"},{internalType:"uint256",name:"triggerRatio",type:"uint256"},{internalType:"bool",name:"triggerAboveThreshold",type:"bool"},{internalType:"bool",name:"shouldUnwrap",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account address",_orderIndex:"The index of the order"},notice:"Get swap order"}}},"contracts/core/interfaces/IPositionRouter.sol:IPositionRouter":{source:"contracts/core/interfaces/IPositionRouter.sol",name:"IPositionRouter",notice:"Interface for the PositionRouter",methods:{"executeDecreasePositions(uint256,address)":{inputs:[{internalType:"uint256",name:"_count",type:"uint256"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeDecreasePositions",outputs:[],stateMutability:"nonpayable",type:"function"},"executeIncreasePositions(uint256,address)":{inputs:[{internalType:"uint256",name:"_count",type:"uint256"},{internalType:"address payable",name:"_executionFeeReceiver",type:"address"}],name:"executeIncreasePositions",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/core/interfaces/IRouter.sol:IRouter":{source:"contracts/core/interfaces/IRouter.sol",name:"IRouter",notice:"Interface for the Router",methods:{"addPlugin(address)":{inputs:[{internalType:"address",name:"_plugin",type:"address"}],name:"addPlugin",outputs:[],stateMutability:"nonpayable",type:"function"},"pluginDecreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"}],name:"pluginDecreasePosition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"pluginIncreasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"pluginIncreasePosition",outputs:[],stateMutability:"nonpayable",type:"function"},"pluginTransfer(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"pluginTransfer",outputs:[],stateMutability:"nonpayable",type:"function"},"swap(address[],uint256,uint256,address)":{inputs:[{internalType:"address[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/core/interfaces/IVault.sol:IVault":{source:"contracts/core/interfaces/IVault.sol",name:"IVault",notice:"Interface for the Vault contract",methods:{"allAllowlistedTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allAllowlistedTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"allAllowlistedTokensLength()":{inputs:[],name:"allAllowlistedTokensLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowlistedTokenCount()":{inputs:[],name:"allowlistedTokenCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowlistedTokens(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"allowlistedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"approvedRouters(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"approvedRouters",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"bufferAmounts(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"bufferAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buy(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"buy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"cumulativeFundingRates(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"cumulativeFundingRates",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"}],name:"decreasePosition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"directPoolDeposit(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"directPoolDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},"feeReserves(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"feeReserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"fundingInterval()":{inputs:[],name:"fundingInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"fundingRateFactor()":{inputs:[],name:"fundingRateFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getDelta(address,uint256,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_averagePrice",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_lastIncreasedTime",type:"uint256"}],name:"getDelta",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getFeeBasisPoints(address,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdDelta",type:"uint256"},{internalType:"uint256",name:"_feeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"bool",name:"_increment",type:"bool"}],name:"getFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getMaxPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getMaxPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getMinPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getMinPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getNextFundingRate(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getNextFundingRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPosition(address,address,address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getPosition",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRedemptionAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getRedemptionAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTargetUsdAmount(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getTargetUsdAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenAum(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalShortAveragePrices(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"globalShortAveragePrices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalShortSizes(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"globalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"guaranteedUsd(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"guaranteedUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hasDynamicFees()":{inputs:[],name:"hasDynamicFees",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"inPrivateLiquidationMode()":{inputs:[],name:"inPrivateLiquidationMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"increasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"increasePosition",outputs:[],stateMutability:"nonpayable",type:"function"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isLeverageEnabled()":{inputs:[],name:"isLeverageEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isLiquidator(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"isLiquidator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"isManager",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isSwapEnabled()":{inputs:[],name:"isSwapEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundingTimes(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"lastFundingTimes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"liquidatePosition(address,address,address,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_feeReceiver",type:"address"}],name:"liquidatePosition",outputs:[],stateMutability:"nonpayable",type:"function"},"liquidationFeeUsd()":{inputs:[],name:"liquidationFeeUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"marginFeeBasisPoints()":{inputs:[],name:"marginFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxGasPrice()":{inputs:[],name:"maxGasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxGlobalShortSizes(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"maxGlobalShortSizes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxLeverage()":{inputs:[],name:"maxLeverage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUsdAmounts(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"maxUsdAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minProfitBasisPoints(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"minProfitBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minProfitTime()":{inputs:[],name:"minProfitTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mintBurnFeeBasisPoints()":{inputs:[],name:"mintBurnFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"poolAmounts(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"poolAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceFeed()":{inputs:[],name:"priceFeed",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"reservedAmounts(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"reservedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"sell(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"sell",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"setBufferAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setBufferAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"setFees(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableTaxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_mintBurnFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_swapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableSwapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_marginFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_liquidationFeeUsd",type:"uint256"},{internalType:"uint256",name:"_minProfitTime",type:"uint256"},{internalType:"bool",name:"_hasDynamicFees",type:"bool"}],name:"setFees",outputs:[],stateMutability:"nonpayable",type:"function"},"setFundingRate(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_fundingInterval",type:"uint256"},{internalType:"uint256",name:"_fundingRateFactor",type:"uint256"},{internalType:"uint256",name:"_stableFundingRateFactor",type:"uint256"}],name:"setFundingRate",outputs:[],stateMutability:"nonpayable",type:"function"},"setInPrivateLiquidationMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateLiquidationMode",type:"bool"}],name:"setInPrivateLiquidationMode",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsLeverageEnabled(bool)":{inputs:[{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsSwapEnabled(bool)":{inputs:[{internalType:"bool",name:"_isSwapEnabled",type:"bool"}],name:"setIsSwapEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setLiquidator(address,bool)":{inputs:[{internalType:"address",name:"_liquidator",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setLiquidator",outputs:[],stateMutability:"nonpayable",type:"function"},"setManager(address,bool)":{inputs:[{internalType:"address",name:"_manager",type:"address"},{internalType:"bool",name:"_isManager",type:"bool"}],name:"setManager",outputs:[],stateMutability:"nonpayable",type:"function"},"setMaxGasPrice(uint256)":{inputs:[{internalType:"uint256",name:"_maxGasPrice",type:"uint256"}],name:"setMaxGasPrice",outputs:[],stateMutability:"nonpayable",type:"function"},"setMaxGlobalShortSize(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setMaxGlobalShortSize",outputs:[],stateMutability:"nonpayable",type:"function"},"setMaxLeverage(uint256)":{inputs:[{internalType:"uint256",name:"_maxLeverage",type:"uint256"}],name:"setMaxLeverage",outputs:[],stateMutability:"nonpayable",type:"function"},"setMaxUsdAmount(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setMaxUsdAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceFeed(address)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function"},"setTokenConfig(address,uint256,uint256,uint256,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"},{internalType:"uint256",name:"_redemptionBps",type:"uint256"},{internalType:"uint256",name:"_minProfitBps",type:"uint256"},{internalType:"bool",name:"_isStable",type:"bool"},{internalType:"bool",name:"_isShortable",type:"bool"}],name:"setTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function"},"setVaultUtils(address)":{inputs:[{internalType:"contract IVaultUtils",name:"_vaultUtils",type:"address"}],name:"setVaultUtils",outputs:[],stateMutability:"nonpayable",type:"function"},"shortableTokens(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"shortableTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"stableFundingRateFactor()":{inputs:[],name:"stableFundingRateFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stableSwapFeeBasisPoints()":{inputs:[],name:"stableSwapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stableTaxBasisPoints()":{inputs:[],name:"stableTaxBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stableTokens(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"stableTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"swap(address,address,address)":{inputs:[{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapFeeBasisPoints()":{inputs:[],name:"swapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"taxBasisPoints()":{inputs:[],name:"taxBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenBalances(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"tokenBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDecimals(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"tokenDecimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenToUsdMin(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"tokenToUsdMin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenWeights(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"tokenWeights",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalTokenWeights()":{inputs:[],name:"totalTokenWeights",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"withdrawFees(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/core/interfaces/IVaultPriceFeed.sol:IVaultPriceFeed":{source:"contracts/core/interfaces/IVaultPriceFeed.sol",name:"IVaultPriceFeed",title:"Vaporwave Vault Price Feed Interface",notice:"Interface for the VaultPriceFeed",methods:{"adjustmentBasisPoints(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"adjustmentBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getAmmPrice(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"getAmmPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPrice(address,bool,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"},{internalType:"bool",name:"_includeAmmPrice",type:"bool"}],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPrimaryPrice(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getPrimaryPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isAdjustmentAdditive(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"isAdjustmentAdditive",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"setAdjustment(address,bool,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_isAdditive",type:"bool"},{internalType:"uint256",name:"_adjustmentBps",type:"uint256"}],name:"setAdjustment",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsAmmEnabled(bool)":{inputs:[{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsAmmEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsSecondaryPriceEnabled(bool)":{inputs:[{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsSecondaryPriceEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setMaxStrictPriceDeviation(uint256)":{inputs:[{internalType:"uint256",name:"_maxStrictPriceDeviation",type:"uint256"}],name:"setMaxStrictPriceDeviation",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceSampleSpace(uint256)":{inputs:[{internalType:"uint256",name:"_priceSampleSpace",type:"uint256"}],name:"setPriceSampleSpace",outputs:[],stateMutability:"nonpayable",type:"function"},"setSpreadBasisPoints(address,uint8)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint8",name:"_spreadBasisPoints",type:"uint8"}],name:"setSpreadBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function"},"setSpreadThresholdBasisPoints(uint256)":{inputs:[{internalType:"uint256",name:"_spreadThresholdBasisPoints",type:"uint256"}],name:"setSpreadThresholdBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function"},"setTokenConfig(address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_priceDecimals",type:"uint256"},{internalType:"bool",name:"_isStrictStable",type:"bool"}],name:"setTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function"},"setUseV2Pricing(bool)":{inputs:[{internalType:"bool",name:"_useV2Pricing",type:"bool"}],name:"setUseV2Pricing",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/core/interfaces/IVaultUtils.sol:IVaultUtils":{source:"contracts/core/interfaces/IVaultUtils.sol",name:"IVaultUtils",notice:"Interface for the VaultUtils",methods:{"getAum(bool)":{inputs:[{internalType:"bool",name:"maximise",type:"bool"}],name:"getAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getBuyUsdFeeBasisPoints(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getBuyUsdFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getEntryFundingRate(address,address,bool)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"getEntryFundingRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getFeeBasisPoints(address,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdvDelta",type:"uint256"},{internalType:"uint256",name:"_feeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"bool",name:"_increment",type:"bool"}],name:"getFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getFundingFee(address,address,address,bool,uint256,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_size",type:"uint256"},{internalType:"uint256",name:"_entryFundingRate",type:"uint256"}],name:"getFundingFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPositionFee(address,address,address,bool,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"}],name:"getPositionFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellUsdFeeBasisPoints(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"}],name:"getSellUsdFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSwapFeeBasisPoints(address,address,uint256)":{inputs:[{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_usdvAmount",type:"uint256"}],name:"getSwapFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenAum(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"maximise",type:"bool"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateCumulativeFundingRate(address,address)":{inputs:[{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"}],name:"updateCumulativeFundingRate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"validateDecreasePosition(address,address,address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_collateralDelta",type:"uint256"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"address",name:"_receiver",type:"address"}],name:"validateDecreasePosition",outputs:[],stateMutability:"view",type:"function"},"validateIncreasePosition(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"uint256",name:"_sizeDelta",type:"uint256"},{internalType:"bool",name:"_isLong",type:"bool"}],name:"validateIncreasePosition",outputs:[],stateMutability:"view",type:"function"},"validateLiquidation(address,address,address,bool,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_collateralToken",type:"address"},{internalType:"address",name:"_indexToken",type:"address"},{internalType:"bool",name:"_isLong",type:"bool"},{internalType:"bool",name:"_raise",type:"bool"}],name:"validateLiquidation",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/core/interfaces/IVlpManager.sol:IVlpManager":{source:"contracts/core/interfaces/IVlpManager.sol",name:"IVlpManager",notice:"Interface for the VLP Manager",methods:{"addLiquidity(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minUsdv",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLiquidityForAccount(address,address,address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_fundingAccount",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minUsdv",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"addLiquidityForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"cooldownDuration()":{inputs:[],name:"cooldownDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getAum(bool)":{inputs:[{internalType:"bool",name:"maximise",type:"bool"}],name:"getAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenAum(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"maximise",type:"bool"}],name:"getTokenAum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastAddedAt(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"lastAddedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidity(address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityForAccount(address,address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"removeLiquidityForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/masterchef/VaporwaveChef.sol:VaporwaveMasterChef":{source:"contracts/masterchef/VaporwaveChef.sol",name:"VaporwaveMasterChef",title:"Vaporwave MasterChef",author:"Alta Web3 Labs",notice:"This contract is used to distribute rewards to Vaporwave Stakers <3 Aurora",constructor:{inputs:[{internalType:"uint256",name:"_startBlock",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Deposit(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event",notice:"Emitted when rewards are depositted"},"DistributeRewards(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"rewardToken",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DistributeRewards",type:"event",notice:"Emitted when rewards are distributed"},"EmergencyWithdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event",notice:"Emitted when rewards are depositted"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Referral(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"referrer",type:"address"},{indexed:!0,internalType:"address",name:"referral",type:"address"}],name:"Referral",type:"event",notice:"Emitted when a referral is recorded"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event",notice:"Emitted when rewards are depositted"}},stateVariables:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"The divisor for basis points calculations (10_000)",returns:{_0:"The divisor for basis points calculations (10_000)"},notice:"Divisor for basis points calculations"},"MAX_DEPOSIT_FEE_BP()":{inputs:[],name:"MAX_DEPOSIT_FEE_BP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"The Max Deposit Fee BP (10,000 = 10%)",returns:{_0:"The Max Deposit Fee BP (10,000 = 10%)"},notice:"The Max Deposit Fee BP"},"startBlock()":{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"The block number this contract launched",returns:{_0:"The block number this contract launched"},notice:"The block number this contract launched"},"totalAllocPoint()":{inputs:[],name:"totalAllocPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"The total allocation points",returns:{_0:"The total allocation points"},notice:"Total allocation points. Must be the sum of all allocation points in all pools"}},methods:{"accRewardsPerShare(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"accRewardsPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of pool rewards per share by token"},"add(uint256,address,uint256,bool)":{inputs:[{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"address",name:"_asset",type:"address"},{internalType:"uint256",name:"_depositFeeBP",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function",details:"DO NOT add the same LP token more than once. Rewards will be messed up if you do.",params:{_allocPoint:"The allocation point of the LP token.",_asset:"The LP token address.",_depositFeeBP:"The deposit fee in basis points.",_withUpdate:"True if all pools should be updated, false otherwise"},notice:"Add a new lp to the pool"},"deposit(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_referrer",type:"address"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `deposit` event",params:{_amount:"The amount of LP tokens to deposit",_pid:"The ID of the pool to deposit to",_referrer:"The referrer address"},notice:"Deposit LP tokens to VaporwaveChef for WETH allocation"},"distributeRewards(address,uint256)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"distributeRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"This function can be called for any token that is accepted as a reward",notice:"Deposit `_rewardToken` tokens to be distributed as rewards to pool lp shares"},"emergencyWithdraw(uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"Withdraw without caring about rewards. EMERGENCY ONLY",params:{_pid:"The ID of the pool to withdraw from"},notice:"Emergency withdrawal of LP tokens from MasterChef"},"feeAddress()":{inputs:[],name:"feeAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Address to receive fees"},"isRewardToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isRewardToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of reward tokens"},"lastDistributionTime(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastDistributionTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of last distribution times for each reward token"},"massUpdatePools()":{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function",details:"Loops through the poolInfo array. Be careful of gas spending!Will revert if gas exceeds block limit;",notice:"Update reward variables for all pools"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pendingRewards(uint256,address)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingRewards",outputs:[{internalType:"uint256[]",name:"userPendingRewards",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_pid:"The pool id",_user:"The user's address"},returns:{userPendingRewards:"An array of pending rewards for each reward token"},notice:"Get the user's current pending WETH"},"poolExistence(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolExistence",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of tokens that have existing pools"},"poolIdForLpAddress(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolIdForLpAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of tokens to pool ID"},"poolInfo(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolInfo",outputs:[{internalType:"contract IERC20",name:"asset",type:"address"},{internalType:"uint256",name:"allocPoint",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"depositFeeBP",type:"uint256"}],stateMutability:"view",type:"function",notice:"Array of information for each pool"},"poolLength()":{inputs:[],name:"poolLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The length of the poolInfo array"},notice:"Get the length of the poolInfo array"},"referrals(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"referrals",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Mapping of users to their referrals"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of addresses of reward tokens"},"set(uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function"},"setStartBlock(uint256)":{inputs:[{internalType:"uint256",name:"_startBlock",type:"uint256"}],name:"setStartBlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{_startBlock:"The new start block"},notice:"Update the start block to `_startBlock`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unclaimedRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"unclaimedRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of unclaimed reward tokens"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_pid:"The ID of the pool to update"},notice:"Update reward variables of the pool with ID `_pid` to be up-to-date"},"userInfo(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function",notice:"Info of each user that stakes LP tokens"},"userRewardDebt(uint256,address,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"userRewardDebt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user reward debt by token"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"Emits a `Withdraw` event",params:{_amount:"The amount of LP tokens to withdraw",_pid:"The ID of the pool to withdraw from"},notice:"Withdraw LP tokens from MasterChef"}}},"contracts/masterchef/interfaces/IVaporwaveChef.sol:IVaporwaveMasterChef":{source:"contracts/masterchef/interfaces/IVaporwaveChef.sol",name:"IVaporwaveMasterChef",title:"Vaporwave MasterChef Interface",notice:"Interface for Vaporwave MasterChef",events:{"Deposit(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event",params:{amount:"The amount withdrawn",pid:"The pid",user:"The address of the user"},notice:"Emitted when rewards are depositted"},"DistributeRewards(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"rewardToken",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DistributeRewards",type:"event",params:{amount:"The amount of rewards distributed",rewardToken:"The reward token"},notice:"Emitted when rewards are distributed"},"EmergencyWithdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event",params:{amount:"The amount withdrawn",pid:"The pid",user:"The address of the user"},notice:"Emitted when rewards are depositted"},"Referral(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"referrer",type:"address"},{indexed:!0,internalType:"address",name:"referral",type:"address"}],name:"Referral",type:"event",params:{referral:"The address of the referral",referrer:"The address of the referrer"},notice:"Emitted when a referral is recorded"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event",params:{amount:"The amount withdrawn",pid:"The pid",user:"The address of the user"},notice:"Emitted when rewards are depositted"}},methods:{"deposit(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_referrer",type:"address"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"distributeRewards(address,uint256)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"distributeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"emergencyWithdraw(uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},"pendingRewards(uint256,address)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingRewards",outputs:[{internalType:"uint256[]",name:"userPendingRewards",type:"uint256[]"}],stateMutability:"view",type:"function"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/oracle/FastPriceEvents.sol:FastPriceEvents":{source:"contracts/oracle/FastPriceEvents.sol",name:"FastPriceEvents",title:"Vaporwave Fast Price Events Oracle",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PriceUpdate(address,uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"address",name:"priceFeed",type:"address"}],name:"PriceUpdate",type:"event"}},methods:{"emitPriceEvent(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"emitPriceEvent",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by a price feed",params:{_price:"Price of the token",_token:"Address of the token"},notice:"Emit a price event"},"isPriceFeed(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isPriceFeed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setIsPriceFeed(address,bool)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"bool",name:"_isPriceFeed",type:"bool"}],name:"setIsPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isPriceFeed:"True if the address is a price feed, false otherwise",_priceFeed:"Address of the price feed to mark"},notice:"Mark an address as a price feed"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/oracle/FastPriceFeed.sol:FastPriceFeed":{source:"contracts/oracle/FastPriceFeed.sol",name:"FastPriceFeed",title:"Vaporwave Fast Price Feed",constructor:{inputs:[{internalType:"uint256",name:"_priceDuration",type:"uint256"},{internalType:"uint256",name:"_minBlockInterval",type:"uint256"},{internalType:"uint256",name:"_maxDeviationBasisPoints",type:"uint256"},{internalType:"address",name:"_fastPriceEvents",type:"address"},{internalType:"address",name:"_tokenManager",type:"address"},{internalType:"address",name:"_positionRouter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DisableFastPrice(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"signer",type:"address"}],name:"DisableFastPrice",type:"event",params:{signer:"The address of the signer"},notice:"Emitted when a vote is cast to disable the fast price"},"EnableFastPrice(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"signer",type:"address"}],name:"EnableFastPrice",type:"event",params:{signer:"The address of the signer"},notice:"Emitted when a vote is cast to enable the fast price"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in basis points calculations"},"MAX_PRICE_DURATION()":{inputs:[],name:"MAX_PRICE_DURATION",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The max price duration is 30 minutes (1800 seconds)"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"disableFastPrice()":{inputs:[],name:"disableFastPrice",outputs:[],stateMutability:"nonpayable",type:"function"},"disableFastPriceVoteCount()":{inputs:[],name:"disableFastPriceVoteCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The disable fast price vote counter"},"disableFastPriceVotes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"disableFastPriceVotes",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of signer's vote for Fast Price"},"enableFastPrice()":{inputs:[],name:"enableFastPrice",outputs:[],stateMutability:"nonpayable",type:"function"},"fastPriceEvents()":{inputs:[],name:"fastPriceEvents",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The fast price events contract address"},"favorFastPrice()":{inputs:[],name:"favorFastPrice",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getPrice(address,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_refPrice",type:"uint256"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(uint256,address[],address[])":{inputs:[{internalType:"uint256",name:"_minAuthorizations",type:"uint256"},{internalType:"address[]",name:"_signers",type:"address[]"},{internalType:"address[]",name:"_updaters",type:"address[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract is initialized"},"isSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of signers"},"isSpreadEnabled()":{inputs:[],name:"isSpreadEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the feed is spread enabled"},"isUpdater(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isUpdater",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of updaters"},"lastUpdatedAt()":{inputs:[],name:"lastUpdatedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The timestamp of the last price update"},"lastUpdatedBlock()":{inputs:[],name:"lastUpdatedBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The block number of the last price update"},"maxDeviationBasisPoints()":{inputs:[],name:"maxDeviationBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"max deviation from primary price"},"maxTimeDeviation()":{inputs:[],name:"maxTimeDeviation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum deviation for the update timestamp from the current timestamp"},"minAuthorizations()":{inputs:[],name:"minAuthorizations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum authorizations to disable the fast price feed"},"minBlockInterval()":{inputs:[],name:"minBlockInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum blocks between price updates"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"positionRouter()":{inputs:[],name:"positionRouter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The position router address"},"priceDuration()":{inputs:[],name:"priceDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The amount of time that the price remains valid (in seconds)"},"prices(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"prices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token prices"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCompactedPrices(uint256[],uint256)":{inputs:[{internalType:"uint256[]",name:"_priceBitArray",type:"uint256[]"},{internalType:"uint256",name:"_timestamp",type:"uint256"}],name:"setCompactedPrices",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceBitArray:"The new compacted prices array",_timestamp:"The timestamp of the prices"},notice:"Set the compacted prices"},"setFastPriceEvents(address)":{inputs:[{internalType:"address",name:"_fastPriceEvents",type:"address"}],name:"setFastPriceEvents",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fastPriceEvents:"The new fast price events address"},notice:"Set the fast price events address to `_fastPriceEvents`"},"setIsSpreadEnabled(bool)":{inputs:[{internalType:"bool",name:"_isSpreadEnabled",type:"bool"}],name:"setIsSpreadEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isSpreadEnabled:"True if the spread is enabled, false otherwise"},notice:"Set the isSpreadEnabled variable to `_isSpreadEnabled`"},"setLastUpdatedAt(uint256)":{inputs:[{internalType:"uint256",name:"_lastUpdatedAt",type:"uint256"}],name:"setLastUpdatedAt",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lastUpdatedAt:"The new lastUpdatedAt value"},notice:"Set the lastUpdatedAt variable to `_lastUpdatedAt`"},"setMaxDeviationBasisPoints(uint256)":{inputs:[{internalType:"uint256",name:"_maxDeviationBasisPoints",type:"uint256"}],name:"setMaxDeviationBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxDeviationBasisPoints:"The new max deviation from the primary price"},notice:"Set the max deviation from the primary price to `_maxDeviationBasisPoints`"},"setMaxTimeDeviation(uint256)":{inputs:[{internalType:"uint256",name:"_maxTimeDeviation",type:"uint256"}],name:"setMaxTimeDeviation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxTimeDeviation:"The new max time deviation"},notice:"Set the max time deviation from the block timestamp to `_maxTimeDeviation`"},"setMinAuthorizations(uint256)":{inputs:[{internalType:"uint256",name:"_minAuthorizations",type:"uint256"}],name:"setMinAuthorizations",outputs:[],stateMutability:"nonpayable",type:"function",params:{_minAuthorizations:"The new minimum authorizations"},notice:"Set the minimum authorizations to disable the fast price to `_minAuthorizations`"},"setMinBlockInterval(uint256)":{inputs:[{internalType:"uint256",name:"_minBlockInterval",type:"uint256"}],name:"setMinBlockInterval",outputs:[],stateMutability:"nonpayable",type:"function",params:{_minBlockInterval:"The new minimum block interval"},notice:"Set the minimum block interval to `_minBlockInterval`"},"setPriceDuration(uint256)":{inputs:[{internalType:"uint256",name:"_priceDuration",type:"uint256"}],name:"setPriceDuration",outputs:[],stateMutability:"nonpayable",type:"function",details:"The price duration must be less than or equal to the max price duration",params:{_priceDuration:"The new price duration"},notice:"Set the price duration to `_priceDuration`"},"setPrices(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"},{internalType:"uint256[]",name:"_prices",type:"uint256[]"},{internalType:"uint256",name:"_timestamp",type:"uint256"}],name:"setPrices",outputs:[],stateMutability:"nonpayable",type:"function",params:{_prices:"The array of prices",_timestamp:"The timestamp of the prices",_tokens:"The array of tokens"},notice:"Set the token prices"},"setPricesWithBits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_priceBits",type:"uint256"},{internalType:"uint256",name:"_timestamp",type:"uint256"}],name:"setPricesWithBits",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceBits:"The price bits",_timestamp:"The timestamp of the update"},notice:"Set the prices with bits"},"setPricesWithBitsAndExecute(uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_priceBits",type:"uint256"},{internalType:"uint256",name:"_timestamp",type:"uint256"},{internalType:"uint256",name:"_endIndexForIncreasePositions",type:"uint256"},{internalType:"uint256",name:"_endIndexForDecreasePositions",type:"uint256"}],name:"setPricesWithBitsAndExecute",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set"},"setSigner(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setSigner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the signer",_isActive:"True if the signer is active, false otherwise"},notice:"Set `_account` as a signer: `_isActive`"},"setTokenManager(address)":{inputs:[{internalType:"address",name:"_tokenManager",type:"address"}],name:"setTokenManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenManager:"The new token manager address"},notice:"Set the token manager to `_tokenManager`"},"setTokens(address[],uint256[])":{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"},{internalType:"uint256[]",name:"_tokenPrecisions",type:"uint256[]"}],name:"setTokens",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenPrecisions:"The new tokenPrecisions array",_tokens:"The new tokens array"},notice:"Set the tokens and tokenPrecisions arrays"},"setUpdater(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setUpdater",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the updater",_isActive:"True if the updater is active, false otherwise"},notice:"Set `_account` as an updater: `_isActive`"},"setVolBasisPoints(uint256)":{inputs:[{internalType:"uint256",name:"_volBasisPoints",type:"uint256"}],name:"setVolBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function",params:{_volBasisPoints:"The new volatility basis points"},notice:"Set the volatility basis points to `_volBasisPoints`"},"tokenManager()":{inputs:[],name:"tokenManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The token manager address"},"tokenPrecisions(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenPrecisions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"volBasisPoints()":{inputs:[],name:"volBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"volatility basis points"}}},"contracts/oracle/PriceFeed.sol:PriceFeed":{source:"contracts/oracle/PriceFeed.sol",name:"PriceFeed",title:"Vaporwave Price Feed",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"aggregator()":{inputs:[],name:"aggregator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"answer()":{inputs:[],name:"answer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"answers(uint80)":{inputs:[{internalType:"uint80",name:"",type:"uint80"}],name:"answers",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"description()":{inputs:[],name:"description",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getRoundData(uint80)":{inputs:[{internalType:"uint80",name:"_roundId",type:"uint80"}],name:"getRoundData",outputs:[{internalType:"uint80",name:"",type:"uint80"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function",notice:"Get the round datd for id `_roundId`"},"isAdmin(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isAdmin",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"latestAnswer()":{inputs:[],name:"latestAnswer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function",returns:{_0:"The latest answer"},notice:"Get the latest answer"},"latestRound()":{inputs:[],name:"latestRound",outputs:[{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function",returns:{_0:"The latest round"},notice:"Get the latest round"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"roundId()":{inputs:[],name:"roundId",outputs:[{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function"},"setAdmin(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isAdmin",type:"bool"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to set as admin",_isAdmin:"True/false if the account is an admin"},notice:"Set `_account` as an admin true/false: _isAdmin"},"setLatestAnswer(int256)":{inputs:[{internalType:"int256",name:"_answer",type:"int256"}],name:"setLatestAnswer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_answer:"The new answer"},notice:"Set the latest answer to `_answer`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/oracle/interfaces/IChainlinkFlags.sol:IChainlinkFlags":{source:"contracts/oracle/interfaces/IChainlinkFlags.sol",name:"IChainlinkFlags",methods:{"getFlag(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"getFlag",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/oracle/interfaces/IFastPriceEvents.sol:IFastPriceEvents":{source:"contracts/oracle/interfaces/IFastPriceEvents.sol",name:"IFastPriceEvents",methods:{"emitPriceEvent(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"emitPriceEvent",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/oracle/interfaces/IFastPriceFeed.sol:IFastPriceFeed":{source:"contracts/oracle/interfaces/IFastPriceFeed.sol",name:"IFastPriceFeed",methods:{"lastUpdatedAt()":{inputs:[],name:"lastUpdatedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastUpdatedBlock()":{inputs:[],name:"lastUpdatedBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setIsSpreadEnabled(bool)":{inputs:[{internalType:"bool",name:"_isSpreadEnabled",type:"bool"}],name:"setIsSpreadEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setSigner(address,bool)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setSigner",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/oracle/interfaces/IPriceFeed.sol:IPriceFeed":{source:"contracts/oracle/interfaces/IPriceFeed.sol",name:"IPriceFeed",methods:{"aggregator()":{inputs:[],name:"aggregator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"description()":{inputs:[],name:"description",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getRoundData(uint80)":{inputs:[{internalType:"uint80",name:"roundId",type:"uint80"}],name:"getRoundData",outputs:[{internalType:"uint80",name:"",type:"uint80"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function"},"latestAnswer()":{inputs:[],name:"latestAnswer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"latestRound()":{inputs:[],name:"latestRound",outputs:[{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function"}}},"contracts/oracle/interfaces/ISecondaryPriceFeed.sol:ISecondaryPriceFeed":{source:"contracts/oracle/interfaces/ISecondaryPriceFeed.sol",name:"ISecondaryPriceFeed",methods:{"getPrice(address,uint256,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_referencePrice",type:"uint256"},{internalType:"bool",name:"_maximise",type:"bool"}],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/peripherals/BatchSender.sol:BatchSender":{source:"contracts/peripherals/BatchSender.sol",name:"BatchSender",title:"Vaporwave Batch Sender",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"BatchSend(uint256,address,address[],uint256[])":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"typeId",type:"uint256"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address[]",name:"accounts",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"amounts",type:"uint256[]"}],name:"BatchSend",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"send(address,address[],uint256[])":{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"address[]",name:"_accounts",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"send",outputs:[],stateMutability:"nonpayable",type:"function",params:{_accounts:"The addresses of the accounts to send to",_amounts:"The amounts to send to each account",_token:"The address of the token contract"},notice:"Send batch of tokens"},"sendAndEmit(address,address[],uint256[],uint256)":{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"address[]",name:"_accounts",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"uint256",name:"_typeId",type:"uint256"}],name:"sendAndEmit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_accounts:"The addresses of the accounts to send to",_amounts:"The amounts to send to each account",_token:"The address of the token contract",_typeId:"The typeId of the batch"},notice:"Send batch of tokens and emit a BatchSend event"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"Whether to add or remove the account as a handler"},notice:"Set Handler"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/peripherals/OrderBookReader.sol:OrderBookReader":{source:"contracts/peripherals/OrderBookReader.sol",name:"OrderBookReader",methods:{"getDecreaseOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getDecreaseOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getIncreaseOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getIncreaseOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getSwapOrders(address,address,uint256[])":{inputs:[{internalType:"address payable",name:"_orderBookAddress",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256[]",name:"_indices",type:"uint256[]"}],name:"getSwapOrders",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"}}},"contracts/peripherals/Reader.sol:Reader":{source:"contracts/peripherals/Reader.sol",name:"Reader",title:"Vaporwave Reader",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in basis points calculations"},"POSITION_PROPS_LENGTH()":{inputs:[],name:"POSITION_PROPS_LENGTH",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",notice:"Number of properties for a position"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"USD_DECIMALS()":{inputs:[],name:"USD_DECIMALS",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",notice:"USD Decimals"},"getFees(address,address[])":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"getFees",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_tokens:"An array of tokens to query for fees",_vault:"The vault address"},returns:{amounts:"An array of fee amounts"},notice:"Get the fee amounts"},"getFundingRates(address,address,address[])":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"getFundingRates",outputs:[{internalType:"uint256[]",name:"fundingRates",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_tokens:"An array of tokens to query for funding rates",_vault:"The vault address",_weth:"The WETH address"},returns:{fundingRates:"An array of funding rates"},notice:"Get funding rates for an array of tokens"},"getPositions(address,address,address[],address[],bool[])":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address[]",name:"_collateralTokens",type:"address[]"},{internalType:"address[]",name:"_indexTokens",type:"address[]"},{internalType:"bool[]",name:"_isLong",type:"bool[]"}],name:"getPositions",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_account:"The account to query for positions",_collateralTokens:"An array of collateral tokens",_indexTokens:"An array of index tokens",_isLong:"An array of booleans indicating whether the position is long or short",_vault:"The vault address"},notice:"Get the positions for `_account`"},"getTokenBalances(address,address[])":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"getTokenBalances",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function",details:"Address(0) is used for the native currency",params:{_account:"The account to query for token balances",_tokens:"An array of tokens to query for balances"},returns:{balances:"An array of token balances"},notice:"Get the token balances for `_account`"},"getTokenBalancesWithSupplies(address,address[])":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"getTokenBalancesWithSupplies",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function",details:"Address(0) is used for the native currency",params:{_account:"The account to query for token balances",_tokens:"An array of tokens to query for balances"},returns:{balances:"An array of token balances and total supplies"},notice:"Get the token balances for `_account` + total supplies"},"hasMaxGlobalShortSizes()":{inputs:[],name:"hasMaxGlobalShortSizes",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if there is a max global short size"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setConfig(bool)":{inputs:[{internalType:"bool",name:"_hasMaxGlobalShortSizes",type:"bool"}],name:"setConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_hasMaxGlobalShortSizes:"True if the contract has max global short sizes"},notice:"Set if the contract has max global short sizes to `_hasMaxGlobalShortSizes`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/peripherals/RewardReader.sol:RewardReader":{source:"contracts/peripherals/RewardReader.sol",name:"RewardReader",methods:{"getDepositBalances(address,address[],address[])":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address[]",name:"_depositTokens",type:"address[]"},{internalType:"address[]",name:"_rewardTrackers",type:"address[]"}],name:"getDepositBalances",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},"getStakingInfo(address,address[])":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address[]",name:"_rewardTrackers",type:"address[]"}],name:"getStakingInfo",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}}},"contracts/peripherals/Timelock.sol:Timelock":{source:"contracts/peripherals/Timelock.sol",name:"Timelock",title:"Timelock",constructor:{inputs:[{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_buffer",type:"uint256"},{internalType:"address",name:"_rewardManager",type:"address"},{internalType:"address",name:"_tokenManager",type:"address"},{internalType:"address",name:"_mintReceiver",type:"address"},{internalType:"uint256",name:"_maxTokenSupply",type:"uint256"},{internalType:"uint256",name:"_marginFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_maxMarginFeeBasisPoints",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"ClearAction(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"ClearAction",type:"event"},"SignalAddPlugin(address,address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"router",type:"address"},{indexed:!1,internalType:"address",name:"plugin",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalAddPlugin",type:"event"},"SignalApprove(address,address,uint256,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalApprove",type:"event"},"SignalMint(address,address,uint256,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalMint",type:"event"},"SignalPendingAction(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalPendingAction",type:"event"},"SignalPriceFeedSetTokenConfig(address,address,address,uint256,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vaultPriceFeed",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"priceFeed",type:"address"},{indexed:!1,internalType:"uint256",name:"priceDecimals",type:"uint256"},{indexed:!1,internalType:"bool",name:"isStrictStable",type:"bool"}],name:"SignalPriceFeedSetTokenConfig",type:"event"},"SignalSetHandler(address,address,bool,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"handler",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalSetHandler",type:"event"},"SignalSetOwner(address,address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalSetOwner",type:"event"},"SignalSetPriceFeed(address,address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vault",type:"address"},{indexed:!1,internalType:"address",name:"priceFeed",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalSetPriceFeed",type:"event"},"SignalSetPriceFeedWatcher(address,address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"fastPriceFeed",type:"address"},{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SignalSetPriceFeedWatcher",type:"event"},"SignalVaultSetTokenConfig(address,address,uint256,uint256,uint256,bool,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vault",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenDecimals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenWeight",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minProfitBps",type:"uint256"},{indexed:!1,internalType:"bool",name:"isStable",type:"bool"},{indexed:!1,internalType:"bool",name:"isShortable",type:"bool"}],name:"SignalVaultSetTokenConfig",type:"event"},"SignalWithdrawToken(address,address,address,uint256,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"}],name:"SignalWithdrawToken",type:"event"}},methods:{"MAX_BUFFER()":{inputs:[],name:"MAX_BUFFER",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The maximum buffer is 5 days (432000 seconds)"},"MAX_FUNDING_RATE_FACTOR()":{inputs:[],name:"MAX_FUNDING_RATE_FACTOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"The max funding rate factor is 200 (0.02%)"},"MAX_LEVERAGE_VALIDATION()":{inputs:[],name:"MAX_LEVERAGE_VALIDATION",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The maximum leverage must be greater than 500000 (50x)"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in price calculations"},"addExcludedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addExcludedToken",outputs:[],stateMutability:"nonpayable",type:"function"},"addPlugin(address,address)":{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_plugin",type:"address"}],name:"addPlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The plugin to add",_router:"The router address"},notice:"Add a plugin to the router"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The admin of the contract"},"approve(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},"buffer()":{inputs:[],name:"buffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The buffer amount in seconds"},"cancelAction(bytes32)":{inputs:[{internalType:"bytes32",name:"_action",type:"bytes32"}],name:"cancelAction",outputs:[],stateMutability:"nonpayable",type:"function",params:{_action:"The action to cancel"},notice:"Cancel an action"},"disableLeverage(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"disableLeverage",outputs:[],stateMutability:"nonpayable",type:"function",details:"`shouldToggleIsLeveragedEnabled` must be true",params:{_vault:"The vault address"},notice:"Disable leverage on `_vault`"},"enableLeverage(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"enableLeverage",outputs:[],stateMutability:"nonpayable",type:"function",details:"`shouldToggleIsLeveragedEnabled` must be true",params:{_vault:"The vault address"},notice:"Enable leverage on `_vault`"},"excludedTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of excluded tokens"},"govSetCodeOwner(address,bytes32,address)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"},{internalType:"bytes32",name:"_code",type:"bytes32"},{internalType:"address",name:"_newAccount",type:"address"}],name:"govSetCodeOwner",outputs:[],stateMutability:"nonpayable",type:"function"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of valid handlers"},"managedSetHandler(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"managedSetHandler",outputs:[],stateMutability:"nonpayable",type:"function"},"managedSetMinter(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"managedSetMinter",outputs:[],stateMutability:"nonpayable",type:"function"},"marginFeeBasisPoints()":{inputs:[],name:"marginFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The margin fee basis points"},"maxMarginFeeBasisPoints()":{inputs:[],name:"maxMarginFeeBasisPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max margin fee basis points"},"maxTokenSupply()":{inputs:[],name:"maxTokenSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max token supply"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",details:"This contract must have minter rights or ability to set minter",params:{_amount:"The amount to mint",_token:"The token to mint"},notice:"Mint `_amount` of `_token` to `mintReceiver`"},"mintReceiver()":{inputs:[],name:"mintReceiver",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address to receive newly minted tokens"},"pendingActions(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"pendingActions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of pending actions"},"priceFeedSetTokenConfig(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_vaultPriceFeed",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_priceDecimals",type:"uint256"},{internalType:"bool",name:"_isStrictStable",type:"bool"}],name:"priceFeedSetTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isStrictStable:"True if the token is a strict stablecoin, false otherwise",_priceDecimals:"The decimals of the price feed",_priceFeed:"The token price feed address",_token:"The token to set the config for",_vaultPriceFeed:"The vault price feed address"},notice:"Set a price feed's token configuration variables"},"processMint(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"processMint",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin",_token:"The token address"},notice:"Remove `_account` as an admin for `_token`"},"rewardManager()":{inputs:[],name:"rewardManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The reward manager address"},"setAdjustment(address,address,bool,uint256)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_isAdditive",type:"bool"},{internalType:"uint256",name:"_adjustmentBps",type:"uint256"}],name:"setAdjustment",outputs:[],stateMutability:"nonpayable",type:"function",params:{_adjustmentBps:"The adjustment in basis points",_isAdditive:"True if the adjustment is additive, false otherwise",_priceFeed:"The price feed address",_token:"The token address"},notice:"Set the adjustment"},"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The new admin of this contract"},notice:"Set the admin of this contract to `_admin`"},"setBuffer(uint256)":{inputs:[{internalType:"uint256",name:"_buffer",type:"uint256"}],name:"setBuffer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_buffer:"The new buffer"},notice:"Set the buffer to `_buffer`"},"setContractHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setContractHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The contract handler to set",_isActive:"True to activate, false to deactivate"},notice:"Set `_handler` as a contract handler true/false: `_isActive`"},"setExternalAdmin(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"}],name:"setExternalAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The new admin of `_target`",_target:"The external contract"},notice:"Set the admin of `_target` to `_admin`"},"setFees(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableTaxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_mintBurnFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_swapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableSwapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_marginFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_liquidationFeeUsd",type:"uint256"},{internalType:"uint256",name:"_minProfitTime",type:"uint256"},{internalType:"bool",name:"_hasDynamicFees",type:"bool"}],name:"setFees",outputs:[],stateMutability:"nonpayable",type:"function",details:"Calls the vault's setFees functionassign _marginFeeBasisPoints to this.marginFeeBasisPointsbecause enableLeverage would update Vault.marginFeeBasisPoints to this.marginFeeBasisPointsand disableLeverage would reset the Vault.marginFeeBasisPoints to this.maxMarginFeeBasisPoints",notice:"Set the vault fees"},"setFundingRate(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"uint256",name:"_fundingInterval",type:"uint256"},{internalType:"uint256",name:"_fundingRateFactor",type:"uint256"},{internalType:"uint256",name:"_stableFundingRateFactor",type:"uint256"}],name:"setFundingRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fundingInterval:"The funding interval",_fundingRateFactor:"The funding rate factor for non-stablecoins",_stableFundingRateFactor:"The funding rate factor for stablecoins",_vault:"The vault address"},notice:"Set the funding rate parameters on `_vault`"},"setHandler(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The handler to set",_isActive:"True to enable the handler, false otherwise",_target:"The contract to set the handler for"},notice:"Set `_handler` as a handler for `_target`: `_isActive`"},"setInPrivateLiquidationMode(address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"bool",name:"_inPrivateLiquidationMode",type:"bool"}],name:"setInPrivateLiquidationMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateLiquidationMode:"True to enable private liquidation, false otherwise",_vault:"The vault address"},notice:"Set the vault in private liquidation mode: `_inPrivateLiquidationMode`"},"setInPrivateTransferMode(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsAmmEnabled(address,bool)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsAmmEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isEnabled:"True to enable AMM, false otherwise",_priceFeed:"The price feed address"},notice:"Set `_priceFeed` (Price Feed) to be AMM enabled: `_isEnabled`"},"setIsLeverageEnabled(address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isLeverageEnabled:"True to enable leverage, false otherwise",_vault:"The vault address"},notice:"Set the isLeverageEnabled flag on `_vault` to `_isLeverageEnabled`"},"setIsSecondaryPriceEnabled(address,bool)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"bool",name:"_isEnabled",type:"bool"}],name:"setIsSecondaryPriceEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isEnabled:"True to enable secondary price, false otherwise",_priceFeed:"The price feed address"},notice:"Set `_priceFeed` (Price Feed) to be secondary price enabled: `_isEnabled`"},"setIsSpreadEnabled(address,bool)":{inputs:[{internalType:"address",name:"_fastPriceFeed",type:"address"},{internalType:"bool",name:"_isSpreadEnabled",type:"bool"}],name:"setIsSpreadEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fastPriceFeed:"The fast price feed address",_isSpreadEnabled:"True to enable spreads, false otherwise"},notice:"Set `_fastPriceFeed` (FastPriceFeed) to be spread enabled: `_isSpreadEnabled`"},"setIsSwapEnabled(address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"bool",name:"_isSwapEnabled",type:"bool"}],name:"setIsSwapEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isSwapEnabled:"True to enable swaps, false otherwise",_vault:"The vault address"},notice:"Set `_vault` (vault) to be swap enabled: `_isSwapEnabled`"},"setLiquidator(address,address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_liquidator",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setLiquidator",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isActive:"True to enable liquidator, false otherwise",_liquidator:"The liquidator address",_vault:"The vault address"},notice:"Set `_liquidator` as a liquidator for `_vault`: `_isActive`"},"setMarginFeeBasisPoints(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_marginFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_maxMarginFeeBasisPoints",type:"uint256"}],name:"setMarginFeeBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function",params:{_marginFeeBasisPoints:"The margin fee basis points",_maxMarginFeeBasisPoints:"The max margin fee basis points"},notice:"Set the margin fee basis points parameters"},"setMaxGasPrice(address,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"uint256",name:"_maxGasPrice",type:"uint256"}],name:"setMaxGasPrice",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxGasPrice:"The max gas price for the vault",_vault:"The vault address"},notice:"Set the max gas price for `_vault` to `_maxGasPrice`"},"setMaxGlobalShortSize(address,address,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setMaxGlobalShortSize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The max short size for the token",_token:"The token to set the max short size for",_vault:"The vault address"},notice:"Set Max Global Short Size"},"setMaxLeverage(address,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"uint256",name:"_maxLeverage",type:"uint256"}],name:"setMaxLeverage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxLeverage:"The new max leverage",_vault:"The vault address"},notice:"Set the max leverage on `_vault` to `_maxLeverage`"},"setMaxStrictPriceDeviation(address,uint256)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_maxStrictPriceDeviation",type:"uint256"}],name:"setMaxStrictPriceDeviation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxStrictPriceDeviation:"The max strict price deviation",_priceFeed:"The price feed address"},notice:"Set the max strict price deviation for `_priceFeed` (Price Feed) to `_maxStrictPriceDeviation`"},"setOwner(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceFeed(address,address)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceFeed:"The price feed address",_vault:"The vault address"},notice:"Set the vault price feed address to `_priceFeed`"},"setPriceFeedWatcher(address,address,bool)":{inputs:[{internalType:"address",name:"_fastPriceFeed",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setPriceFeedWatcher",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The price feed watcher",_fastPriceFeed:"The fast price feed",_isActive:"Whether `_account` is an active price feed watcher"},notice:"Set the price feed watcher"},"setPriceSampleSpace(address,uint256)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_priceSampleSpace",type:"uint256"}],name:"setPriceSampleSpace",outputs:[],stateMutability:"nonpayable",type:"function"},"setReferrerTier(address,address,uint256)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"},{internalType:"address",name:"_referrer",type:"address"},{internalType:"uint256",name:"_tierId",type:"uint256"}],name:"setReferrerTier",outputs:[],stateMutability:"nonpayable",type:"function"},"setShouldToggleIsLeverageEnabled(bool)":{inputs:[{internalType:"bool",name:"_shouldToggleIsLeverageEnabled",type:"bool"}],name:"setShouldToggleIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function",details:"Variable must be set to true before this contract can enable or disable leverage on the vault",params:{_shouldToggleIsLeverageEnabled:"True to enable, false to disable"},notice:"Set shouldToggleIsLeverageEnabled to `_shouldToggleIsLeverageEnabled`"},"setSpreadBasisPoints(address,address,uint8)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint8",name:"_spreadBasisPoints",type:"uint8"}],name:"setSpreadBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function"},"setSpreadThresholdBasisPoints(address,uint256)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_spreadThresholdBasisPoints",type:"uint256"}],name:"setSpreadThresholdBasisPoints",outputs:[],stateMutability:"nonpayable",type:"function"},"setSwapFees(address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"uint256",name:"_taxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableTaxBasisPoints",type:"uint256"},{internalType:"uint256",name:"_mintBurnFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_swapFeeBasisPoints",type:"uint256"},{internalType:"uint256",name:"_stableSwapFeeBasisPoints",type:"uint256"}],name:"setSwapFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_vault:"The vault address"},notice:"Set the swap fees"},"setTier(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_referralStorage",type:"address"},{internalType:"uint256",name:"_tierId",type:"uint256"},{internalType:"uint256",name:"_totalRebate",type:"uint256"},{internalType:"uint256",name:"_discountShare",type:"uint256"}],name:"setTier",outputs:[],stateMutability:"nonpayable",type:"function"},"setTokenConfig(address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenWeight",type:"uint256"},{internalType:"uint256",name:"_minProfitBps",type:"uint256"},{internalType:"uint256",name:"_maxUsdAmount",type:"uint256"},{internalType:"uint256",name:"_bufferAmount",type:"uint256"}],name:"setTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_bufferAmount:"The buffer amount",_maxUsdAmount:"The maximum usd amount",_minProfitBps:"The minimum profit in basis points",_token:"The token address",_tokenWeight:"The token weight",_vault:"The vault address"},notice:"Set Token Configurations"},"setUseV2Pricing(address,bool)":{inputs:[{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"bool",name:"_useV2Pricing",type:"bool"}],name:"setUseV2Pricing",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceFeed:"The price feed address",_useV2Pricing:"True to enable V2 price, false otherwise"},notice:"Set `_priceFeed` to use V2 AMM pricing: `_useV2Pricing`"},"setVaultUtils(address,address)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"contract IVaultUtils",name:"_vaultUtils",type:"address"}],name:"setVaultUtils",outputs:[],stateMutability:"nonpayable",type:"function",params:{_vault:"The vault address",_vaultUtils:"The vault utils address"},notice:"Set the vault utils address to `_vaultUtils`"},"shouldToggleIsLeverageEnabled()":{inputs:[],name:"shouldToggleIsLeverageEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"If this contract should be able to enable/disable leverage"},"signalAddPlugin(address,address)":{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_plugin",type:"address"}],name:"signalAddPlugin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_plugin:"The plugin to add",_router:"The router address"},notice:"Signal an action to add a plugin to the router"},"signalApprove(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"signalApprove",outputs:[],stateMutability:"nonpayable",type:"function"},"signalMint(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"signalMint",outputs:[],stateMutability:"nonpayable",type:"function"},"signalPriceFeedSetTokenConfig(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"_vaultPriceFeed",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"},{internalType:"uint256",name:"_priceDecimals",type:"uint256"},{internalType:"bool",name:"_isStrictStable",type:"bool"}],name:"signalPriceFeedSetTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isStrictStable:"True if the token is a strict stablecoin, false otherwise",_priceDecimals:"The decimals of the price feed",_priceFeed:"The token price feed address",_token:"The token to set the config for",_vaultPriceFeed:"The vault price feed address"},notice:"Signal a price feed setTokenConfig action"},"signalSetHandler(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"signalSetHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The handler to set",_isActive:"True to enable the handler, false otherwise",_target:"The contract to set the handler for"},notice:"Signal an action to set `_handler` as a handler for `_target`: `_isActive`"},"signalSetOwner(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"signalSetOwner",outputs:[],stateMutability:"nonpayable",type:"function"},"signalSetPriceFeed(address,address)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_priceFeed",type:"address"}],name:"signalSetPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_priceFeed:"The price feed address",_vault:"The vault address"},notice:"Signal an action to set the vault price feed"},"signalSetPriceFeedWatcher(address,address,bool)":{inputs:[{internalType:"address",name:"_fastPriceFeed",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"signalSetPriceFeedWatcher",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The price feed watcher",_fastPriceFeed:"The fast price feed",_isActive:"Whether `_account` is an active price feed watcher"},notice:"Signal an action to set the price feed watcher"},"signalVaultSetTokenConfig(address,address,uint256,uint256,uint256,bool,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"},{internalType:"uint256",name:"_tokenWeight",type:"uint256"},{internalType:"uint256",name:"_minProfitBps",type:"uint256"},{internalType:"bool",name:"_isStable",type:"bool"},{internalType:"bool",name:"_isShortable",type:"bool"}],name:"signalVaultSetTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isShortable:"True if the token is shortable, false otherwise",_isStable:"True if the token is a stablecoin, false otherwise",_minProfitBps:"The min profit basis points",_token:"The token to set the config for",_tokenDecimals:"The token decimals",_tokenWeight:"The token weight",_vault:"The vault address"},notice:"Signal a vault setTokenConfig action"},"signalWithdrawToken(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"signalWithdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenManager()":{inputs:[],name:"tokenManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The token manager address"},"transferIn(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferIn",outputs:[],stateMutability:"nonpayable",type:"function"},"vaultSetTokenConfig(address,address,uint256,uint256,uint256,bool,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"},{internalType:"uint256",name:"_tokenWeight",type:"uint256"},{internalType:"uint256",name:"_minProfitBps",type:"uint256"},{internalType:"bool",name:"_isStable",type:"bool"},{internalType:"bool",name:"_isShortable",type:"bool"}],name:"vaultSetTokenConfig",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isShortable:"True if the token is shortable, false otherwise",_isStable:"True if the token is a stablecoin, false otherwise",_minProfitBps:"The min profit basis points",_token:"The token to set the config for",_tokenDecimals:"The token decimals",_tokenWeight:"The token weight",_vault:"The vault address"},notice:"Set a token's configuration variables"},"withdrawFees(address,address,address)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdrawFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_receiver:"The address to receive the fees",_token:"The token to withdraw",_vault:"The vault address"},notice:"Withdraw fees from `_vault` to `_receiver`"},"withdrawToken(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/peripherals/VaultReader.sol:VaultReader":{source:"contracts/peripherals/VaultReader.sol",name:"VaultReader",methods:{"getVaultTokenInfoV4(address,address,address,uint256,address[])":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"address",name:"_positionManager",type:"address"},{internalType:"address",name:"_weth",type:"address"},{internalType:"uint256",name:"_usdAmount",type:"uint256"},{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"getVaultTokenInfoV4",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}}},"contracts/peripherals/interfaces/IHandlerTarget.sol:IHandlerTarget":{source:"contracts/peripherals/interfaces/IHandlerTarget.sol",name:"IHandlerTarget",methods:{"isHandler(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/peripherals/interfaces/ITimelock.sol:ITimelock":{source:"contracts/peripherals/interfaces/ITimelock.sol",name:"ITimelock",title:"Vaporwave Timelock Interface",methods:{"disableLeverage(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"disableLeverage",outputs:[],stateMutability:"nonpayable",type:"function"},"enableLeverage(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"enableLeverage",outputs:[],stateMutability:"nonpayable",type:"function"},"managedSetHandler(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"managedSetHandler",outputs:[],stateMutability:"nonpayable",type:"function"},"managedSetMinter(address,address,bool)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"managedSetMinter",outputs:[],stateMutability:"nonpayable",type:"function"},"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsLeverageEnabled(address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"signalSetOwner(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"signalSetOwner",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/peripherals/interfaces/ITimelockTarget.sol:ITimelockTarget":{source:"contracts/peripherals/interfaces/ITimelockTarget.sol",name:"ITimelockTarget",title:"Vaporwave Timelock Target Interface",methods:{"transferOwnership(address)":{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/peripherals/interfaces/IVwaveTimelock.sol:IVwaveTimelock":{source:"contracts/peripherals/interfaces/IVwaveTimelock.sol",name:"IVwaveTimelock",methods:{"setAdmin(address)":{inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"setIsLeverageEnabled(address,bool)":{inputs:[{internalType:"address",name:"_vault",type:"address"},{internalType:"bool",name:"_isLeverageEnabled",type:"bool"}],name:"setIsLeverageEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"signalSetGov(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_gov",type:"address"}],name:"signalSetGov",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/referrals/ReferralStorage.sol:ReferralStorage":{source:"contracts/referrals/ReferralStorage.sol",name:"ReferralStorage",title:"Vaporwave Referral Storage",events:{"GovSetCodeOwner(bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"code",type:"bytes32"},{indexed:!1,internalType:"address",name:"newAccount",type:"address"}],name:"GovSetCodeOwner",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RegisterCode(address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bytes32",name:"code",type:"bytes32"}],name:"RegisterCode",type:"event"},"SetCodeOwner(address,address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"newAccount",type:"address"},{indexed:!1,internalType:"bytes32",name:"code",type:"bytes32"}],name:"SetCodeOwner",type:"event"},"SetHandler(address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"handler",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetHandler",type:"event"},"SetReferrerDiscountShare(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referrer",type:"address"},{indexed:!1,internalType:"uint256",name:"discountShare",type:"uint256"}],name:"SetReferrerDiscountShare",type:"event"},"SetReferrerTier(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"referrer",type:"address"},{indexed:!1,internalType:"uint256",name:"tierId",type:"uint256"}],name:"SetReferrerTier",type:"event"},"SetTier(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tierId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalRebate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"discountShare",type:"uint256"}],name:"SetTier",type:"event"},"SetTraderReferralCode(address,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bytes32",name:"code",type:"bytes32"}],name:"SetTraderReferralCode",type:"event"}},methods:{"BASIS_POINTS()":{inputs:[],name:"BASIS_POINTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"codeOwners(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"codeOwners",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"mapping of codes to owners"},"getTraderReferralInfo(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getTraderReferralInfo",outputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_account:"The address of the trader"},notice:"Get trader's referral info"},"govSetCodeOwner(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"},{internalType:"address",name:"_newAccount",type:"address"}],name:"govSetCodeOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_code:"The referral code",_newAccount:"The new owner of the referral code"},notice:"Set a new owner for a referral code"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"mapping of handlers"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"referrerDiscountShares(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"referrerDiscountShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"mapping of referrer to discount shares"},"referrerTiers(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"referrerTiers",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"mapping of referrer to tier"},"registerCode(bytes32)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"}],name:"registerCode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_code:"The referral code"},notice:"Register a referral code"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCodeOwner(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"},{internalType:"address",name:"_newAccount",type:"address"}],name:"setCodeOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_code:"The referral code",_newAccount:"The new owner of the referral code"},notice:"Set a new owner for a referral code"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"Whether to enable or disable the account as a handler"},notice:"Set a handler for the contract"},"setReferrerDiscountShare(uint256)":{inputs:[{internalType:"uint256",name:"_discountShare",type:"uint256"}],name:"setReferrerDiscountShare",outputs:[],stateMutability:"nonpayable",type:"function",params:{_discountShare:"The discount share"},notice:"Set referrer discount share"},"setReferrerTier(address,uint256)":{inputs:[{internalType:"address",name:"_referrer",type:"address"},{internalType:"uint256",name:"_tierId",type:"uint256"}],name:"setReferrerTier",outputs:[],stateMutability:"nonpayable",type:"function",params:{_referrer:"The address of the referrer",_tierId:"The ID of the tier"},notice:"Set referrer tier"},"setTier(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_tierId",type:"uint256"},{internalType:"uint256",name:"_totalRebate",type:"uint256"},{internalType:"uint256",name:"_discountShare",type:"uint256"}],name:"setTier",outputs:[],stateMutability:"nonpayable",type:"function",params:{_discountShare:"The discount share",_tierId:"The ID of the tier",_totalRebate:"The total rebate"},notice:"Set tier"},"setTraderReferralCode(address,bytes32)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bytes32",name:"_code",type:"bytes32"}],name:"setTraderReferralCode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the trader",_code:"The referral code"},notice:"Set a trader referral code"},"setTraderReferralCodeByUser(bytes32)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"}],name:"setTraderReferralCodeByUser",outputs:[],stateMutability:"nonpayable",type:"function",params:{_code:"The referral code"},notice:"Set own trader referral code"},"tiers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tiers",outputs:[{internalType:"uint256",name:"totalRebate",type:"uint256"},{internalType:"uint256",name:"discountShare",type:"uint256"}],stateMutability:"view",type:"function",notice:"mapping of index to tier"},"traderReferralCodes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"traderReferralCodes",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"mapping of accounts to codes"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/referrals/interfaces/IReferralStorage.sol:IReferralStorage":{source:"contracts/referrals/interfaces/IReferralStorage.sol",name:"IReferralStorage",methods:{"codeOwners(bytes32)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"}],name:"codeOwners",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTraderReferralInfo(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getTraderReferralInfo",outputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"govSetCodeOwner(bytes32,address)":{inputs:[{internalType:"bytes32",name:"_code",type:"bytes32"},{internalType:"address",name:"_newAccount",type:"address"}],name:"govSetCodeOwner",outputs:[],stateMutability:"nonpayable",type:"function"},"setReferrerTier(address,uint256)":{inputs:[{internalType:"address",name:"_referrer",type:"address"},{internalType:"uint256",name:"_tierId",type:"uint256"}],name:"setReferrerTier",outputs:[],stateMutability:"nonpayable",type:"function"},"setTier(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_tierId",type:"uint256"},{internalType:"uint256",name:"_totalRebate",type:"uint256"},{internalType:"uint256",name:"_discountShare",type:"uint256"}],name:"setTier",outputs:[],stateMutability:"nonpayable",type:"function"},"setTraderReferralCode(address,bytes32)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bytes32",name:"_code",type:"bytes32"}],name:"setTraderReferralCode",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/staking/RewardRouterV2.sol:RewardRouterV2":{source:"contracts/staking/RewardRouterV2.sol",name:"RewardRouterV2",title:"Vaporwave Reward Router",receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"StakeVlp(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeVlp",type:"event"},"StakeVwave(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeVwave",type:"event"},"UnstakeVlp(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UnstakeVlp",type:"event"},"UnstakeVwave(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UnstakeVwave",type:"event"}},methods:{"acceptTransfer(address)":{inputs:[{internalType:"address",name:"_sender",type:"address"}],name:"acceptTransfer",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sender cannot have vested tokens",params:{_sender:"The sender of the transfer"},notice:"Accept a pending transfer from `_sender`"},"batchCompoundForAccounts(address[])":{inputs:[{internalType:"address[]",name:"_accounts",type:"address[]"}],name:"batchCompoundForAccounts",outputs:[],stateMutability:"nonpayable",type:"function"},"batchStakeVwaveForAccounts(address[],uint256[])":{inputs:[{internalType:"address[]",name:"_accounts",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"batchStakeVwaveForAccounts",outputs:[],stateMutability:"nonpayable",type:"function",details:"Save gas by staking VWAVE for multiple accounts at once",params:{_accounts:"An array of accounts to stake VWAVE for",_amounts:"An array of amounts to stake for each account"},notice:"Stake VWAVE for an array of accounts"},"bnVwave()":{inputs:[],name:"bnVwave",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"bonusVwaveTracker()":{inputs:[],name:"bonusVwaveTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim accrued fees + EsVWAVE"},"claimEsVwave()":{inputs:[],name:"claimEsVwave",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim EsVWAVE from staked VWAVE and VLP"},"claimFees()":{inputs:[],name:"claimFees",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim accrued fees"},"compound()":{inputs:[],name:"compound",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Compound staked VWAVE and VLP"},"compoundForAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"compoundForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to compound for"},notice:"Compound staked VWAVE and VLP for `_account`"},"esVwave()":{inputs:[],name:"esVwave",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"EsVWAVE token address"},"feeVlpTracker()":{inputs:[],name:"feeVlpTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeVwaveTracker()":{inputs:[],name:"feeVwaveTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"handleRewards(bool,bool,bool,bool,bool,bool,bool)":{inputs:[{internalType:"bool",name:"_shouldClaimVwave",type:"bool"},{internalType:"bool",name:"_shouldStakeVwave",type:"bool"},{internalType:"bool",name:"_shouldClaimEsVwave",type:"bool"},{internalType:"bool",name:"_shouldStakeEsVwave",type:"bool"},{internalType:"bool",name:"_shouldStakeMultiplierPoints",type:"bool"},{internalType:"bool",name:"_shouldClaimWeth",type:"bool"},{internalType:"bool",name:"_shouldConvertWethToEth",type:"bool"}],name:"handleRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"initialize(address,address,address,address,address,address,address,address,address,address,address,address,address)":{inputs:[{internalType:"address",name:"_weth",type:"address"},{internalType:"address",name:"_vwave",type:"address"},{internalType:"address",name:"_esVwave",type:"address"},{internalType:"address",name:"_bnVwave",type:"address"},{internalType:"address",name:"_vlp",type:"address"},{internalType:"address",name:"_stakedVwaveTracker",type:"address"},{internalType:"address",name:"_bonusVwaveTracker",type:"address"},{internalType:"address",name:"_feeVwaveTracker",type:"address"},{internalType:"address",name:"_feeVlpTracker",type:"address"},{internalType:"address",name:"_stakedVlpTracker",type:"address"},{internalType:"address",name:"_vlpManager",type:"address"},{internalType:"address",name:"_vwaveVester",type:"address"},{internalType:"address",name:"_vlpVester",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Function can only be called once",params:{_bnVwave:"BnVWAVE token address",_bonusVwaveTracker:"BonusVwaveTracker address",_esVwave:"EsVWAVE token address",_feeVlpTracker:"FeeVlpTracker address",_feeVwaveTracker:"FeeVwaveTracker address",_stakedVlpTracker:"StakedVlpTracker address",_stakedVwaveTracker:"StakedVwaveTracker address",_vlp:"VWAVE Liquidity Provider token address",_vlpManager:"VlpManager address",_vlpVester:"VLP Vester address",_vwave:"VWAVE token address",_vwaveVester:"VWAVE Vester address",_weth:"Wrapped Ether (WETH) token address"},notice:"Initialize the contract"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"mintAndStakeVlp(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minUsdv",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"mintAndStakeVlp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"mintAndStakeVlpETH(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minUsdv",type:"uint256"},{internalType:"uint256",name:"_minVlp",type:"uint256"}],name:"mintAndStakeVlpETH",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pendingReceivers(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pendingReceivers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"signalTransfer(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"signalTransfer",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sender cannot have vested tokens",params:{_receiver:"The address to transfer to"},notice:"Signal a transfer to `_receiver`"},"stakeEsVwave(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeEsVwave",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Stake EsVWAVE_amount The amount of EsVWAVE to stake"},"stakeVwave(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeVwave",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of VWAVE to stake"},notice:"Stake VWAVE"},"stakeVwaveForAccount(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeVwaveForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to stake VWAVE for",_amount:"The amount of VWAVE to stake"},notice:"Stake VWAVE for `_account`"},"stakedVlpTracker()":{inputs:[],name:"stakedVlpTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakedVwaveTracker()":{inputs:[],name:"stakedVwaveTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unstakeAndRedeemVlp(address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"unstakeAndRedeemVlp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"unstakeAndRedeemVlpETH(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_vlpAmount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address payable",name:"_receiver",type:"address"}],name:"unstakeAndRedeemVlpETH",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"unstakeEsVwave(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstakeEsVwave",outputs:[],stateMutability:"nonpayable",type:"function",details:"This will reduce the user's BnVWAVE",params:{_amount:"The amount of EsVWAVE to unstake"},notice:"Unstake EsVWAVE"},"unstakeVwave(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstakeVwave",outputs:[],stateMutability:"nonpayable",type:"function",details:"This will reduce the user's BnVWAVE",params:{_amount:"The amount of VWAVE to unstake"},notice:"Unstake VWAVE"},"vlp()":{inputs:[],name:"vlp",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"VWAVE Liquidity Provider token"},"vlpManager()":{inputs:[],name:"vlpManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"vlpVester()":{inputs:[],name:"vlpVester",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"vwave()":{inputs:[],name:"vwave",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"VWAVE token address"},"vwaveVester()":{inputs:[],name:"vwaveVester",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"weth()":{inputs:[],name:"weth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Wrapped Ether (WETH) token address"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The token to withdraw"},notice:"Send `amount` of `_token` from this contract to `_account`"}}},"contracts/staking/RewardTracker.sol:RewardTracker":{source:"contracts/staking/RewardTracker.sol",name:"RewardTracker",title:"Vaporwave Reward Tracker",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Claim(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claim",type:"event",params:{amount:"The amount of tokens claimed",receiver:"The address of the receiver"},notice:"Emitted when rewards are claimed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncations errors in basis points calculations"},"PRECISION()":{inputs:[],name:"PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in calculations"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address of the token owner",_spender:"The address of the spender"},returns:{_0:"The allowance of `_spender` for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to approve",_spender:"The address of the spender"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"averageStakedAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"averageStakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of average staked amounts"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address of the account to get the balance of"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_receiver:"The address of the account to receive the tokens"},returns:{_0:"The amount of tokens claimed"},notice:"Claim rewards"},"claimForAccount(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claimForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to claim tokens for",_receiver:"The address of the account to receive the tokens"},returns:{_0:"The amount of tokens claimed"},notice:"Claim rewards for `_account`"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the claimable amount of tokens"},returns:{_0:"The claimable amount of tokens for `_account`"},notice:"Get the claimable amount of tokens for `_account`"},"claimableReward(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"claimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user claimable rewards"},"cumulativeRewardPerToken()":{inputs:[],name:"cumulativeRewardPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The cumulative reward per token"},"cumulativeRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"cumulativeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of cumulative rewards"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"depositBalances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"depositBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user deposit balances"},"distributor()":{inputs:[],name:"distributor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The distributor address"},"inPrivateClaimingMode()":{inputs:[],name:"inPrivateClaimingMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private claiming mode"},"inPrivateStakingMode()":{inputs:[],name:"inPrivateStakingMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private staking mode"},"inPrivateTransferMode()":{inputs:[],name:"inPrivateTransferMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private transfer mode"},"initialize(address[],address)":{inputs:[{internalType:"address[]",name:"_depositTokens",type:"address[]"},{internalType:"address",name:"_distributor",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_depositTokens:"An array of deposit token addresses",_distributor:"The distributor address"},notice:"Initializes the contract"},"isDepositToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isDepositToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of deposit tokens"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of valid handlers"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract is initialized"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token nome"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"previousCumulatedRewardPerToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"previousCumulatedRewardPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of previous cumulated rewards per token"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardToken()":{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",returns:{_0:"The reward token address"},notice:"Get the reward token"},"setDepositToken(address,bool)":{inputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"bool",name:"_isDepositToken",type:"bool"}],name:"setDepositToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_depositToken:"The deposit token address",_isDepositToken:"True to add the address as a deposit token, false to remove it"},notice:"Set `_depositToken` as a deposit token: `_isDepositToken`"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The handler address",_isActive:"True to add the address as a handler, false to remove it"},notice:"Set `_handler` as a handler: `_isActive`"},"setInPrivateClaimingMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateClaimingMode",type:"bool"}],name:"setInPrivateClaimingMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateClaimingMode:"True to enable private claiming mode, false to disable it"},notice:"Set the contract to private claiming mode: `_inPrivateClaimingMode`"},"setInPrivateStakingMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateStakingMode",type:"bool"}],name:"setInPrivateStakingMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateStakingMode:"True to enable private staking mode, false to disable it"},notice:"Set the contract to private staking mode: `_inPrivateStakingMode`"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateTransferMode:"True to enable private transfer mode, false to disable it"},notice:"Set the contract to private transfer mode: `_inPrivateTransferMode`"},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to stake",_depositToken:"The address of the token to stake"},notice:"Stake `_amount` of `_token` tokens"},"stakeForAccount(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_fundingAccount",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to stake",_amount:"The amount to stake",_depositToken:"The address of the token to stake",_fundingAccount:"The account that is funding the stake"},notice:"Stake `_amount` of `_token` tokens for `_account`"},"stakedAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"stakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user staked amounts"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"tokensPerInterval()":{inputs:[],name:"tokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The tokens per interval"},notice:"Get the tokens per interval"},"totalDepositSupply(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"totalDepositSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of total deposit supplies"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The token total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful"},notice:"Transfer `_amount` tokens to `_receiver`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful"},notice:"Transfer `_amount` tokens from `_sender` to `_receiver`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unstake(address,uint256)":{inputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to unstake",_depositToken:"The address of the token to unstake"},notice:"Unstake `_amount` of `_token` tokens"},"unstakeForAccount(address,address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"unstakeForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the account to unstake",_amount:"The amount to unstake",_depositToken:"The address of the token to unstake",_receiver:"The address of the account to receive the tokens"},notice:"Unstake `_amount` of `_token` tokens for `_account`"},"updateRewards()":{inputs:[],name:"updateRewards",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Update rewards"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"T",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"}}},"contracts/staking/StakeManager.sol:StakeManager":{source:"contracts/staking/StakeManager.sol",name:"StakeManager",title:"Vaporwave Stake Manager",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"stakeForAccount(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_rewardTracker",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to stake for",_amount:"The amount of tokens to stake",_rewardTracker:"The address of the reward tracker",_token:"The token to stake"},notice:"Stake `_amount` tokens for `_account`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/staking/StakedVlp.sol:StakedVlp":{source:"contracts/staking/StakedVlp.sol",name:"StakedVlp",title:"Vaporwave Staked VLP token contract",constructor:{inputs:[{internalType:"address",name:"_vlp",type:"address"},{internalType:"contract IVlpManager",name:"_vlpManager",type:"address"},{internalType:"address",name:"_stakedVlpTracker",type:"address"},{internalType:"address",name:"_feeVlpTracker",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",params:{owner:"The owner of the tokens",spender:"The address that is allowed to spend the tokens",value:"The amount of tokens approved"},notice:"Emitted when a token approval is made"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of token owners to their spender allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The amount of tokens that `_account` owns"},notice:"Get the token balance of `_account`"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"feeVlpTracker()":{inputs:[],name:"feeVlpTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The fee VLP tracker address"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",returns:{_0:"The token name (StakedVlp)"},notice:"Get the token name"},"stakedVlpTracker()":{inputs:[],name:"stakedVlpTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The staked VLP tracker address"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",returns:{_0:"The token symbol (sVLP)"},notice:"Get the token symbol"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total supply"},notice:"Get the total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to transfer",_recipient:"The address that will receive the tokens"},returns:{_0:"Whether the transfer was successful"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to transfer",_recipient:"The address that will receive the tokens",_sender:"The address that will send the tokens"},returns:{_0:"Whether the transfer was successful"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"vlp()":{inputs:[],name:"vlp",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The VLP token address"},"vlpManager()":{inputs:[],name:"vlpManager",outputs:[{internalType:"contract IVlpManager",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The VLP manager address"}}},"contracts/staking/Vester.sol:Vester":{source:"contracts/staking/Vester.sol",name:"Vester",title:"Vaporwave Vester",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint256",name:"_vestingDuration",type:"uint256"},{internalType:"address",name:"_esToken",type:"address"},{internalType:"address",name:"_pairToken",type:"address"},{internalType:"address",name:"_claimableToken",type:"address"},{internalType:"address",name:"_rewardTracker",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Claim(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claim",type:"event",params:{amount:"The amount of tokens claimed",receiver:"The receiver of the tokens"},notice:"Emitted when tokens are claimed"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event",params:{account:"The account that is depositing the tokens",amount:"The amount of tokens deposited"},notice:"Emitted when tokens are deposited"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PairTransfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"PairTransfer",type:"event",params:{from:"The sender of the tokens",to:"The recipient of the tokens",value:"The amount of tokens transferred"},notice:"Emitted when the pair token is transferred"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"claimedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"balance",type:"uint256"}],name:"Withdraw",type:"event",params:{account:"The account that is withdrawing the tokens",balance:"The amount of tokens remaining in the account",claimedAmount:"The amount of tokens claimed with the withdrawal"},notice:"Emitted when tokens are withdrawn"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Always returns 0 empty, tokens are non-transferrable"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function",details:"Always reverts, tokens are non-transferrable"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of users to their token balances"},"bonusRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"bonusRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user bonus rewards"},"claim()":{inputs:[],name:"claim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",notice:"Burn the vested tokens that have matured and receive the base tokens"},"claimForAccount(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claimForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_account:"The account to claim for",_receiver:"The receiver of the tokens"},notice:"Claim tokens for `_account`"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the claimable amount"},returns:{_0:"The claimable token amount for `_account`"},notice:"Get the claimable amount for `_account`"},"claimableToken()":{inputs:[],name:"claimableToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The claimable (base) token"},"claimedAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"claimedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user claimed amounts"},"cumulativeClaimAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"cumulativeClaimAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user cumulative claim amounts"},"cumulativeRewardDeductions(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"cumulativeRewardDeductions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user cumulative reward deductions"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"deposit(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of escrowed tokens to deposit"},notice:"Deposit escrowed tokens for vested tokens"},"depositForAccount(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositForAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to deposit for",_amount:"The amount of escrowed tokens to deposit"},notice:"Deposit escrowed tokens for vested tokens for `_account`"},"esToken()":{inputs:[],name:"esToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The escrow token address"},"getCombinedAverageStakedAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getCombinedAverageStakedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the combined average staked amount"},returns:{_0:"The combined average staked amount for `_account`"},notice:"Get the combined average staked amount for `_account`"},"getMaxVestableAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getMaxVestableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the max vestable amount"},returns:{_0:"The max vestable token amount for `_account`"},notice:"Get the max vestable amount for `_account`"},"getPairAmount(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_esAmount",type:"uint256"}],name:"getPairAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the pair amount",_esAmount:"The amount of escrowed tokens"},returns:{_0:"The pair token amount for `_account` with `_esAmount` escrowed tokens"},notice:"Get the pair amount for `_account` with `_esAmount` escrowed tokens"},"getTotalVested(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getTotalVested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"Account to query for the total vested amount"},returns:{_0:"The total vested amount for `_account`"},notice:"Get the total vested amount for `_account`"},"getVestedAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getVestedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hasMaxVestableAmount()":{inputs:[],name:"hasMaxVestableAmount",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if there is a max vestable amount"},"hasPairToken()":{inputs:[],name:"hasPairToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",returns:{_0:"True if the contract has a pair token, false otherwise"},notice:"Get if the contract has a pair token"},"hasRewardTracker()":{inputs:[],name:"hasRewardTracker",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",returns:{_0:"True if the contract has a reward tracker, false otherwise"},notice:"Get if the contract has a reward tracker"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of valid handlers"},"lastVestingTimes(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastVestingTimes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user last vesting time"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token name"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pairAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pairAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user pair amounts"},"pairSupply()":{inputs:[],name:"pairSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Pair supply"},"pairToken()":{inputs:[],name:"pairToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The pair token address"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardTracker()":{inputs:[],name:"rewardTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Reward Tracker address (staked token)"},"setBonusRewards(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setBonusRewards",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to set the bonus rewards for",_amount:"The amount to set the bonus rewards to"},notice:"Set the bonus rewrds for `_account` to `_amount`"},"setCumulativeRewardDeductions(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setCumulativeRewardDeductions",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to set the cumulative reward deductions for",_amount:"The amount to set the cumulative reward deductions tos"},notice:"Set the cumulative reward deductions for `_account` to `_amount`"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The handler address",_isActive:"True if the handler is active, false otherwise"},notice:"Set `handler` as a handler: `_isActive`"},"setHasMaxVestableAmount(bool)":{inputs:[{internalType:"bool",name:"_hasMaxVestableAmount",type:"bool"}],name:"setHasMaxVestableAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_hasMaxVestableAmount:"True if the contract has a max vestable amount, false otherwise"},notice:"Set hasMaxVestableAmount to `_hasMaxVestableAmount`"},"setTransferredAverageStakedAmounts(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setTransferredAverageStakedAmounts",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to set the average staked amount for",_amount:"The amount to set the average staked amount to"},notice:"Set the transferred average staked amounts for `_account` to `_amount`"},"setTransferredCumulativeRewards(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setTransferredCumulativeRewards",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to set the transferred cumulative reward for",_amount:"The amount to set the transferred cumulative reward to"},notice:"Set the transferred cumulative rewards for `_account` to `_amount`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Token total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function",details:"Always reverts, tokens are non-transferrable"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function",details:"Always reverts, tokens are non-transferrable"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferStakeValues(address,address)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"transferStakeValues",outputs:[],stateMutability:"nonpayable",type:"function",params:{_receiver:"The receiver of the stake",_sender:"The sender of the stake"},notice:"Transfer stake values from `_sender` to `_receiver`"},"transferredAverageStakedAmounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"transferredAverageStakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user transferred average staked amounts"},"transferredCumulativeRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"transferredCumulativeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user transferred cumulative rewards"},"vestingDuration()":{inputs:[],name:"vestingDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The vesting duration in seconds"},"withdraw()":{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim matured vested tokens and withdraw remaining escrowed tokens"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract"}}},"contracts/staking/interfaces/IRewardDistributor.sol:IRewardDistributor":{source:"contracts/staking/interfaces/IRewardDistributor.sol",name:"IRewardDistributor",methods:{"distribute()":{inputs:[],name:"distribute",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"pendingRewards()":{inputs:[],name:"pendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardToken()":{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokensPerInterval()":{inputs:[],name:"tokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/staking/interfaces/IRewardTracker.sol:IRewardTracker":{source:"contracts/staking/interfaces/IRewardTracker.sol",name:"IRewardTracker",title:"Vaporwave Reward Tracker Interface",methods:{"averageStakedAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"averageStakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimForAccount(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claimForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cumulativeRewards(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"cumulativeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"depositBalances(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_depositToken",type:"address"}],name:"depositBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeForAccount(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_fundingAccount",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeForAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"stakedAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokensPerInterval()":{inputs:[],name:"tokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unstake(address,uint256)":{inputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"unstakeForAccount(address,address,uint256,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"unstakeForAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewards()":{inputs:[],name:"updateRewards",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/staking/interfaces/IVester.sol:IVester":{source:"contracts/staking/interfaces/IVester.sol",name:"IVester",methods:{"bonusRewards(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"bonusRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimForAccount(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claimForAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimedAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cumulativeClaimAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"cumulativeClaimAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cumulativeRewardDeductions(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"cumulativeRewardDeductions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getCombinedAverageStakedAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getCombinedAverageStakedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getMaxVestableAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getMaxVestableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVestedAmount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"getVestedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"pairAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"pairAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardTracker()":{inputs:[],name:"rewardTracker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setBonusRewards(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setBonusRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"setCumulativeRewardDeductions(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setCumulativeRewardDeductions",outputs:[],stateMutability:"nonpayable",type:"function"},"setTransferredAverageStakedAmounts(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setTransferredAverageStakedAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"setTransferredCumulativeRewards(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setTransferredCumulativeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"transferStakeValues(address,address)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"transferStakeValues",outputs:[],stateMutability:"nonpayable",type:"function"},"transferredAverageStakedAmounts(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"transferredAverageStakedAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferredCumulativeRewards(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"transferredCumulativeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/test/ERC721.sol:ERC721":{source:"contracts/test/ERC721.sol",name:"ERC721",details:"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",constructor:{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."}}},"contracts/test/FaucetToken.sol:FaucetToken":{source:"contracts/test/FaucetToken.sol",name:"FaucetToken",details:"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint8",name:"decimals",type:"uint8"},{internalType:"uint256",name:"dropletAmount",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DROPLET_INTERVAL()":{inputs:[],name:"DROPLET_INTERVAL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_claimedAt(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"_claimedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_dropletAmount()":{inputs:[],name:"_dropletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_isFaucetEnabled()":{inputs:[],name:"_isFaucetEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"claimDroplet()":{inputs:[],name:"claimDroplet",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"disableFaucet()":{inputs:[],name:"disableFaucet",outputs:[],stateMutability:"nonpayable",type:"function"},"enableFaucet()":{inputs:[],name:"enableFaucet",outputs:[],stateMutability:"nonpayable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setDropletAmount(uint256)":{inputs:[{internalType:"uint256",name:"dropletAmount",type:"uint256"}],name:"setDropletAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/test/Token.sol:Token":{source:"contracts/test/Token.sol",name:"Token",details:"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/test/WETH.sol:WETH":{source:"contracts/test/WETH.sol",name:"WETH",details:"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",constructor:{inputs:[{internalType:"string",name:"xName",type:"string"},{internalType:"string",name:"xSymbol",type:"string"},{internalType:"uint8",name:"xDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/BaseToken.sol:BaseToken":{source:"contracts/tokens/BaseToken.sol",name:"BaseToken",title:"Vaporwave Base Token",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint256",name:"_initialSupply",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"inPrivateTransferMode()":{inputs:[],name:"inPrivateTransferMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private transfer mode"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handlers"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token name"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"True if handler is active, false otherwise"},notice:"Set `_handler` as a handler: `_isActive`"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateTransferMode:"True if contract is in private transfer mode"},notice:"Set the contract in private transfer mode: `_inPrivateTransferMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/tokens/MintableBaseToken.sol:MintableBaseToken":{source:"contracts/tokens/MintableBaseToken.sol",name:"MintableBaseToken",title:"Vaporwave Mintable Base Token",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint256",name:"_initialSupply",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to burn tokens from",_amount:"The amount of tokens to burn"},notice:"Burn `_amount` tokens from `_account`"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"inPrivateTransferMode()":{inputs:[],name:"inPrivateTransferMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private transfer mode"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handlers"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of minters"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to mint tokens to",_amount:"The amount of tokens to mint"},notice:"Mint `_amount` tokens to `_account`"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token name"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"True if handler is active, false otherwise"},notice:"Set `_handler` as a handler: `_isActive`"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateTransferMode:"True if contract is in private transfer mode"},notice:"Set the contract in private transfer mode: `_inPrivateTransferMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setMinter(address,bool)":{inputs:[{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isActive:"True to set the account as a minter, false to remove it",_minter:"The account to set as minter"},notice:"Set `_account` as a minter: `_isActive`"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/tokens/TimeDistributor.sol:TimeDistributor":{source:"contracts/tokens/TimeDistributor.sol",name:"TimeDistributor",title:"Vaporwave Time Distributor",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Distribute(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Distribute",type:"event"},"DistributionChange(address,uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"rewardToken",type:"address"}],name:"DistributionChange",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensPerIntervalChange(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensPerIntervalChange",type:"event"}},methods:{"DISTRIBUTION_INTERVAL()":{inputs:[],name:"DISTRIBUTION_INTERVAL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"distribute()":{inputs:[],name:"distribute",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getDistributionAmount(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"getDistributionAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getIntervals(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"getIntervals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRewardToken(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"getRewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"lastDistributionTime(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastDistributionTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardTokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"rewardTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setDistribution(address[],uint256[],address[])":{inputs:[{internalType:"address[]",name:"_receivers",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"address[]",name:"_rewardTokens",type:"address[]"}],name:"setDistribution",outputs:[],stateMutability:"nonpayable",type:"function"},"setTokensPerInterval(address,uint256)":{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setTokensPerInterval",outputs:[],stateMutability:"nonpayable",type:"function"},"tokensPerInterval(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateLastDistributionTime(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"updateLastDistributionTime",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/YieldFarm.sol:YieldFarm":{source:"contracts/tokens/YieldFarm.sol",name:"YieldFarm",title:"Vaporwave Yield Farm",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"address",name:"_stakingToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"allowlistedHandlers(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"allowlistedHandlers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of allowlisted handlers"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"inWhitelistMode()":{inputs:[],name:"inWhitelistMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in allowlist mode"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The name of the token"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setInWhitelistMode(bool)":{inputs:[{internalType:"bool",name:"_inWhitelistMode",type:"bool"}],name:"setInWhitelistMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inWhitelistMode:"True if contract is in allowlist mode"},notice:"Set the contract in allowlist mode: `_inWhitelistMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setWhitelistedHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isWhitelisted",type:"bool"}],name:"setWhitelistedHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isWhitelisted:"True if handler is allowlisted, false otherwise"},notice:"Set `_handler` as a allowlisted handler: `_isWhitelisted`"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"mints yield farm tokens",params:{_amount:"Amount of tokens to stake"},notice:"Stake `_amount` tokens"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"stakingToken()":{inputs:[],name:"stakingToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Staking token address"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply of the token"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"burns yield farm tokens",params:{_amount:"Amount of tokens to unstake"},notice:"Unstake `_amount` tokens"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/tokens/YieldToken.sol:YieldToken":{source:"contracts/tokens/YieldToken.sol",name:"YieldToken",title:"Vaporwave Yield Token",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint256",name:"_initialSupply",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"allowlistedHandlers(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"allowlistedHandlers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of allowlisted handlers"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"inWhitelistMode()":{inputs:[],name:"inWhitelistMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in allowlist mode"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The name of the token"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setInWhitelistMode(bool)":{inputs:[{internalType:"bool",name:"_inWhitelistMode",type:"bool"}],name:"setInWhitelistMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inWhitelistMode:"True if contract is in allowlist mode"},notice:"Set the contract in allowlist mode: `_inWhitelistMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setWhitelistedHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isWhitelisted",type:"bool"}],name:"setWhitelistedHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isWhitelisted:"True if handler is allowlisted, false otherwise"},notice:"Set `_handler` as a allowlisted handler: `_isWhitelisted`"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply of the token"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/tokens/YieldTracker.sol:YieldTracker":{source:"contracts/tokens/YieldTracker.sol",name:"YieldTracker",title:"Vaporwave Yield Tracker",constructor:{inputs:[{internalType:"address",name:"_yieldToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Claim(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claim",type:"event",params:{amount:"The amount of tokens claimed",receiver:"The address claiming the rewards"},notice:"Emitted when rewards are claimed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"PRECISION()":{inputs:[],name:"PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Emits a `Claim` event",params:{_account:"The account to claim rewards from",_receiver:"The account to receive the rewards"},notice:"Claim rewards"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The account to query for the claimable amount"},returns:{_0:"The claimable amount for `_account`"},notice:"Get the claimable amount for `_account`"},"claimableReward(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"claimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cumulativeRewardPerToken()":{inputs:[],name:"cumulativeRewardPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distributor()":{inputs:[],name:"distributor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTokensPerInterval()":{inputs:[],name:"getTokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The tokens per interval"},notice:"Get the tokens per interval"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"previousCumulatedRewardPerToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"previousCumulatedRewardPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setDistributor(address)":{inputs:[{internalType:"address",name:"_distributor",type:"address"}],name:"setDistributor",outputs:[],stateMutability:"nonpayable",type:"function",params:{_distributor:"The new distributor"},notice:"Set the distributor to `_distributor`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateRewards(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"updateRewards",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to update the rewards for"},notice:"Update the rewards for `_account`"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldToken()":{inputs:[],name:"yieldToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/tokens/interfaces/IBaseToken.sol:IBaseToken":{source:"contracts/tokens/interfaces/IBaseToken.sol",name:"IBaseToken",title:"Vaporwave Base Token Interface",methods:{"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IDistributor.sol:IDistributor":{source:"contracts/tokens/interfaces/IDistributor.sol",name:"IDistributor",methods:{"distribute()":{inputs:[],name:"distribute",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getDistributionAmount(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"getDistributionAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRewardToken(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"getRewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokensPerInterval(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"tokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/tokens/interfaces/IMintable.sol:IMintable":{source:"contracts/tokens/interfaces/IMintable.sol",name:"IMintable",title:"Vaporwave Mintable Token Interface",methods:{"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"setMinter(address,bool)":{inputs:[{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setMinter",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IUSDV.sol:IUSDV":{source:"contracts/tokens/interfaces/IUSDV.sol",name:"IUSDV",methods:{"addVault(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"addVault",outputs:[],stateMutability:"nonpayable",type:"function"},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"removeVault(address)":{inputs:[{internalType:"address",name:"_vault",type:"address"}],name:"removeVault",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IVLP.sol:IVLP":{source:"contracts/tokens/interfaces/IVLP.sol",name:"IVLP",methods:{"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IWETH.sol:IWETH":{source:"contracts/tokens/interfaces/IWETH.sol",name:"IWETH",methods:{"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IYieldToken.sol:IYieldToken":{source:"contracts/tokens/interfaces/IYieldToken.sol",name:"IYieldToken",methods:{"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/tokens/interfaces/IYieldTracker.sol:IYieldTracker":{source:"contracts/tokens/interfaces/IYieldTracker.sol",name:"IYieldTracker",methods:{"claim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimable(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokensPerInterval()":{inputs:[],name:"getTokensPerInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateRewards(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"updateRewards",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/vwave/EsVWAVE.sol:EsVWAVE":{source:"contracts/vwave/EsVWAVE.sol",name:"EsVWAVE",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to burn tokens from",_amount:"The amount of tokens to burn"},notice:"Burn `_amount` tokens from `_account`"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"id()":{inputs:[],name:"id",outputs:[{internalType:"string",name:"_name",type:"string"}],stateMutability:"pure",type:"function"},"inPrivateTransferMode()":{inputs:[],name:"inPrivateTransferMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private transfer mode"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handlers"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of minters"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to mint tokens to",_amount:"The amount of tokens to mint"},notice:"Mint `_amount` tokens to `_account`"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token name"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"True if handler is active, false otherwise"},notice:"Set `_handler` as a handler: `_isActive`"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateTransferMode:"True if contract is in private transfer mode"},notice:"Set the contract in private transfer mode: `_inPrivateTransferMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setMinter(address,bool)":{inputs:[{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isActive:"True to set the account as a minter, false to remove it",_minter:"The account to set as minter"},notice:"Set `_account` as a minter: `_isActive`"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/vwave/VLP.sol:VLP":{source:"contracts/vwave/VLP.sol",name:"VLP",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to add as an admin"},notice:"Add `_account` as an admin"},"addNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Adds the account's token balance from the non-staking supply",params:{_account:"The address of the account to add"},notice:"Add a non-staking account"},"admins(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of admins"},"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_owner:"The address that owns the tokens",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"The amount of tokens that `_spender` is allowed to spend for `_owner`"},notice:"Get the allowance of `_spender` for `_owner`"},"allowances(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user approved allowances"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens approved",_spender:"The address that is allowed to spend the tokens"},returns:{_0:"Whether the approval was successful"},notice:"Approve `_spender` to transfer `_amount` tokens"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the token balance"},returns:{_0:"The token balance of `_account`"},notice:"Get the token balance of `_account`"},"balances(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Mapping of user token balances"},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to burn tokens from",_amount:"The amount of tokens to burn"},notice:"Burn `_amount` tokens from `_account`"},"claim(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",returns:{_0:"The token decimals (18)"},notice:"Get the token decimals (18)"},"id()":{inputs:[],name:"id",outputs:[{internalType:"string",name:"_name",type:"string"}],stateMutability:"pure",type:"function"},"inPrivateTransferMode()":{inputs:[],name:"inPrivateTransferMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if contract is in private transfer mode"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handlers"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of minters"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to mint tokens to",_amount:"The amount of tokens to mint"},notice:"Mint `_amount` tokens to `_account`"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token name"},"nonStakingAccounts(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonStakingAccounts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of non-staking accounts"},"nonStakingSupply()":{inputs:[],name:"nonStakingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The non-staked supply"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverClaim(address,address)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"recoverClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"removeAdmin(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The account to remove as an admin"},notice:"Remove `_account` as an admin"},"removeNonStakingAccount(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeNonStakingAccount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Removes the account's token balance from the non-staking supply",params:{_account:"The address of the account to remove"},notice:"Remove a non-staking account"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isActive:"True if handler is active, false otherwise"},notice:"Set `_handler` as a handler: `_isActive`"},"setInPrivateTransferMode(bool)":{inputs:[{internalType:"bool",name:"_inPrivateTransferMode",type:"bool"}],name:"setInPrivateTransferMode",outputs:[],stateMutability:"nonpayable",type:"function",params:{_inPrivateTransferMode:"True if contract is in private transfer mode"},notice:"Set the contract in private transfer mode: `_inPrivateTransferMode`"},"setInfo(string,string)":{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"setInfo",outputs:[],stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the token",_symbol:"The new symbol of the token"},notice:"Set the token name and symbol"},"setMinter(address,bool)":{inputs:[{internalType:"address",name:"_minter",type:"address"},{internalType:"bool",name:"_isActive",type:"bool"}],name:"setMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_isActive:"True to set the account as a minter, false to remove it",_minter:"The account to set as minter"},notice:"Set `_account` as a minter: `_isActive`"},"setYieldTrackers(address[])":{inputs:[{internalType:"address[]",name:"_yieldTrackers",type:"address[]"}],name:"setYieldTrackers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_yieldTrackers:"The array of yield trackers"},notice:"Set the array of yield trackers"},"stakedBalance(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"stakedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_account:"The address to query for the staked token balance"},returns:{_0:"The staked token balance of `_account`"},notice:"Get the staked token balance of `_account`"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The token symbol"},"totalStaked()":{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The total amount staked"},notice:"Get the total amount staked"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total supply"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens to `_recipient`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to transfer",_recipient:"The address to receive the tokens",_sender:"The address of the sender"},returns:{_0:"Whether the transfer was successful or not"},notice:"Transfer `_amount` tokens from `_sender` to `_recipient`"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawToken(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function",details:"to help users who accidentally send their tokens to this contract",params:{_account:"The address of the account to receive the tokens",_amount:"The amount of tokens to withdraw",_token:"The address of the token to withdraw"},notice:"Withdraw tokens to `_account`"},"yieldTrackers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"yieldTrackers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of yield trackers"}}},"contracts/vwave/VWAVE.sol:Address":{source:"contracts/vwave/VWAVE.sol",name:"Address",details:"Collection of functions related to the address type"},"contracts/vwave/VWAVE.sol:Context":{source:"contracts/vwave/VWAVE.sol",name:"Context",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"}},"contracts/vwave/VWAVE.sol:ERC20":{source:"contracts/vwave/VWAVE.sol",name:"ERC20",details:"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/vwave/VWAVE.sol:ERC20Detailed":{source:"contracts/vwave/VWAVE.sol",name:"ERC20Detailed",details:"Optional functions from the ERC20 standard.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint8",name:"decimals",type:"uint8"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."}}},"contracts/vwave/VWAVE.sol:IERC20":{source:"contracts/vwave/VWAVE.sol",name:"IERC20",details:"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."}}},"contracts/vwave/VWAVE.sol:SafeERC20":{source:"contracts/vwave/VWAVE.sol",name:"SafeERC20",title:"SafeERC20",details:"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"contracts/vwave/VWAVE.sol:SafeMath":{source:"contracts/vwave/VWAVE.sol",name:"SafeMath",details:"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always."},"contracts/vwave/VWAVE.sol:VWAVE":{source:"contracts/vwave/VWAVE.sol",name:"VWAVE",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addMinter(address)":{constant:!1,inputs:[{internalType:"address",name:"_minter",type:"address"}],name:"addMinter",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"governance()":{constant:!0,inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"minters(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"minters",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"removeMinter(address)":{constant:!1,inputs:[{internalType:"address",name:"_minter",type:"address"}],name:"removeMinter",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setGovernance(address)":{constant:!1,inputs:[{internalType:"address",name:"_governance",type:"address"}],name:"setGovernance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/vwave/VwaveFloor.sol:VwaveFloor":{source:"contracts/vwave/VwaveFloor.sol",name:"VwaveFloor",title:"Vaporwve VWAVE floor",constructor:{inputs:[{internalType:"address",name:"_vwave",type:"address"},{internalType:"address",name:"_reserveToken",type:"address"},{internalType:"uint256",name:"_backedSupply",type:"uint256"},{internalType:"uint256",name:"_baseMintPrice",type:"uint256"},{internalType:"uint256",name:"_mintMultiplier",type:"uint256"},{internalType:"uint256",name:"_multiplierPrecision",type:"uint256"},{internalType:"uint256",name:"_minAuthorizations",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"ClearAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ClearAction",type:"event",notice:"Emitted when an action is cleared"},"SignAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignAction",type:"event",notice:"Emitted when an action is signed"},"SignalApprove(address,address,uint256,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApprove",type:"event",notice:"Emitted when an approve action is signalled"},"SignalApproveNFT(address,address,uint256,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApproveNFT",type:"event",notice:"Emitted when an approveNFT action is signalled"},"SignalApproveNFTs(address,address,uint256[],bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256[]",name:"tokenIds",type:"uint256[]"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalApproveNFTs",type:"event",notice:"Emitted when an approveNFTs action is signalled"},"SignalPendingAction(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalPendingAction",type:"event",notice:"Emitted when an action is set as pending"},"SignalSetAdmin(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"admin",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalSetAdmin",type:"event",notice:"Emitted when a setAdmin action is signalled"},"SignalSetOwner(address,address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"timelock",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"bytes32",name:"action",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"SignalSetOwner",type:"event",notice:"Emitted when a signalSetOwner action is signalled"}},methods:{"BASIS_POINTS_DIVISOR()":{inputs:[],name:"BASIS_POINTS_DIVISOR",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function",notice:"Helper to avoid truncation errors in basis points calculations"},"BURN_BASIS_POINTS()":{inputs:[],name:"BURN_BASIS_POINTS",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},"PRICE_PRECISION()":{inputs:[],name:"PRICE_PRECISION",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},"actionsNonce()":{inputs:[],name:"actionsNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The current action nonce"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Contract admin"},"approve(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Call a token approve action"},"approveNFT(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Call an NFT approve action"},"approveNFTs(address,address,uint256[],uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"approveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Call an NFT approve action for an array of tokenIds"},"backedSupply()":{inputs:[],name:"backedSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"baseMintPrice()":{inputs:[],name:"baseMintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minOut",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of VWAVE to burn",_minOut:"The minimum amount of reserve tokens to transfer out",_receiver:"The address to receive the reserve tokens"},notice:"Burn VWAVE tokens and transfer reserve tokens to `_receiver`"},"getBurnAmountOut(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getBurnAmountOut",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_amount:"The amount to be burned"},returns:{_0:"The burn amount out"},notice:"Get the burn amount out"},"getMintPrice()":{inputs:[],name:"getMintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The mint price"},notice:"Get the mint price"},"initialize(address[])":{inputs:[{internalType:"address[]",name:"_signers",type:"address[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_signers:"An array of signers"},notice:"Initialize the token manager contract"},"isHandler(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isHandler",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of handlers"},"isInitialized()":{inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"True if the contract has been initialized"},"isSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of valid signers"},"minAuthorizations()":{inputs:[],name:"minAuthorizations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Minimum authorizations required for an action"},"mint(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_maxCost",type:"uint256"},{internalType:"address",name:"_receiver",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"mint refers to increasing the circulating supplythe VWAVE tokens to be transferred out must be pre-transferred into this contract",params:{_amount:"The amount of vwave to transfer out",_maxCost:"The maximum amount of reserve tokens to transfer to this contract",_receiver:"The address to receive the VWAVE tokens"},notice:"Transfer out vwave for reserve tokens"},"mintMultiplier()":{inputs:[],name:"mintMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mintedSupply()":{inputs:[],name:"mintedSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"multiplierPrecision()":{inputs:[],name:"multiplierPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"pendingActions(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"pendingActions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of pending actions"},"receiveNFTs(address,address,uint256[])":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"}],name:"receiveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",details:"The NFTs must be approved by the spender first",params:{_sender:"The address to send the NFTs from",_token:"The address of the NFT contract",_tokenIds:"The array of tokenIds to transfer"},notice:"Transfer an array of NFTs to this contract"},"reserveToken()":{inputs:[],name:"reserveToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Reserve token address"},"setAdmin(address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"setAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_nonce:"The nonce of the action",_target:"The address of the target contract"},notice:"Call a setAdmin action"},"setBackedSupply(uint256)":{inputs:[{internalType:"uint256",name:"_backedSupply",type:"uint256"}],name:"setBackedSupply",outputs:[],stateMutability:"nonpayable",type:"function",details:"Backed supply can only increase",params:{_backedSupply:"The new backed supply"},notice:"Set the backed supply"},"setHandler(address,bool)":{inputs:[{internalType:"address",name:"_handler",type:"address"},{internalType:"bool",name:"_isHandler",type:"bool"}],name:"setHandler",outputs:[],stateMutability:"nonpayable",type:"function",params:{_handler:"The address of the handler",_isHandler:"True if the handler is to be added, false if it is to be removed"},notice:"Set `_handler` as a handler: `_isHandler`"},"setMintMultiplier(uint256)":{inputs:[{internalType:"uint256",name:"_mintMultiplier",type:"uint256"}],name:"setMintMultiplier",outputs:[],stateMutability:"nonpayable",type:"function",details:"Mint multiplier can only increase",params:{_mintMultiplier:"The new mint multiplier"},notice:"Set the mint multiplier"},"setOwner(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Call a setOwner action"},"signApprove(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApprove",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Sign a token approve action"},"signApproveNFT(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApproveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Sign an NFT approve action"},"signApproveNFTs(address,address,uint256[],uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signApproveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Sign an NFT approve action for an array of tokenIds"},"signSetAdmin(address,address,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signSetAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_nonce:"The nonce of the action",_target:"The address of the target contract"},notice:"Sign a setAdmin action"},"signSetOwner(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_nonce",type:"uint256"}],name:"signSetOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_nonce:"The nonce of the action",_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Sign a setOwner action"},"signalApprove(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"signalApprove",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to approve",_spender:"The address of the spender",_token:"The address of the token contract"},notice:"Signal a token approve action"},"signalApproveNFT(address,address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"signalApproveNFT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spender:"The address of the spender",_token:"The address of the token contract",_tokenId:"The tokenId to approve"},notice:"Signal an NFT approve action"},"signalApproveNFTs(address,address,uint256[])":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256[]",name:"_tokenIds",type:"uint256[]"}],name:"signalApproveNFTs",outputs:[],stateMutability:"nonpayable",type:"function",params:{_spender:"The address of the spender",_token:"The address of the token contract",_tokenIds:"An array of tokenIds to approve"},notice:"Signal an NFT approve action for an array of tokenIds"},"signalSetAdmin(address,address)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_admin",type:"address"}],name:"signalSetAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the new admin",_target:"The address of the target contract"},notice:"Signal a setAdmin action"},"signalSetOwner(address,address,address)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"signalSetOwner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_owner:"The address of the new owner",_target:"The address of the target contract",_timelock:"The address of the timelock contract"},notice:"Signal a setOwner action"},"signedActions(address,bytes32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"signedActions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Mapping of addresses to their signed actions"},"signers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"signers",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Array of valid signers"},"signersLength()":{inputs:[],name:"signersLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The length of the signers array"},notice:"Get the lengths of the signers array"},"vwave()":{inputs:[],name:"vwave",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"VWAVE token address"}}},"contracts/vwave/interfaces/IAmmRouter.sol:IAmmRouter":{source:"contracts/vwave/interfaces/IAmmRouter.sol",name:"IAmmRouter",methods:{"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}}},"contracts/vwave/interfaces/IVwaveIou.sol:IVwaveIou":{source:"contracts/vwave/interfaces/IVwaveIou.sol",name:"IVwaveIou",methods:{"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/vwave/interfaces/IVwaveMigrator.sol:IVwaveMigrator":{source:"contracts/vwave/interfaces/IVwaveMigrator.sol",name:"IVwaveMigrator",methods:{"iouTokens(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"iouTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}}};new Wn({el:"#app",router:new vp({routes:[{path:"/",component:Up,props:()=>({json:zp})},{path:"*",component:Dp,props:e=>({json:zp[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(gp)})})()})();